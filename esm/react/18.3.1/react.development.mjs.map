{
  "version": 3,
  "sources": ["../../../../packages/shared/ReactVersion.js", "../../../../packages/shared/ReactSymbols.js", "../../../../packages/react/src/ReactCurrentDispatcher.js", "../../../../packages/react/src/ReactCurrentBatchConfig.js", "../../../../packages/react/src/ReactCurrentActQueue.js", "../../../../packages/react/src/ReactCurrentOwner.js", "../../../../packages/react/src/ReactDebugCurrentFrame.js", "../../../../packages/shared/ReactFeatureFlags.js", "../../../../packages/react/src/ReactServerContextRegistry.js", "../../../../packages/react/src/ReactSharedInternals.js", "../../../../packages/shared/consoleWithStackDev.js", "../../../../packages/react/src/ReactNoopUpdateQueue.js", "../../../../packages/shared/assign.js", "../../../../packages/react/src/ReactBaseClasses.js", "../../../../packages/react/src/ReactCreateRef.js", "../../../../packages/shared/isArray.js", "../../../../packages/shared/CheckStringCoercion.js", "../../../../packages/shared/getComponentNameFromType.js", "../../../../packages/shared/hasOwnProperty.js", "../../../../packages/react/src/ReactElement.js", "../../../../packages/react/src/ReactChildren.js", "../../../../packages/react/src/ReactContext.js", "../../../../packages/react/src/ReactLazy.js", "../../../../packages/react/src/ReactForwardRef.js", "../../../../packages/shared/isValidElementType.js", "../../../../packages/react/src/ReactMemo.js", "../../../../packages/react/src/ReactHooks.js", "../../../../packages/shared/ConsolePatchingDev.js", "../../../../packages/shared/ReactComponentStackFrame.js", "../../../../packages/shared/checkPropTypes.js", "../../../../packages/react/src/ReactElementValidator.js", "../../../../packages/react/src/ReactServerContext.js", "../../../../packages/react/src/ReactStartTransition.js", "../../../../packages/shared/enqueueTask.js", "../../../../packages/react/src/ReactAct.js", "../../../../packages/react/src/React.js", "../src/react.d.mjs"],
  "sourcesContent": ["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// TODO: this is special because it gets imported during build.\n//\n// TODO: 18.0.0 has not been released to NPM;\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\n// When we next publish a release, update the matching TODO in backend/renderer.js\n// TODO: This module is used both by the release scripts and to expose a version\n// at runtime. We should instead inject the version number as part of the build\n// process, and use the ReactVersions.js module as the single source of truth.\nexport default '18.3.1';\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\n  'react.default_value',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\n\n/**\n * Keeps track of the current dispatcher.\n */\nconst ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Dispatcher),\n};\n\nexport default ReactCurrentDispatcher;\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\n\ntype BatchConfig = {\n  transition: BatchConfigTransition | null,\n};\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nconst ReactCurrentBatchConfig: BatchConfig = {\n  transition: null,\n};\n\nexport default ReactCurrentBatchConfig;\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ntype RendererTask = boolean => RendererTask | null;\n\nconst ReactCurrentActQueue = {\n  current: (null: null | Array<RendererTask>),\n\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false,\n};\n\nexport default ReactCurrentActQueue;\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nconst ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Fiber),\n};\n\nexport default ReactCurrentOwner;\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst ReactDebugCurrentFrame = {};\n\nlet currentExtraStackFrame = (null: null | string);\n\nexport function setExtraStackFrame(stack: null | string) {\n  if (__DEV__) {\n    currentExtraStackFrame = stack;\n  }\n}\n\nif (__DEV__) {\n  ReactDebugCurrentFrame.setExtraStackFrame = function(stack: null | string) {\n    if (__DEV__) {\n      currentExtraStackFrame = stack;\n    }\n  };\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = (null: null | (() => string));\n\n  ReactDebugCurrentFrame.getStackAddendum = function(): string {\n    let stack = '';\n\n    // Add an extra top frame while an element is being validated\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    }\n\n    // Delegate to the injected renderer-specific implementation\n    const impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nexport default ReactDebugCurrentFrame;\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\n// -----------------------------------------------------------------------------\n// Land or remove (zero effort)\n//\n// Flags that can likely be deleted or landed without consequences\n// -----------------------------------------------------------------------------\n\nexport const warnAboutDeprecatedLifecycles = true;\nexport const enableComponentStackLocations = true;\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\n\n// -----------------------------------------------------------------------------\n// Land or remove (moderate effort)\n//\n// Flags that can be probably deleted or landed, but might require extra effort\n// like migrating internal callers or performance testing.\n// -----------------------------------------------------------------------------\n\n// This is blocked on adding a symbol polyfill to www.\nexport const enableSymbolFallbackForWWW = false;\n\n// This rolled out to 10% public in www, so we should be able to land, but some\n// internal tests need to be updated. The open source behavior is correct.\nexport const skipUnmountedBoundaries = true;\n\n// Destroy layout effects for components that are hidden because something\n// suspended in an update and recreate them when they are shown again (after the\n// suspended boundary has resolved). Note that this should be an uncommon use\n// case and can be avoided by using the transition API.\n//\n// TODO: Finish rolling out in www\nexport const enableSuspenseLayoutEffectSemantics = true;\n\n// TODO: Finish rolling out in www\nexport const enableClientRenderFallbackOnTextMismatch = true;\n\n// TODO: Need to review this code one more time before landing\nexport const enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay = true;\n\n// Recoil still uses useMutableSource in www, need to delete\nexport const enableUseMutableSource = false;\n\n// Not sure if www still uses this. We don't have a replacement but whatever we\n// replace it with will likely be different than what's already there, so we\n// probably should just delete it as long as nothing in www relies on it.\nexport const enableSchedulerDebugging = false;\n\n// Need to remove didTimeout argument from Scheduler before landing\nexport const disableSchedulerTimeoutInWorkLoop = false;\n\n// -----------------------------------------------------------------------------\n// Slated for removal in the future (significant effort)\n//\n// These are experiments that didn't work out, and never shipped, but we can't\n// delete from the codebase until we migrate internal callers.\n// -----------------------------------------------------------------------------\n\n// Add a callback property to suspense to notify which promises are currently\n// in the update queue. This allows reporting and tracing of what is causing\n// the user to see a loading state.\n//\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\n// hydrated or deleted.\n//\n// This will eventually be replaced by the Transition Tracing proposal.\nexport const enableSuspenseCallback = false;\n\n// Experimental Scope support.\nexport const enableScopeAPI = false;\n\n// Experimental Create Event Handle API.\nexport const enableCreateEventHandleAPI = false;\n\n// This controls whether you get the `.old` modules or the `.new` modules in\n// the react-reconciler package.\nexport const enableNewReconciler = false;\n\n// Support legacy Primer support on internal FB www\nexport const enableLegacyFBSupport = false;\n\n// -----------------------------------------------------------------------------\n// Ongoing experiments\n//\n// These are features that we're either actively exploring or are reasonably\n// likely to include in an upcoming release.\n// -----------------------------------------------------------------------------\n\nexport const enableCache = __EXPERIMENTAL__;\nexport const enableCacheElement = __EXPERIMENTAL__;\n\nexport const enableTransitionTracing = false;\n\n// No known bugs, but needs performance testing\nexport const enableLazyContextPropagation = false;\n\n// FB-only usage. The new API has different semantics.\nexport const enableLegacyHidden = false;\n\n// Enables unstable_avoidThisFallback feature in Fiber\nexport const enableSuspenseAvoidThisFallback = false;\n// Enables unstable_avoidThisFallback feature in Fizz\nexport const enableSuspenseAvoidThisFallbackFizz = false;\n\nexport const enableCPUSuspense = __EXPERIMENTAL__;\n\n// When a node is unmounted, recurse into the Fiber subtree and clean out\n// references. Each level cleans up more fiber fields than the previous level.\n// As far as we know, React itself doesn't leak, but because the Fiber contains\n// cycles, even a single leak in product code can cause us to retain large\n// amounts of memory.\n//\n// The long term plan is to remove the cycles, but in the meantime, we clear\n// additional fields to mitigate.\n//\n// It's an enum so that we can experiment with different levels of\n// aggressiveness.\nexport const deletedTreeCleanUpLevel = 3;\n\n// -----------------------------------------------------------------------------\n// Chopping Block\n//\n// Planned feature deprecations and breaking changes. Sorted roughly in order of\n// when we we plan to enable them.\n// -----------------------------------------------------------------------------\n\n// This flag enables Strict Effects by default. We're not turning this on until\n// after 18 because it requires migration work. Recommendation is to use\n// <StrictMode /> to gradually upgrade components.\n// If TRUE, trees rendered with createRoot will be StrictEffectsMode.\n// If FALSE, these trees will be StrictLegacyMode.\nexport const createRootStrictEffectsByDefault = false;\n\nexport const disableModulePatternComponents = false;\n\nexport const disableLegacyContext = false;\n\nexport const enableUseRefAccessWarning = false;\n\n// Enables time slicing for updates that aren't wrapped in startTransition.\nexport const enableSyncDefaultUpdates = true;\n\n// Adds an opt-in to time slicing for updates that aren't wrapped in\n// startTransition. Only relevant when enableSyncDefaultUpdates is disabled.\nexport const allowConcurrentByDefault = false;\n\n// Updates that occur in the render phase are not officially supported. But when\n// they do occur, we defer them to a subsequent render by picking a lane that's\n// not currently rendering. We treat them the same as if they came from an\n// interleaved event. Remove this flag once we have migrated to the\n// new behavior.\n// NOTE: Not sure if we'll end up doing this or not.\nexport const deferRenderPhaseUpdateToNextBatch = false;\n\n// -----------------------------------------------------------------------------\n// React DOM Chopping Block\n//\n// Similar to main Chopping Block but only flags related to React DOM. These are\n// grouped because we will likely batch all of them into a single major release.\n// -----------------------------------------------------------------------------\n\n// Disable support for comment nodes as React DOM containers. Already disabled\n// in open source, but www codebase still relies on it. Need to remove.\nexport const disableCommentsAsDOMContainers = true;\n\n// Disable javascript: URL strings in href for XSS protection.\nexport const disableJavaScriptURLs = false;\n\nexport const enableTrustedTypesIntegration = false;\n\n// Prevent the value and checked attributes from syncing with their related\n// DOM properties\nexport const disableInputAttributeSyncing = false;\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty\n// strings. This prevents e.g. <img src=\"\"> from making an unnecessary HTTP\n// request for certain browsers.\nexport const enableFilterEmptyStringAttributesDOM = false;\n\n// Changes the behavior for rendering custom elements in both server rendering\n// and client rendering, mostly to allow JSX attributes to apply to the custom\n// element's object properties instead of only HTML attributes.\n// https://github.com/facebook/react/issues/11347\nexport const enableCustomElementPropertySupport = __EXPERIMENTAL__;\n\n// Disables children for <textarea> elements\nexport const disableTextareaChildren = false;\n\n// -----------------------------------------------------------------------------\n// JSX Chopping Block\n//\n// Similar to main Chopping Block but only flags related to JSX. These are\n// grouped because we will likely batch all of them into a single major release.\n// -----------------------------------------------------------------------------\n\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\n\n// Part of the simplification of React.createElement so we can eventually move\n// from React.createElement to React.jsx\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\nexport const warnAboutDefaultPropsOnFunctionComponents = true; // deprecate later, not 18.0\n\n// Enables a warning when trying to spread a 'key' to an element;\n// a deprecated pattern we want to get rid of in the future\nexport const warnAboutSpreadingKeyToJSX = true;\n\nexport const warnAboutStringRefs = true;\n\n// -----------------------------------------------------------------------------\n// Debugging and DevTools\n// -----------------------------------------------------------------------------\n\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\n// for an experimental timeline tool.\nexport const enableSchedulingProfiler = __PROFILE__;\n\n// Helps identify side effects in render-phase lifecycle hooks and setState\n// reducers by double invoking them in StrictLegacyMode.\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n\n// Helps identify code that is not safe for planned Offscreen API and Suspense semantics;\n// this feature flag only impacts StrictEffectsMode.\nexport const enableStrictEffects = __DEV__;\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\n\n// Gather advanced timing metrics for Profiler subtrees.\nexport const enableProfilerTimer = __PROFILE__;\n\n// Record durations for commit and passive effects phases.\nexport const enableProfilerCommitHooks = __PROFILE__;\n\n// Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\n\n// Adds verbose console logging for e.g. state updates, suspense, and work loop\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\nexport const enableDebugTracing = false;\n\n// Track which Fiber(s) schedule render work.\nexport const enableUpdaterTracking = __PROFILE__;\n\n// Only enabled in RN, related to enableComponentStackLocations\nexport const disableNativeComponentFrames = false;\nexport const enableServerContext = __EXPERIMENTAL__;\n\n// Internal only.\nexport const enableGetInspectorDataForInstanceInProduction = false;\n\n// Profiler API accepts a function to be called when a nested update is scheduled.\n// This callback accepts the component type (class instance or function) the update is scheduled for.\nexport const enableProfilerNestedUpdateScheduledHook = false;\n\nexport const consoleManagedByDevToolsDuringStrictMode = true;\n", "import type {ReactServerContext} from 'shared/ReactTypes';\n\nexport const ContextRegistry: {\n  [globalName: string]: ReactServerContext<any>,\n} = {};\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\nimport ReactCurrentOwner from './ReactCurrentOwner';\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\nimport {ContextRegistry} from './ReactServerContextRegistry';\n\nconst ReactSharedInternals = {\n  ReactCurrentDispatcher,\n  ReactCurrentBatchConfig,\n  ReactCurrentOwner,\n};\n\nif (__DEV__) {\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\nif (enableServerContext) {\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\n}\n\nexport default ReactSharedInternals;\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nlet suppressWarning = false;\nexport function setSuppressWarning(newSuppressWarning) {\n  if (__DEV__) {\n    suppressWarning = newSuppressWarning;\n  }\n}\n\n// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('warn', format, args);\n    }\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  if (__DEV__) {\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    // eslint-disable-next-line react-internal/safe-string-coercion\n    const argsWithFormat = args.map(item => String(item));\n    // Careful: RN currently depends on this prefix\n    argsWithFormat.unshift('Warning: ' + format);\n    // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  if (__DEV__) {\n    const constructor = publicInstance.constructor;\n    const componentName =\n      (constructor && (constructor.displayName || constructor.name)) ||\n      'ReactClass';\n    const warningKey = `${componentName}.${callerName}`;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    console.error(\n      \"Can't call %s on a component that is not yet mounted. \" +\n        'This is a no-op, but it might indicate a bug in your application. ' +\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\n        'class property with the desired state in the %s component.',\n      callerName,\n      componentName,\n    );\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nconst ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function(publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function(\n    publicInstance,\n    completeState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function(\n    publicInstance,\n    partialState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'setState');\n  },\n};\n\nexport default ReactNoopUpdateQueue;\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\nimport assign from 'shared/assign';\n\nconst emptyObject = {};\nif (__DEV__) {\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function(partialState, callback) {\n  if (\n    typeof partialState !== 'object' &&\n    typeof partialState !== 'function' &&\n    partialState != null\n  ) {\n    throw new Error(\n      'setState(...): takes an object of state variables to update or a ' +\n        'function which returns an object of state variables.',\n    );\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function(callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (__DEV__) {\n  const deprecatedAPIs = {\n    isMounted: [\n      'isMounted',\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\n        'componentWillUnmount to prevent memory leaks.',\n    ],\n    replaceState: [\n      'replaceState',\n      'Refactor your code to use setState instead (see ' +\n        'https://github.com/facebook/react/issues/3236).',\n    ],\n  };\n  const defineDeprecationWarning = function(methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function() {\n        console.warn(\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\n          info[0],\n          info[1],\n        );\n        return undefined;\n      },\n    });\n  };\n  for (const fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\nexport {Component, PureComponent};\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {RefObject} from 'shared/ReactTypes';\n\n// an immutable object with a single mutable value\nexport function createRef(): RefObject {\n  const refObject = {\n    current: null,\n  };\n  if (__DEV__) {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value: mixed): string {\n  if (__DEV__) {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    const hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    const type =\n      (hasToStringTag && (value: any)[Symbol.toStringTag]) ||\n      (value: any).constructor.name ||\n      'Object';\n    return type;\n  }\n}\n\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction willCoercionThrow(value: mixed): boolean {\n  if (__DEV__) {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value: mixed) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + (value: any);\n}\n\nexport function checkAttributeStringCoercion(\n  value: mixed,\n  attributeName: string,\n) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` attribute is an unsupported type %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        attributeName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkKeyStringCoercion(value: mixed) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided key is an unsupported type %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkPropStringCoercion(value: mixed, propName: string) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` prop is an unsupported type %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        propName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkCSSPropertyStringCoercion(value: mixed, propName: string) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` CSS property is an unsupported type %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        propName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkHtmlStringCoercion(value: mixed) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided HTML markup uses a value of unsupported type %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkFormFieldValueStringCoercion(value: mixed) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'Form field values (value, checked, defaultValue, or defaultChecked props)' +\n          ' must be strings, not %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_CACHE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n  REACT_SERVER_CONTEXT_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {\n  enableServerContext,\n  enableTransitionTracing,\n  enableCache,\n} from './ReactFeatureFlags';\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const displayName = (outerType: any).displayName;\n  if (displayName) {\n    return displayName;\n  }\n  const functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\n}\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\nexport default function getComponentNameFromType(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      console.error(\n        'Received an unexpected object in getComponentNameFromType(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n    case REACT_CACHE_TYPE:\n      if (enableCache) {\n        return 'Cache';\n      }\n    // eslint-disable-next-line no-fallthrough\n    case REACT_TRACING_MARKER_TYPE:\n      if (enableTransitionTracing) {\n        return 'TracingMarker';\n      }\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        const context: ReactContext<any> = (type: any);\n        return getContextName(context) + '.Consumer';\n      case REACT_PROVIDER_TYPE:\n        const provider: ReactProviderType<any> = (type: any);\n        return getContextName(provider._context) + '.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        const outerName = (type: any).displayName || null;\n        if (outerName !== null) {\n          return outerName;\n        }\n        return getComponentNameFromType(type.type) || 'Memo';\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          return getComponentNameFromType(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n      case REACT_SERVER_CONTEXT_TYPE:\n        if (enableServerContext) {\n          const context2 = ((type: any): ReactContext<any>);\n          return (context2.displayName || context2._globalName) + '.Provider';\n        }\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n  return null;\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\nimport assign from 'shared/assign';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\n\nimport ReactCurrentOwner from './ReactCurrentOwner';\n\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true,\n};\n\nlet specialPropKeyWarningShown,\n  specialPropRefWarningShown,\n  didWarnAboutStringRefs;\n\nif (__DEV__) {\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'ref')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'key')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  const warnAboutAccessingKey = function() {\n    if (__DEV__) {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n        console.error(\n          '%s: `key` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://reactjs.org/link/special-props)',\n          displayName,\n        );\n      }\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true,\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  const warnAboutAccessingRef = function() {\n    if (__DEV__) {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n        console.error(\n          '%s: `ref` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://reactjs.org/link/special-props)',\n          displayName,\n        );\n      }\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true,\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  if (__DEV__) {\n    if (\n      typeof config.ref === 'string' &&\n      ReactCurrentOwner.current &&\n      config.__self &&\n      ReactCurrentOwner.current.stateNode !== config.__self\n    ) {\n      const componentName = getComponentNameFromType(\n        ReactCurrentOwner.current.type,\n      );\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        console.error(\n          'Component \"%s\" contains the string ref \"%s\". ' +\n            'Support for string refs will be removed in a future major release. ' +\n            'This case cannot be automatically converted to an arrow function. ' +\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://reactjs.org/link/strict-mode-string-ref',\n          componentName,\n          config.ref,\n        );\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\n  const element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner,\n  };\n\n  if (__DEV__) {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false,\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self,\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source,\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsx(type, config, maybeKey) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref;\n  }\n\n  // Remaining properties are added to a new props object\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    ref,\n    undefined,\n    undefined,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxDEV(type, config, maybeKey, source, self) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref;\n    warnIfStringRefCannotBeAutoConverted(config);\n  }\n\n  // Remaining properties are added to a new props object\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  if (key || ref) {\n    const displayName =\n      typeof type === 'function'\n        ? type.displayName || type.name || 'Unknown'\n        : type;\n    if (key) {\n      defineKeyPropWarningGetter(props, displayName);\n    }\n    if (ref) {\n      defineRefPropWarningGetter(props, displayName);\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nexport function createElement(type, config, children) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n  let self = null;\n  let source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      if (__DEV__) {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (__DEV__) {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (__DEV__) {\n    if (key || ref) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\nexport function createFactory(type) {\n  const factory = createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook: remove it\n  factory.type = type;\n  return factory;\n}\n\nexport function cloneAndReplaceKey(oldElement, newKey) {\n  const newElement = ReactElement(\n    oldElement.type,\n    newKey,\n    oldElement.ref,\n    oldElement._self,\n    oldElement._source,\n    oldElement._owner,\n    oldElement.props,\n  );\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nexport function cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\n    );\n  }\n\n  let propName;\n\n  // Original props are copied\n  const props = assign({}, element.props);\n\n  // Reserved names are extracted\n  let key = element.key;\n  let ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  const self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  const source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  let owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    let defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nexport function isValidElement(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport isArray from 'shared/isArray';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_PORTAL_TYPE,\n} from 'shared/ReactSymbols';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\n\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\n\nconst SEPARATOR = '.';\nconst SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key: string): string {\n  const escapeRegex = /[=:]/g;\n  const escaperLookup = {\n    '=': '=0',\n    ':': '=2',\n  };\n  const escapedString = key.replace(escapeRegex, function(match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nlet didWarnAboutMaps = false;\n\nconst userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text: string): string {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getElementKey(element: any, index: number): string {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    if (__DEV__) {\n      checkKeyStringCoercion(element.key);\n    }\n    return escape('' + element.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction mapIntoArray(\n  children: ?ReactNodeList,\n  array: Array<React$Node>,\n  escapedPrefix: string,\n  nameSoFar: string,\n  callback: (?React$Node) => ?ReactNodeList,\n): number {\n  const type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  let invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch ((children: any).$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    const child = children;\n    let mappedChild = callback(child);\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n    const childKey =\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\n    if (isArray(mappedChild)) {\n      let escapedChildKey = '';\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        if (__DEV__) {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n        mappedChild = cloneAndReplaceKey(\n          mappedChild,\n          // Keep both the (mapped) and old keys if they differ, just as\n          // traverseAllChildren used to do for objects as children\n          escapedPrefix +\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\n              ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n                // eslint-disable-next-line react-internal/safe-string-coercion\n                escapeUserProvidedKey('' + mappedChild.key) + '/'\n              : '') +\n            childKey,\n        );\n      }\n      array.push(mappedChild);\n    }\n    return 1;\n  }\n\n  let child;\n  let nextName;\n  let subtreeCount = 0; // Count of children found in the current subtree.\n  const nextNamePrefix =\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(\n        child,\n        array,\n        escapedPrefix,\n        nextName,\n        callback,\n      );\n    }\n  } else {\n    const iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      const iterableChildren: Iterable<React$Node> & {\n        entries: any,\n      } = (children: any);\n\n      if (__DEV__) {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            console.warn(\n              'Using Maps as children is not supported. ' +\n                'Use an array of keyed ReactElements instead.',\n            );\n          }\n          didWarnAboutMaps = true;\n        }\n      }\n\n      const iterator = iteratorFn.call(iterableChildren);\n      let step;\n      let ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(\n          child,\n          array,\n          escapedPrefix,\n          nextName,\n          callback,\n        );\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      const childrenString = String((children: any));\n\n      throw new Error(\n        `Objects are not valid as a React child (found: ${\n          childrenString === '[object Object]'\n            ? 'object with keys {' +\n              Object.keys((children: any)).join(', ') +\n              '}'\n            : childrenString\n        }). ` +\n          'If you meant to render a collection of children, use an array ' +\n          'instead.',\n      );\n    }\n  }\n\n  return subtreeCount;\n}\n\ntype MapFunc = (child: ?React$Node) => ?ReactNodeList;\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(\n  children: ?ReactNodeList,\n  func: MapFunc,\n  context: mixed,\n): ?Array<React$Node> {\n  if (children == null) {\n    return children;\n  }\n  const result = [];\n  let count = 0;\n  mapIntoArray(children, result, '', '', function(child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children: ?ReactNodeList): number {\n  let n = 0;\n  mapChildren(children, () => {\n    n++;\n    // Don't return anything\n  });\n  return n;\n}\n\ntype ForEachFunc = (child: ?React$Node) => void;\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(\n  children: ?ReactNodeList,\n  forEachFunc: ForEachFunc,\n  forEachContext: mixed,\n): void {\n  mapChildren(\n    children,\n    function() {\n      forEachFunc.apply(this, arguments);\n      // Don't return anything.\n    },\n    forEachContext,\n  );\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\n  return mapChildren(children, child => child) || [];\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild<T>(children: T): T {\n  if (!isValidElement(children)) {\n    throw new Error(\n      'React.Children.only expected to receive a single React element child.',\n    );\n  }\n\n  return children;\n}\n\nexport {\n  forEachChildren as forEach,\n  mapChildren as map,\n  countChildren as count,\n  onlyChild as only,\n  toArray,\n};\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\n\nimport type {ReactContext} from 'shared/ReactTypes';\n\nexport function createContext<T>(defaultValue: T): ReactContext<T> {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n\n  const context: ReactContext<T> = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: (null: any),\n    Consumer: (null: any),\n\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: (null: any),\n    _globalName: (null: any),\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context,\n  };\n\n  let hasWarnedAboutUsingNestedContextConsumers = false;\n  let hasWarnedAboutUsingConsumerProvider = false;\n  let hasWarnedAboutDisplayNameOnConsumer = false;\n\n  if (__DEV__) {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    const Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n    };\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get() {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n            console.error(\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\n                'a future major release. Did you mean to render <Context.Provider> instead?',\n            );\n          }\n          return context.Provider;\n        },\n        set(_Provider) {\n          context.Provider = _Provider;\n        },\n      },\n      _currentValue: {\n        get() {\n          return context._currentValue;\n        },\n        set(_currentValue) {\n          context._currentValue = _currentValue;\n        },\n      },\n      _currentValue2: {\n        get() {\n          return context._currentValue2;\n        },\n        set(_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        },\n      },\n      _threadCount: {\n        get() {\n          return context._threadCount;\n        },\n        set(_threadCount) {\n          context._threadCount = _threadCount;\n        },\n      },\n      Consumer: {\n        get() {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n            console.error(\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\n            );\n          }\n          return context.Consumer;\n        },\n      },\n      displayName: {\n        get() {\n          return context.displayName;\n        },\n        set(displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            console.warn(\n              'Setting `displayName` on Context.Consumer has no effect. ' +\n                \"You should set it directly on the context with Context.displayName = '%s'.\",\n              displayName,\n            );\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        },\n      },\n    });\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n    context.Consumer = Consumer;\n  } else {\n    context.Consumer = context;\n  }\n\n  if (__DEV__) {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\n\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\n\nconst Uninitialized = -1;\nconst Pending = 0;\nconst Resolved = 1;\nconst Rejected = 2;\n\ntype UninitializedPayload<T> = {\n  _status: -1,\n  _result: () => Thenable<{default: T, ...}>,\n};\n\ntype PendingPayload = {\n  _status: 0,\n  _result: Wakeable,\n};\n\ntype ResolvedPayload<T> = {\n  _status: 1,\n  _result: {default: T},\n};\n\ntype RejectedPayload = {\n  _status: 2,\n  _result: mixed,\n};\n\ntype Payload<T> =\n  | UninitializedPayload<T>\n  | PendingPayload\n  | ResolvedPayload<T>\n  | RejectedPayload;\n\nexport type LazyComponent<T, P> = {\n  $$typeof: Symbol | number,\n  _payload: P,\n  _init: (payload: P) => T,\n};\n\nfunction lazyInitializer<T>(payload: Payload<T>): T {\n  if (payload._status === Uninitialized) {\n    const ctor = payload._result;\n    const thenable = ctor();\n    // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n    thenable.then(\n      moduleObject => {\n        if (payload._status === Pending || payload._status === Uninitialized) {\n          // Transition to the next state.\n          const resolved: ResolvedPayload<T> = (payload: any);\n          resolved._status = Resolved;\n          resolved._result = moduleObject;\n        }\n      },\n      error => {\n        if (payload._status === Pending || payload._status === Uninitialized) {\n          // Transition to the next state.\n          const rejected: RejectedPayload = (payload: any);\n          rejected._status = Rejected;\n          rejected._result = error;\n        }\n      },\n    );\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      const pending: PendingPayload = (payload: any);\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n  if (payload._status === Resolved) {\n    const moduleObject = payload._result;\n    if (__DEV__) {\n      if (moduleObject === undefined) {\n        console.error(\n          'lazy: Expected the result of a dynamic imp' +\n            'ort() call. ' +\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' +\n            \"ort('./MyComponent'))\\n\\n\" +\n            'Did you accidentally put curly braces around the import?',\n          moduleObject,\n        );\n      }\n    }\n    if (__DEV__) {\n      if (!('default' in moduleObject)) {\n        console.error(\n          'lazy: Expected the result of a dynamic imp' +\n            'ort() call. ' +\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' +\n            \"ort('./MyComponent'))\",\n          moduleObject,\n        );\n      }\n    }\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nexport function lazy<T>(\n  ctor: () => Thenable<{default: T, ...}>,\n): LazyComponent<T, Payload<T>> {\n  const payload: Payload<T> = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor,\n  };\n\n  const lazyType: LazyComponent<T, Payload<T>> = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer,\n  };\n\n  if (__DEV__) {\n    // In production, this would just set it on the object.\n    let defaultProps;\n    let propTypes;\n    // $FlowFixMe\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get() {\n          return defaultProps;\n        },\n        set(newDefaultProps) {\n          console.error(\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          defaultProps = newDefaultProps;\n          // Match production behavior more closely:\n          // $FlowFixMe\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true,\n          });\n        },\n      },\n      propTypes: {\n        configurable: true,\n        get() {\n          return propTypes;\n        },\n        set(newPropTypes) {\n          console.error(\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          propTypes = newPropTypes;\n          // Match production behavior more closely:\n          // $FlowFixMe\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true,\n          });\n        },\n      },\n    });\n  }\n\n  return lazyType;\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nexport function forwardRef<Props, ElementType: React$ElementType>(\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\n) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error(\n        'forwardRef requires a render function but received a `memo` ' +\n          'component. Instead of forwardRef(memo(...)), use ' +\n          'memo(forwardRef(...)).',\n      );\n    } else if (typeof render !== 'function') {\n      console.error(\n        'forwardRef requires a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        console.error(\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\n          render.length === 1\n            ? 'Did you forget to use the ref parameter?'\n            : 'Any additional parameter will be undefined.',\n        );\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        console.error(\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\n            'Did you accidentally pass a React component?',\n        );\n      }\n    }\n  }\n\n  const elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render,\n  };\n  if (__DEV__) {\n    let ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function() {\n        return ownName;\n      },\n      set: function(name) {\n        ownName = name;\n\n        // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      },\n    });\n  }\n  return elementType;\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_CACHE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n} from 'shared/ReactSymbols';\nimport {\n  enableScopeAPI,\n  enableCacheElement,\n  enableTransitionTracing,\n  enableDebugTracing,\n  enableLegacyHidden,\n  enableSymbolFallbackForWWW,\n} from './ReactFeatureFlags';\n\nlet REACT_MODULE_REFERENCE;\nif (enableSymbolFallbackForWWW) {\n  if (typeof Symbol === 'function') {\n    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n  } else {\n    REACT_MODULE_REFERENCE = 0;\n  }\n} else {\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nexport default function isValidElementType(type: mixed) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  }\n\n  // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n  if (\n    type === REACT_FRAGMENT_TYPE ||\n    type === REACT_PROFILER_TYPE ||\n    (enableDebugTracing && type === REACT_DEBUG_TRACING_MODE_TYPE) ||\n    type === REACT_STRICT_MODE_TYPE ||\n    type === REACT_SUSPENSE_TYPE ||\n    type === REACT_SUSPENSE_LIST_TYPE ||\n    (enableLegacyHidden && type === REACT_LEGACY_HIDDEN_TYPE) ||\n    type === REACT_OFFSCREEN_TYPE ||\n    (enableScopeAPI && type === REACT_SCOPE_TYPE) ||\n    (enableCacheElement && type === REACT_CACHE_TYPE) ||\n    (enableTransitionTracing && type === REACT_TRACING_MARKER_TYPE)\n  ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (\n      type.$$typeof === REACT_LAZY_TYPE ||\n      type.$$typeof === REACT_MEMO_TYPE ||\n      type.$$typeof === REACT_PROVIDER_TYPE ||\n      type.$$typeof === REACT_CONTEXT_TYPE ||\n      type.$$typeof === REACT_FORWARD_REF_TYPE ||\n      // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      type.$$typeof === REACT_MODULE_REFERENCE ||\n      type.getModuleId !== undefined\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nimport isValidElementType from 'shared/isValidElementType';\n\nexport function memo<Props>(\n  type: React$ElementType,\n  compare?: (oldProps: Props, newProps: Props) => boolean,\n) {\n  if (__DEV__) {\n    if (!isValidElementType(type)) {\n      console.error(\n        'memo: The first argument must be a component. Instead ' +\n          'received: %s',\n        type === null ? 'null' : typeof type,\n      );\n    }\n  }\n  const elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type,\n    compare: compare === undefined ? null : compare,\n  };\n  if (__DEV__) {\n    let ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function() {\n        return ownName;\n      },\n      set: function(name) {\n        ownName = name;\n\n        // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      },\n    });\n  }\n  return elementType;\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n  StartTransitionOptions,\n} from 'shared/ReactTypes';\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\n\ntype BasicStateAction<S> = (S => S) | S;\ntype Dispatch<A> = A => void;\n\nfunction resolveDispatcher() {\n  const dispatcher = ReactCurrentDispatcher.current;\n  if (__DEV__) {\n    if (dispatcher === null) {\n      console.error(\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n          ' one of the following reasons:\\n' +\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n          '2. You might be breaking the Rules of Hooks\\n' +\n          '3. You might have more than one copy of React in the same app\\n' +\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n      );\n    }\n  }\n  // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n  return ((dispatcher: any): Dispatcher);\n}\n\nexport function getCacheSignal(): AbortSignal {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.getCacheSignal();\n}\n\nexport function getCacheForType<T>(resourceType: () => T): T {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.getCacheForType(resourceType);\n}\n\nexport function useContext<T>(Context: ReactContext<T>): T {\n  const dispatcher = resolveDispatcher();\n  if (__DEV__) {\n    // TODO: add a more generic warning for invalid values.\n    if ((Context: any)._context !== undefined) {\n      const realContext = (Context: any)._context;\n      // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n      if (realContext.Consumer === Context) {\n        console.error(\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\n        );\n      } else if (realContext.Provider === Context) {\n        console.error(\n          'Calling useContext(Context.Provider) is not supported. ' +\n            'Did you mean to call useContext(Context) instead?',\n        );\n      }\n    }\n  }\n  return dispatcher.useContext(Context);\n}\n\nexport function useState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\n\nexport function useReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\n\nexport function useRef<T>(initialValue: T): {|current: T|} {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\n\nexport function useEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\n\nexport function useInsertionEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\n\nexport function useLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\n\nexport function useCallback<T>(\n  callback: T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\n\nexport function useMemo<T>(\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\n\nexport function useImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\n\nexport function useDebugValue<T>(\n  value: T,\n  formatterFn: ?(value: T) => mixed,\n): void {\n  if (__DEV__) {\n    const dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nexport const emptyObject = {};\n\nexport function useTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\n\nexport function useDeferredValue<T>(value: T): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\n\nexport function useId(): string {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\n\nexport function useMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\n}\n\nexport function useSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n  );\n}\n\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.useCacheRefresh();\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\n\nlet disabledDepth = 0;\nlet prevLog;\nlet prevInfo;\nlet prevWarn;\nlet prevError;\nlet prevGroup;\nlet prevGroupCollapsed;\nlet prevGroupEnd;\n\nfunction disabledLog() {}\ndisabledLog.__reactDisabledLog = true;\n\nexport function disableLogs(): void {\n  if (__DEV__) {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd;\n      // https://github.com/facebook/react/issues/19099\n      const props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props,\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    disabledDepth++;\n  }\n}\n\nexport function reenableLogs(): void {\n  if (__DEV__) {\n    disabledDepth--;\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      const props = {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        log: {...props, value: prevLog},\n        info: {...props, value: prevInfo},\n        warn: {...props, value: prevWarn},\n        error: {...props, value: prevError},\n        group: {...props, value: prevGroup},\n        groupCollapsed: {...props, value: prevGroupCollapsed},\n        groupEnd: {...props, value: prevGroupEnd},\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    if (disabledDepth < 0) {\n      console.error(\n        'disabledDepth fell below zero. ' +\n          'This is a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Source} from 'shared/ReactElementType';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {\n  enableComponentStackLocations,\n  disableNativeComponentFrames,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\n\nlet prefix;\nexport function describeBuiltInComponentFrame(\n  name: string,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = (match && match[1]) || '';\n      }\n    }\n    // We use the prefix to ensure our stacks line up with native stack frames.\n    return '\\n' + prefix + name;\n  } else {\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nlet reentry = false;\nlet componentFrameCache;\nif (__DEV__) {\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nexport function describeNativeComponentFrame(\n  fn: Function,\n  construct: boolean,\n): string {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (disableNativeComponentFrames || !fn || reentry) {\n    return '';\n  }\n\n  if (__DEV__) {\n    const frame = componentFrameCache.get(fn);\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  let control;\n\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n  // $FlowFixMe It does accept undefined.\n  Error.prepareStackTrace = undefined;\n  let previousDispatcher;\n  if (__DEV__) {\n    previousDispatcher = ReactCurrentDispatcher.current;\n    // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      const Fake = function() {\n        throw Error();\n      };\n      // $FlowFixMe\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function() {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        },\n      });\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sample.stack.split('\\n');\n      const controlLines = control.stack.split('\\n');\n      let s = sampleLines.length - 1;\n      let c = controlLines.length - 1;\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--;\n              // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n                if (fn.displayName && frame.includes('<anonymous>')) {\n                  frame = frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (__DEV__) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, frame);\n                  }\n                }\n                // Return the line we found.\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n    if (__DEV__) {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  }\n  // Fallback to just using the name if we couldn't make it throw.\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n  if (__DEV__) {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n  return syntheticFrame;\n}\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(\n  name: null | string,\n  source: void | null | Source,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (__DEV__ && source) {\n    const path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n    if (/^index\\./.test(fileName)) {\n      const match = path.match(BEFORE_SLASH_RE);\n      if (match) {\n        const pathBeforeSlash = match[1];\n        if (pathBeforeSlash) {\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n          fileName = folderName + '/' + fileName;\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nexport function describeClassComponentFrame(\n  ctor: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(ctor, true);\n  } else {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\n\nexport function describeFunctionComponentFrame(\n  fn: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(fn, false);\n  } else {\n    if (!fn) {\n      return '';\n    }\n    const name = fn.displayName || fn.name || null;\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function describeUnknownElementTypeFrameInDEV(\n  type: any,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (!__DEV__) {\n    return '';\n  }\n  if (type == null) {\n    return '';\n  }\n  if (typeof type === 'function') {\n    if (enableComponentStackLocations) {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    } else {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn,\n          );\n        } catch (x) {}\n      }\n    }\n  }\n  return '';\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst loggedTypeFailures = {};\n\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport hasOwnProperty from 'shared/hasOwnProperty';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null,\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nexport default function checkPropTypes(\n  typeSpecs: Object,\n  values: Object,\n  location: string,\n  componentName: ?string,\n  element?: any,\n): void {\n  if (__DEV__) {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    const has = Function.call.bind(hasOwnProperty);\n    for (const typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        let error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            const err = Error(\n              (componentName || 'React class') +\n                ': ' +\n                location +\n                ' type `' +\n                typeSpecName +\n                '` is invalid; ' +\n                'it must be a function, usually from the `prop-types` package, but received `' +\n                typeof typeSpecs[typeSpecName] +\n                '`.' +\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\n          );\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n          console.error(\n            '%s: type specification of %s' +\n              ' `%s` is invalid; the type checker ' +\n              'function must return `null` or an `Error` but returned a %s. ' +\n              'You may have forgotten to pass an argument to the type checker ' +\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n              'shape all require an argument).',\n            componentName || 'React class',\n            location,\n            typeSpecName,\n            typeof error,\n          );\n          setCurrentlyValidatingElement(null);\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          setCurrentlyValidatingElement(element);\n          console.error('Failed %s type: %s', location, error.message);\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\nimport isValidElementType from 'shared/isValidElementType';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {\n  getIteratorFn,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_ELEMENT_TYPE,\n} from 'shared/ReactSymbols';\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\nimport checkPropTypes from 'shared/checkPropTypes';\nimport isArray from 'shared/isArray';\n\nimport ReactCurrentOwner from './ReactCurrentOwner';\nimport {\n  isValidElement,\n  createElement,\n  cloneElement,\n  jsxDEV,\n} from './ReactElement';\nimport {setExtraStackFrame} from './ReactDebugCurrentFrame';\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\nimport hasOwnProperty from 'shared/hasOwnProperty';\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null,\n      );\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nlet propTypesMisspellWarningShown;\n\nif (__DEV__) {\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    const name = getComponentNameFromType(ReactCurrentOwner.current.type);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    const lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nconst ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  let info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    const parentName =\n      typeof parentType === 'string'\n        ? parentType\n        : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  let childOwner = '';\n  if (\n    element &&\n    element._owner &&\n    element._owner !== ReactCurrentOwner.current\n  ) {\n    // Give the component that originally created this child.\n    childOwner = ` It was passed a child from ${getComponentNameFromType(\n      element._owner.type,\n    )}.`;\n  }\n\n  if (__DEV__) {\n    setCurrentlyValidatingElement(element);\n    console.error(\n      'Each child in a list should have a unique \"key\" prop.' +\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\n      currentComponentErrorInfo,\n      childOwner,\n    );\n    setCurrentlyValidatingElement(null);\n  }\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (isArray(node)) {\n    for (let i = 0; i < node.length; i++) {\n      const child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    const iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        const iterator = iteratorFn.call(node);\n        let step;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  if (__DEV__) {\n    const type = element.type;\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n    let propTypes;\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (\n      typeof type === 'object' &&\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        type.$$typeof === REACT_MEMO_TYPE)\n    ) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      const name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true;\n      // Intentionally inside to avoid triggering lazy initializers:\n      const name = getComponentNameFromType(type);\n      console.error(\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\n        name || 'Unknown',\n      );\n    }\n    if (\n      typeof type.getDefaultProps === 'function' &&\n      !type.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps is only used on classic React.createClass ' +\n          'definitions. Use a static property named `defaultProps` instead.',\n      );\n    }\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  if (__DEV__) {\n    const keys = Object.keys(fragment.props);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n        console.error(\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\n            'React.Fragment can only have `key` and `children` props.',\n          key,\n        );\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nconst didWarnAboutKeySpread = {};\n\nexport function jsxWithValidation(\n  type,\n  props,\n  key,\n  isStaticChildren,\n  source,\n  self,\n) {\n  if (__DEV__) {\n    const validType = isValidElementType(type);\n\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    if (!validType) {\n      let info = '';\n      if (\n        type === undefined ||\n        (typeof type === 'object' &&\n          type !== null &&\n          Object.keys(type).length === 0)\n      ) {\n        info +=\n          ' You likely forgot to export your component from the file ' +\n          \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      const sourceInfo = getSourceInfoErrorAddendum(source);\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      let typeString;\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\n        info =\n          ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      if (__DEV__) {\n        console.error(\n          'React.jsx: type is invalid -- expected a string (for ' +\n            'built-in components) or a class/function (for composite ' +\n            'components) but got: %s.%s',\n          typeString,\n          info,\n        );\n      }\n    }\n\n    const element = jsxDEV(type, props, key, source, self);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n    if (validType) {\n      const children = props.children;\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (let i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            if (__DEV__) {\n              console.error(\n                'React.jsx: Static children should always be an array. ' +\n                  'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\n                  'Use the Babel transform instead.',\n              );\n            }\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (warnAboutSpreadingKeyToJSX) {\n      if (hasOwnProperty.call(props, 'key')) {\n        const componentName = getComponentNameFromType(type);\n        const keys = Object.keys(props).filter(k => k !== 'key');\n        const beforeExample =\n          keys.length > 0\n            ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}'\n            : '{key: someKey}';\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          const afterExample =\n            keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n' +\n              '  let props = %s;\\n' +\n              '  <%s {...props} />\\n' +\n              'React keys must be passed directly to JSX without using spread:\\n' +\n              '  let props = %s;\\n' +\n              '  <%s key={someKey} {...props} />',\n            beforeExample,\n            componentName,\n            afterExample,\n            componentName,\n          );\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n}\n\n// These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\nexport function jsxWithValidationStatic(type, props, key) {\n  return jsxWithValidation(type, props, key, true);\n}\n\nexport function jsxWithValidationDynamic(type, props, key) {\n  return jsxWithValidation(type, props, key, false);\n}\n\nexport function createElementWithValidation(type, props, children) {\n  const validType = isValidElementType(type);\n\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    let info = '';\n    if (\n      type === undefined ||\n      (typeof type === 'object' &&\n        type !== null &&\n        Object.keys(type).length === 0)\n    ) {\n      info +=\n        ' You likely forgot to export your component from the file ' +\n        \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    const sourceInfo = getSourceInfoErrorAddendumForProps(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    let typeString;\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\n      info =\n        ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    if (__DEV__) {\n      console.error(\n        'React.createElement: type is invalid -- expected a string (for ' +\n          'built-in components) or a class/function (for composite ' +\n          'components) but got: %s.%s',\n        typeString,\n        info,\n      );\n    }\n  }\n\n  const element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (let i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nlet didWarnAboutDeprecatedCreateFactory = false;\n\nexport function createFactoryWithValidation(type) {\n  const validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n  if (__DEV__) {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n      console.warn(\n        'React.createFactory() is deprecated and will be removed in ' +\n          'a future major release. Consider using JSX ' +\n          'or use React.createElement() directly instead.',\n      );\n    }\n    // Legacy hook: remove it\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function() {\n        console.warn(\n          'Factory.type is deprecated. Access the class directly ' +\n            'before passing it to createFactory.',\n        );\n        Object.defineProperty(this, 'type', {\n          value: type,\n        });\n        return type;\n      },\n    });\n  }\n\n  return validatedFactory;\n}\n\nexport function cloneElementWithValidation(element, props, children) {\n  const newElement = cloneElement.apply(this, arguments);\n  for (let i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  REACT_PROVIDER_TYPE,\n  REACT_SERVER_CONTEXT_TYPE,\n  REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\n} from 'shared/ReactSymbols';\n\nimport type {\n  ReactServerContext,\n  ServerContextJSONValue,\n} from 'shared/ReactTypes';\n\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\n\nexport function createServerContext<T: ServerContextJSONValue>(\n  globalName: string,\n  defaultValue: T,\n): ReactServerContext<T> {\n  if (!enableServerContext) {\n    throw new Error('Not implemented.');\n  }\n  let wasDefined = true;\n  if (!ContextRegistry[globalName]) {\n    wasDefined = false;\n    const context: ReactServerContext<T> = {\n      $$typeof: REACT_SERVER_CONTEXT_TYPE,\n\n      // As a workaround to support multiple concurrent renderers, we categorize\n      // some renderers as primary and others as secondary. We only expect\n      // there to be two concurrent renderers at most: React Native (primary) and\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\n      // Secondary renderers store their context values on separate fields.\n      _currentValue: defaultValue,\n      _currentValue2: defaultValue,\n\n      _defaultValue: defaultValue,\n\n      // Used to track how many concurrent renderers this context currently\n      // supports within in a single renderer. Such as parallel server rendering.\n      _threadCount: 0,\n      // These are circular\n      Provider: (null: any),\n      Consumer: (null: any),\n      _globalName: globalName,\n    };\n\n    context.Provider = {\n      $$typeof: REACT_PROVIDER_TYPE,\n      _context: context,\n    };\n\n    if (__DEV__) {\n      let hasWarnedAboutUsingConsumer;\n      context._currentRenderer = null;\n      context._currentRenderer2 = null;\n      Object.defineProperties(\n        context,\n        ({\n          Consumer: {\n            get() {\n              if (!hasWarnedAboutUsingConsumer) {\n                console.error(\n                  'Consumer pattern is not supported by ReactServerContext',\n                );\n                hasWarnedAboutUsingConsumer = true;\n              }\n              return null;\n            },\n          },\n        }: any),\n      );\n    }\n    ContextRegistry[globalName] = context;\n  }\n\n  const context = ContextRegistry[globalName];\n  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n    context._defaultValue = defaultValue;\n    if (\n      context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\n    ) {\n      context._currentValue = defaultValue;\n    }\n    if (\n      context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\n    ) {\n      context._currentValue2 = defaultValue;\n    }\n  } else if (wasDefined) {\n    throw new Error(`ServerContext: ${globalName} already defined`);\n  }\n  return context;\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\n\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\n\nexport function startTransition(\n  scope: () => void,\n  options?: StartTransitionOptions,\n) {\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  const currentTransition = ReactCurrentBatchConfig.transition;\n\n  if (__DEV__) {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  if (enableTransitionTracing) {\n    if (options !== undefined && options.name !== undefined) {\n      ReactCurrentBatchConfig.transition.name = options.name;\n      ReactCurrentBatchConfig.transition.startTime = -1;\n    }\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    if (__DEV__) {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        const updatedFibersCount = currentTransition._updatedFibers.size;\n        if (updatedFibersCount > 10) {\n          console.warn(\n            'Detected a large number of updates inside startTransition. ' +\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\n              'Otherwise concurrent mode guarantees are off the table.',\n          );\n        }\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nlet didWarnAboutMessageChannel = false;\nlet enqueueTaskImpl = null;\n\nexport default function enqueueTask(task: () => void) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      const requireString = ('require' + Math.random()).slice(0, 7);\n      const nodeRequire = module && module[requireString];\n      // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function(callback: () => void) {\n        if (__DEV__) {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n            if (typeof MessageChannel === 'undefined') {\n              console.error(\n                'This browser does not have a MessageChannel implementation, ' +\n                  'so enqueuing tasks via await act(async () => ...) will fail. ' +\n                  'Please file an issue at https://github.com/facebook/react/issues ' +\n                  'if you encounter this warning.',\n              );\n            }\n          }\n        }\n        const channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n  return enqueueTaskImpl(task);\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Thenable} from 'shared/ReactTypes';\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\nimport enqueueTask from 'shared/enqueueTask';\n\nlet actScopeDepth = 0;\nlet didWarnNoAwaitAct = false;\n\nexport function act<T>(callback: () => T | Thenable<T>): Thenable<T> {\n  if (__DEV__) {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    const prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    const prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    let result;\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback();\n\n      // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n      if (\n        !prevIsBatchingLegacy &&\n        ReactCurrentActQueue.didScheduleLegacyUpdate\n      ) {\n        const queue = ReactCurrentActQueue.current;\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (\n      result !== null &&\n      typeof result === 'object' &&\n      typeof result.then === 'function'\n    ) {\n      const thenableResult: Thenable<T> = (result: any);\n      // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n      let wasAwaited = false;\n      const thenable: Thenable<T> = {\n        then(resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(\n            returnValue => {\n              popActScope(prevActScopeDepth);\n              if (actScopeDepth === 0) {\n                // We've exited the outermost act scope. Recursively flush the\n                // queue until there's no remaining work.\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n              } else {\n                resolve(returnValue);\n              }\n            },\n            error => {\n              // The callback threw an error.\n              popActScope(prevActScopeDepth);\n              reject(error);\n            },\n          );\n        },\n      };\n\n      if (__DEV__) {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve()\n            .then(() => {})\n            .then(() => {\n              if (!wasAwaited) {\n                didWarnNoAwaitAct = true;\n                console.error(\n                  'You called act(async () => ...) without await. ' +\n                    'This could lead to unexpected testing behaviour, ' +\n                    'interleaving multiple act calls and mixing their ' +\n                    'scopes. ' +\n                    'You should - await act(async () => ...);',\n                );\n              }\n            });\n        }\n      }\n      return thenable;\n    } else {\n      const returnValue: T = (result: any);\n      // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n      popActScope(prevActScopeDepth);\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        const queue = ReactCurrentActQueue.current;\n        if (queue !== null) {\n          flushActQueue(queue);\n          ReactCurrentActQueue.current = null;\n        }\n        // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n        const thenable: Thenable<T> = {\n          then(resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          },\n        };\n        return thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        const thenable: Thenable<T> = {\n          then(resolve, reject) {\n            resolve(returnValue);\n          },\n        };\n        return thenable;\n      }\n    }\n  } else {\n    throw new Error('act(...) is not supported in production builds of React.');\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  if (__DEV__) {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      console.error(\n        'You seem to have overlapping act() calls, this is not supported. ' +\n          'Be sure to await previous act() calls before making a new one. ',\n      );\n    }\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork<T>(\n  returnValue: T,\n  resolve: T => mixed,\n  reject: mixed => mixed,\n) {\n  if (__DEV__) {\n    const queue = ReactCurrentActQueue.current;\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(() => {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nlet isFlushing = false;\nfunction flushActQueue(queue) {\n  if (__DEV__) {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      let i = 0;\n      try {\n        for (; i < queue.length; i++) {\n          let callback = queue[i];\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactVersion from 'shared/ReactVersion';\nimport {\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_CACHE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {Component, PureComponent} from './ReactBaseClasses';\nimport {createRef} from './ReactCreateRef';\nimport {forEach, map, count, toArray, only} from './ReactChildren';\nimport {\n  createElement as createElementProd,\n  createFactory as createFactoryProd,\n  cloneElement as cloneElementProd,\n  isValidElement,\n} from './ReactElement';\nimport {createContext} from './ReactContext';\nimport {lazy} from './ReactLazy';\nimport {forwardRef} from './ReactForwardRef';\nimport {memo} from './ReactMemo';\nimport {\n  getCacheSignal,\n  getCacheForType,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useDebugValue,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useMutableSource,\n  useSyncExternalStore,\n  useReducer,\n  useRef,\n  useState,\n  useTransition,\n  useDeferredValue,\n  useId,\n  useCacheRefresh,\n} from './ReactHooks';\nimport {\n  createElementWithValidation,\n  createFactoryWithValidation,\n  cloneElementWithValidation,\n} from './ReactElementValidator';\nimport {createServerContext} from './ReactServerContext';\nimport {createMutableSource} from './ReactMutableSource';\nimport ReactSharedInternals from './ReactSharedInternals';\nimport {startTransition} from './ReactStartTransition';\nimport {act} from './ReactAct';\n\n// TODO: Move this branching into the other module instead and just re-export.\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\n\nconst Children = {\n  map,\n  forEach,\n  count,\n  toArray,\n  only,\n};\n\nexport {\n  Children,\n  createMutableSource,\n  createRef,\n  Component,\n  PureComponent,\n  createContext,\n  createServerContext,\n  forwardRef,\n  lazy,\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useDebugValue,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useMutableSource,\n  useSyncExternalStore,\n  useReducer,\n  useRef,\n  useState,\n  REACT_FRAGMENT_TYPE as Fragment,\n  REACT_PROFILER_TYPE as Profiler,\n  REACT_STRICT_MODE_TYPE as StrictMode,\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\n  REACT_SUSPENSE_TYPE as Suspense,\n  createElement,\n  cloneElement,\n  isValidElement,\n  ReactVersion as version,\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  // Deprecated behind disableCreateFactory\n  createFactory,\n  // Concurrent Mode\n  useTransition,\n  startTransition,\n  useDeferredValue,\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\n  getCacheSignal as unstable_getCacheSignal,\n  getCacheForType as unstable_getCacheForType,\n  useCacheRefresh as unstable_useCacheRefresh,\n  REACT_CACHE_TYPE as unstable_Cache,\n  // enableScopeAPI\n  REACT_SCOPE_TYPE as unstable_Scope,\n  // enableTransitionTracing\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\n  useId,\n  act,\n};\n", "import * as React from './react.development.mjs';\n\nexport * from './react.development.mjs';\nexport default React;\n"],
  "mappings": "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",
  "names": ["REACT_ELEMENT_TYPE", "Symbol", "for", "REACT_PORTAL_TYPE", "REACT_FRAGMENT_TYPE", "REACT_STRICT_MODE_TYPE", "REACT_PROFILER_TYPE", "REACT_PROVIDER_TYPE", "REACT_CONTEXT_TYPE", "REACT_SERVER_CONTEXT_TYPE", "REACT_FORWARD_REF_TYPE", "REACT_SUSPENSE_TYPE", "REACT_SUSPENSE_LIST_TYPE", "REACT_MEMO_TYPE", "REACT_LAZY_TYPE", "REACT_DEBUG_TRACING_MODE_TYPE", "REACT_OFFSCREEN_TYPE", "REACT_CACHE_TYPE", "REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED", "MAYBE_ITERATOR_SYMBOL", "iterator", "FAUX_ITERATOR_SYMBOL", "getIteratorFn", "maybeIterable", "maybeIterator", "ReactCurrentDispatcher", "current", "ReactCurrentBatchConfig", "transition", "ReactCurrentActQueue", "isBatchingLegacy", "didScheduleLegacyUpdate", "ReactCurrentOwner", "ReactDebugCurrentFrame", "currentExtraStackFrame", "setExtraStackFrame", "stack", "getCurrentStack", "getStackAddendum", "impl", "enableScopeAPI", "enableTransitionTracing", "enableLegacyHidden", "enableDebugTracing", "ContextRegistry", "ReactSharedInternals", "warn", "format", "args", "printWarning", "error", "level", "concat", "argsWithFormat", "map", "item", "String", "unshift", "Function", "prototype", "apply", "call", "console", "didWarnStateUpdateForUnmountedComponent", "warnNoop", "publicInstance", "callerName", "constructor", "componentName", "displayName", "name", "warningKey", "ReactNoopUpdateQueue", "isMounted", "enqueueForceUpdate", "callback", "enqueueReplaceState", "completeState", "enqueueSetState", "partialState", "assign", "Object", "emptyObject", "freeze", "Component", "props", "context", "updater", "refs", "isReactComponent", "setState", "Error", "forceUpdate", "deprecatedAPIs", "replaceState", "defineDeprecationWarning", "methodName", "info", "defineProperty", "get", "undefined", "fnName", "hasOwnProperty", "ComponentDummy", "PureComponent", "pureComponentPrototype", "isPureReactComponent", "createRef", "refObject", "seal", "isArrayImpl", "Array", "isArray", "a", "typeName", "value", "hasToStringTag", "toStringTag", "type", "willCoercionThrow", "testStringCoercion", "e", "checkKeyStringCoercion", "getWrappedName", "outerType", "innerType", "wrapperName", "functionName", "getContextName", "getComponentNameFromType", "tag", "$$typeof", "provider", "_context", "render", "outerName", "lazyComponent", "payload", "_payload", "init", "_init", "x", "context2", "_globalName", "RESERVED_PROPS", "key", "ref", "__self", "__source", "specialPropKeyWarningShown", "specialPropRefWarningShown", "didWarnAboutStringRefs", "hasValidRef", "config", "getter", "getOwnPropertyDescriptor", "isReactWarning", "hasValidKey", "defineKeyPropWarningGetter", "warnAboutAccessingKey", "configurable", "defineRefPropWarningGetter", "warnAboutAccessingRef", "warnIfStringRefCannotBeAutoConverted", "stateNode", "ReactElement", "self", "source", "owner", "element", "_owner", "_store", "enumerable", "writable", "createElement", "children", "propName", "childrenLength", "arguments", "length", "childArray", "i", "defaultProps", "cloneAndReplaceKey", "oldElement", "newKey", "newElement", "_self", "_source", "cloneElement", "isValidElement", "object", "SEPARATOR", "SUBSEPARATOR", "escape", "escapeRegex", "escaperLookup", "escapedString", "replace", "match", "didWarnAboutMaps", "userProvidedKeyEscapeRegex", "escapeUserProvidedKey", "text", "getElementKey", "index", "toString", "mapIntoArray", "array", "escapedPrefix", "nameSoFar", "invokeCallback", "child", "mappedChild", "childKey", "escapedChildKey", "c", "push", "nextName", "subtreeCount", "nextNamePrefix", "iteratorFn", "iterableChildren", "entries", "step", "ii", "next", "done", "childrenString", "keys", "join", "mapChildren", "func", "result", "count", "countChildren", "n", "forEachChildren", "forEachFunc", "forEachContext", "toArray", "onlyChild", "createContext", "defaultValue", "_currentValue", "_currentValue2", "_threadCount", "Provider", "Consumer", "_defaultValue", "hasWarnedAboutUsingNestedContextConsumers", "hasWarnedAboutUsingConsumerProvider", "hasWarnedAboutDisplayNameOnConsumer", "defineProperties", "set", "_Provider", "_currentRenderer", "_currentRenderer2", "Uninitialized", "Pending", "Resolved", "Rejected", "lazyInitializer", "_status", "ctor", "_result", "thenable", "then", "moduleObject", "resolved", "rejected", "pending", "default", "lazy", "lazyType", "propTypes", "newDefaultProps", "newPropTypes", "forwardRef", "elementType", "ownName", "REACT_MODULE_REFERENCE", "isValidElementType", "getModuleId", "memo", "compare", "resolveDispatcher", "dispatcher", "getCacheSignal", "getCacheForType", "resourceType", "useContext", "Context", "realContext", "useState", "initialState", "useReducer", "reducer", "initialArg", "useRef", "initialValue", "useEffect", "create", "deps", "useInsertionEffect", "useLayoutEffect", "useCallback", "useMemo", "useImperativeHandle", "useDebugValue", "formatterFn", "useTransition", "useDeferredValue", "useId", "useSyncExternalStore", "subscribe", "getSnapshot", "getServerSnapshot", "useCacheRefresh", "disabledDepth", "prevLog", "prevInfo", "prevWarn", "prevError", "prevGroup", "prevGroupCollapsed", "prevGroupEnd", "disabledLog", "__reactDisabledLog", "disableLogs", "log", "group", "groupCollapsed", "groupEnd", "reenableLogs", "prefix", "describeBuiltInComponentFrame", "ownerFn", "trim", "reentry", "componentFrameCache", "PossiblyWeakMap", "WeakMap", "Map", "describeNativeComponentFrame", "fn", "construct", "frame", "control", "previousPrepareStackTrace", "prepareStackTrace", "previousDispatcher", "Fake", "Reflect", "sample", "sampleLines", "split", "controlLines", "s", "includes", "syntheticFrame", "describeFunctionComponentFrame", "shouldConstruct", "describeUnknownElementTypeFrameInDEV", "loggedTypeFailures", "setCurrentlyValidatingElement", "checkPropTypes", "typeSpecs", "values", "location", "has", "bind", "typeSpecName", "err", "ex", "message", "propTypesMisspellWarningShown", "getDeclarationErrorAddendum", "getSourceInfoErrorAddendum", "fileName", "lineNumber", "getSourceInfoErrorAddendumForProps", "elementProps", "ownerHasKeyUseWarning", "getCurrentComponentErrorInfo", "parentType", "parentName", "validateExplicitKey", "validated", "currentComponentErrorInfo", "childOwner", "validateChildKeys", "node", "validatePropTypes", "PropTypes", "getDefaultProps", "isReactClassApproved", "validateFragmentProps", "fragment", "createElementWithValidation", "validType", "sourceInfo", "typeString", "didWarnAboutDeprecatedCreateFactory", "createFactoryWithValidation", "validatedFactory", "cloneElementWithValidation", "createServerContext", "globalName", "wasDefined", "hasWarnedAboutUsingConsumer", "startTransition", "scope", "options", "prevTransition", "currentTransition", "_updatedFibers", "Set", "updatedFibersCount", "size", "clear", "didWarnAboutMessageChannel", "enqueueTaskImpl", "enqueueTask", "task", "requireString", "Math", "random", "slice", "nodeRequire", "module", "setImmediate", "_err", "MessageChannel", "channel", "port1", "onmessage", "port2", "postMessage", "actScopeDepth", "didWarnNoAwaitAct", "act", "prevActScopeDepth", "prevIsBatchingLegacy", "queue", "flushActQueue", "popActScope", "thenableResult", "wasAwaited", "resolve", "reject", "returnValue", "recursivelyFlushAsyncActWork", "Promise", "isFlushing", "createFactory", "Children", "forEach", "only"]
}
