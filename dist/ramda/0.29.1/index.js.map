{"version":3,"file":"index.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,YAAY;AACZ;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,YAAY;AACZ;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,KAAK,kBAAkB,KAAK;AAC9D,wBAAwB;AACxB;AACA;AACA;AACA;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACrBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACzCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACvCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,iBAAiB;AAC5B;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACrCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,iCAAiC,mBAAO,CAAC,IAA6B;AACtE,yBAAyB,mBAAO,CAAC,IAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACrCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,uBAAuB,mBAAO,CAAC,IAAU;AACzC,yBAAyB,mBAAO,CAAC,IAAY;AAC7C,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB,GAAG;AAClD,yBAAyB,sBAAsB,GAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;AC3CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,UAAU;AACtB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA,2BAA2B;AAC3B,4BAA4B;AAC5B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACxBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,kCAAkC,mBAAO,CAAC,IAA8B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA,sCAAsC,SAAS,QAAQ;AACvD;AACA,4BAA4B,8CAA8C;AAC1E;AACA,gDAAgD,qBAAqB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACpCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,iCAAiC,mBAAO,CAAC,IAA6B;AACtE,yBAAyB,mBAAO,CAAC,IAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACtCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,uBAAuB,mBAAO,CAAC,IAAU;AACzC,yBAAyB,mBAAO,CAAC,IAAY;AAC7C,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB,GAAG;AAC9C,qBAAqB,qBAAqB,GAAG;AAC7C,qBAAqB,qBAAqB,GAAG;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;AC5CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,uBAAuB,mBAAO,CAAC,IAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,kDAAkD;AAClD,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACrCA,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,iCAAiC,mBAAO,CAAC,IAA6B;AACtE,8BAA8B,mBAAO,CAAC,IAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC;AACA;AACA;;;;;;;AC1BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA,8CAA8C;AAC9C,+BAA+B;AAC/B,gDAAgD;AAChD;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACxBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D,yBAAyB,mBAAO,CAAC,IAAY;AAC7C,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,uBAAuB,mBAAO,CAAC,IAAU;AACzC,yBAAyB,mBAAO,CAAC,IAAY;AAC7C,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,wBAAwB,mBAAO,CAAC,IAAW;AAC3C,0BAA0B,mBAAO,CAAC,IAAa,GAAG;AAClD;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B,uBAAuB,KAAK;AAC/D,WAAW,QAAQ;AACnB;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT,0BAA0B,QAAQ,kBAAkB;AACpD,uBAAuB,WAAW,QAAQ,YAAY,iBAAiB;AACvE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;AACD;;;;;;;ACrDA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,UAAU;AACrB,YAAY,GAAG;AACf;AACA;AACA;AACA,yBAAyB;AACzB,uBAAuB;AACvB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACvBA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,wBAAwB;AACpC,YAAY,0BAA0B;AACtC;AACA;AACA,kBAAkB,0BAA0B,GAAG,uBAAuB,IAAI,wBAAwB;AAClG;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC/BA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,6BAA6B,mBAAO,CAAC,IAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,MAAM,IAAI;AAC/B,WAAW,eAAe;AAC1B,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,yBAAyB,WAAW,GAAG,MAAM;AAC7C;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC1BA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD,8BAA8B,mBAAO,CAAC,IAA0B;AAChE,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG,IAAI;AAC9B,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,0CAA0C,IAAI,IAAI,OAAO,GAAG,MAAM,IAAI,IAAI;AAC1E;AACA;AACA,0CAA0C,KAAK,GAAG,MAAM,IAAI,IAAI;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACxCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACjCA,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,GAAG;AACxB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,8DAA8D,KAAK,GAAG,MAAM;AAC5E,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,+BAA+B,mBAAO,CAAC,IAA2B;AAClE,uBAAuB,mBAAO,CAAC,IAAU;AACzC,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,eAAe;AACf;AACA,mDAAmD;AACnD,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,IAAI;AACJ,CAAC;AACD;;;;;;;ACxCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oCAAoC,GAAG;AACvD;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,iCAAiC,mBAAO,CAAC,IAA6B;AACtE,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,uBAAuB,mBAAO,CAAC,IAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,uCAAuC;AACvC;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACvCA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC3BA,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,IAAI;AAChB,WAAW,GAAG;AACd,YAAY,GAAG;AACf;AACA;AACA,2BAA2B,IAAI,IAAI;AACnC;AACA,kCAAkC;AAClC,wCAAwC;AACxC;AACA;AACA;AACA,CAAC;AACD;;;;;;;AChCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,0BAA0B;AACrC,WAAW,2BAA2B;AACtC,WAAW,8BAA8B;AACzC,WAAW;AACX;AACA;AACA,gBAAgB,8BAA8B;AAC9C,gBAAgB,+BAA+B;AAC/C,gBAAgB,0BAA0B;AAC1C,gBAAgB,2BAA2B;AAC3C,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AChDA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,wBAAwB;AACpC,YAAY,0BAA0B;AACtC;AACA;AACA,kBAAkB,0BAA0B,GAAG,uBAAuB,IAAI,wBAAwB;AAClG;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,wBAAwB,mBAAO,CAAC,IAAW;AAC3C,uBAAuB,mBAAO,CAAC,IAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA,uBAAuB;AACvB,wBAAwB;AACxB,oBAAoB;AACpB,qBAAqB;AACrB;AACA;AACA;;;;;;;ACzBA,wBAAwB,mBAAO,CAAC,IAAW;AAC3C,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4BAA4B,mBAAO,CAAC,GAAe;AACnD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC/BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D,+BAA+B,mBAAO,CAAC,IAA2B;AAClE,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACtDA,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,uBAAuB,mBAAO,CAAC,IAAU;AACzC,uBAAuB,mBAAO,CAAC,IAAU;AACzC,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,gBAAgB;AAChB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;AClDA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,8BAA8B,mBAAO,CAAC,IAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE,YAAY,EAAE;AAC/B,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,MAAM,uCAAuC;AAC/E;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACrCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,yBAAyB,mBAAO,CAAC,IAAY;AAC7C,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE,YAAY,EAAE;AACzC,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACxEA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,uBAAuB,mBAAO,CAAC,IAAU;AACzC,yBAAyB,mBAAO,CAAC,IAAY;AAC7C,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;AACD;;;;;;;AC3CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,wCAAwC;AACxC,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACxBA,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,2CAA2C,MAAM;AACjD;AACA;AACA,yCAAyC,MAAM;AAC/C;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACpDA,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACpDA,uBAAuB,mBAAO,CAAC,IAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;;;;;;ACjBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,iCAAiC;AACjC,6BAA6B;AAC7B,+BAA+B;AAC/B;AACA,yCAAyC;AACzC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AsB;AACjE,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,iCAAiC,mBAAO,CAAC,IAA6B;AACtE,qCAAqC,mBAAO,CAAC,IAAiC;AAC9E,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACxCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,iCAAiC,mBAAO,CAAC,IAA6B;AACtE,+BAA+B,mBAAO,CAAC,IAA2B;AAClE,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACxCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,+BAA+B,mBAAO,CAAC,IAA2B;AAClE,wBAAwB,mBAAO,CAAC,IAAW;AAC3C,sBAAsB,mBAAO,CAAC,IAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;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,CAAC,IAAuB;AAC1D,iCAAiC,mBAAO,CAAC,IAA6B;AACtE,mCAAmC,mBAAO,CAAC,IAA+B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,qBAAqB,WAAW,GAAG,UAAU;AAC7C,+CAA+C;AAC/C,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACnCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;AC9BA,mCAAmC,mBAAO,CAAC,IAA+B;AAC1E,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,kDAAkD,WAAW,GAAG,MAAM;AACtE;AACA;AACA,iCAAiC,WAAW,KAAK;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AClCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,qDAAqD,MAAM;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC1BA,mCAAmC,mBAAO,CAAC,IAA+B;AAC1E,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B,wBAAwB;AACnD,yBAAyB,wBAAwB;AACjD;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA,oBAAoB,0BAA0B;AAC9C,oBAAoB,wBAAwB;AAC5C;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AChDA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,WAAW,OAAO;AAClB;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;AACrB,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA,iBAAiB,cAAc,KAAK;AACpC,iBAAiB,YAAY,OAAO;AACpC,kBAAkB,kBAAkB;AACpC;AACA,uBAAuB;AACvB;AACA,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AClCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG;AACrB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA,+BAA+B,IAAI,MAAM,WAAW;AACpD,+BAA+B,IAAI,cAAc,GAAG;AACpD,+BAA+B,IAAI,MAAM,WAAW;AACpD,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACxCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA,qCAAqC;AACrC,oBAAoB;AACpB;AACA,uBAAuB;AACvB,oBAAoB;AACpB;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC1BA,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B,6BAA6B;AAC7B,6BAA6B;AAC7B,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrDA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,GAAG;AACf;AACA;AACA,uBAAuB;AACvB;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;;;;;;ACtBA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,0BAA0B,m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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA,+BAA+B,mBAAO,CAAC,IAAkB;AACzD,6BAA6B,mBAAO,CAAC,IAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA,4BAA4B,mBAAO,CAAC,IAAe;AACnD,8BAA8B,mBAAO,CAAC,IAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,GAAG;AACd,WAAW,cAAc;AACzB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA,gCAAgC,mBAAO,CAAC,IAAmB;AAC3D,wBAAwB,mBAAO,CAAC,IAAY;AAC5C;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,SAAS;AACpB,YAAY,GAAG;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AChHD;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B,YAAY,OAAO;AACnB;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;;;;;;ACTA,gCAAgC,mBAAO,CAAC,IAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA,kCAAkC,mBAAO,CAAC,IAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;;;;;;AClBA,2BAA2B,mBAAO,CAAC,IAAc;AACjD,kCAAkC,mBAAO,CAAC,IAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;AC5BA,2BAA2B,mBAAO,CAAC,IAAc;AACjD,2BAA2B,mBAAO,CAAC,IAAc;AACjD,kCAAkC,mBAAO,CAAC,IAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;AC7CA,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,kCAAkC,mBAAO,CAAC,IAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA,4BAA4B,mBAAO,CAAC,IAAe;AACnD,kCAAkC,mBAAO,CAAC,IAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvCA,8BAA8B,mBAAO,CAAC,IAAiB;AACvD,4BAA4B,mBAAO,CAAC,IAAe;AACnD,0BAA0B,mBAAO,CAAC,IAAc;AAChD;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA,wBAAwB,mBAAO,CAAC,IAAY;AAC5C;AACA;AACA;AACA;;;;;;;ACJA,yBAAyB,mBAAO,CAAC,IAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA,sCAAsC,mBAAO,CAAC,IAAyB;AACvE,iCAAiC,mBAAO,CAAC,IAAoB;AAC7D,iCAAiC,mBAAO,CAAC,IAAoB;AAC7D,wBAAwB,mBAAO,CAAC,IAAW;AAC3C,6BAA6B,mBAAO,CAAC,IAAgB;AACrD,wBAAwB,mBAAO,CAAC,IAAY;AAC5C,wBAAwB,mBAAO,CAAC,IAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA,iCAAiC,mBAAO,CAAC,IAAoB;AAC7D,gCAAgC,mBAAO,CAAC,IAAmB;AAC3D,iCAAiC,mBAAO,CAAC,IAAoB;AAC7D,4BAA4B,mBAAO,CAAC,IAAe;AACnD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA,0BAA0B,mBAAO,CAAC,IAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtDA,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,CAAC;AACD;;;;;;;ACTA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACA;AACA,sBAAsB;AACtB,wBAAwB;AACxB,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;;;;;;;ACdA,2BAA2B,mBAAO,CAAC,IAAc;AACjD,4BAA4B,mBAAO,CAAC,IAAe;AACnD,6BAA6B,mBAAO,CAAC,IAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS,yEAAyE;AAC9F;AACA;AACA,0BAA0B;AAC1B,4BAA4B;AAC5B,uBAAuB,GAAG;AAC1B,sBAAsB,WAAW,GAAG;AACpC,sBAAsB,iCAAiC,GAAG;AAC1D,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC1CA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;;;;ACVA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACA;AACA,2CAA2C;AAC3C,6CAA6C;AAC7C,2BAA2B;AAC3B,6BAA6B;AAC7B,wBAAwB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA,gCAAgC,mBAAO,CAAC,IAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACVA,4BAA4B,mBAAO,CAAC,IAAe;AACnD,8BAA8B,mBAAO,CAAC,IAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,UAAU;AACrB,WAAW,cAAc;AACzB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA,6BAA6B,mBAAO,CAAC,IAAgB;AACrD;AACA;AACA;AACA;AACA;;;;;;;ACLA,wBAAwB,mBAAO,CAAC,IAAW,GAAG;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;;;;;;ACZA,8BAA8B,mBAAO,CAAC,IAAiB;AACvD,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA,8FAA8F;AAC9F;AACA;AACA;AACA;;;;;;;ACLA,gCAAgC,mBAAO,CAAC,IAAmB;AAC3D,iCAAiC,mBAAO,CAAC,IAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA,iCAAiC,mBAAO,CAAC,IAAoB;AAC7D,6BAA6B,mBAAO,CAAC,IAAgB;AACrD,gCAAgC,mBAAO,CAAC,IAAmB;AAC3D,kCAAkC,mBAAO,CAAC,IAAqB;AAC/D,yBAAyB,mBAAO,CAAC,IAAa;AAC9C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;ACXA,6BAA6B,mBAAO,CAAC,IAAgB;AACrD,wBAAwB,mBAAO,CAAC,IAAW;AAC3C,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,gCAAgC,mBAAO,CAAC,IAAmB;AAC3D,wBAAwB,mBAAO,CAAC,IAAY;AAC5C,0BAA0B,mBAAO,CAAC,IAAc;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wCAAwC;AACvD;AACA;AACA;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA,iCAAiC,mBAAO,CAAC,IAAoB;AAC7D,iCAAiC,mBAAO,CAAC,IAAoB;AAC7D,wBAAwB,mBAAO,CAAC,IAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA,4BAA4B,mBAAO,CAAC,IAAe;AACnD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7BA,4BAA4B,mBAAO,CAAC,IAAe;AACnD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,IAAc;AACjD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpCA,4BAA4B,mBAAO,CAAC,IAAe;AACnD,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA,2BAA2B,mBAAO,CAAC,IAAc;AACjD,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;AChCA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;ACPA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA,4BAA4B,mBAAO,CAAC,IAAe;AACnD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7BA,4BAA4B,mBAAO,CAAC,IAAe;AACnD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvBA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1BA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA,2BAA2B,mBAAO,CAAC,IAAc;AACjD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,wBAAwB,mBAAO,CAAC,IAAW;AAC3C,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvCA,2BAA2B,mBAAO,CAAC,GAAc;AACjD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;;;;;;;AC1BA,4BAA4B,mBAAO,CAAC,IAAe;AACnD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA,4BAA4B,mBAAO,CAAC,IAAe;AACnD,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA,wBAAwB,mBAAO,CAAC,IAAW;AAC3C,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA,iCAAiC,mBAAO,CAAC,IAAoB;AAC7D,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;;;;;;AClBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5BA,mCAAmC,mBAAO,CAAC,IAA+B;AAC1E,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACtCA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,kCAAkC,mBAAO,CAAC,IAA8B;AACxE,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC/CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,IAAI;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACvCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,IAAI;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,+BAA+B,mBAAO,CAAC,IAA2B;AAClE,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACvDA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,uBAAuB,GAAG;AAC1B,yBAAyB;AACzB,yBAAyB;AACzB,2BAA2B;AAC3B,sCAAsC;AACtC,sCAAsC;AACtC,2BAA2B;AAC3B,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,yBAAyB,mBAAO,CAAC,IAAY;AAC7C,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,wCAAwC;AACxC,oBAAoB,oBAAoB;AACxC,mBAAmB,UAAU,WAAW;AACxC,wCAAwC;AACxC;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACA;AACA,uBAAuB;AACvB,4BAA4B;AAC5B,oBAAoB;AACpB,qBAAqB;AACrB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACrBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,GAAc;AACjD;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C,uBAAuB,oBAAoB;AAC3C,sBAAsB,UAAU,WAAW;AAC3C,2CAA2C;AAC3C;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC3BA,yBAAyB,mBAAO,CAAC,IAAY;AAC7C,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACA;AACA,0BAA0B;AAC1B,+BAA+B;AAC/B,uBAAuB;AACvB,wBAAwB;AACxB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACtBA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,iCAAiC;AACjC,mCAAmC;AACnC;AACA;AACA;;;;;;;ACrBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACxBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD,gCAAgC,mBAAO,CAAC,IAA4B,GAAG;AACvE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM;AACf,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA,gBAAgB,iBAAiB,GAAG;AACpC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACpEA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM;AACf,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,qCAAqC;AACrC,oBAAoB;AACpB;AACA,uBAAuB;AACvB,oBAAoB;AACpB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D,0BAA0B,mBAAO,CAAC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GAAG;AACH,CAAC;AACD;;;;;;;AC5BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;AACrB,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzBA,gCAAgC,mBAAO,CAAC,IAA4B;AACpE,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,iCAAiC,mBAAO,CAAC,IAA6B;AACtE,wBAAwB,mBAAO,CAAC,IAAoB;AACpD,yBAAyB,mBAAO,CAAC,IAAqB;AACtD,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,uBAAuB,iBAAiB,GAAG,MAAM;AACjD;AACA,oBAAoB,YAAY,MAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO,IAAI;AACX;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzDA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC/CA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACjDA,gCAAgC,mBAAO,CAAC,IAA4B;AACpE,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA,yCAAyC;AACzC,2BAA2B;AAC3B,4BAA4B;AAC5B;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,8BAA8B,mBAAO,CAAC,IAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA;AACA,mBAAmB;AACnB,mBAAmB;AACnB;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5CA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,uBAAuB,mBAAO,CAAC,IAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,yDAAyD;AACzD,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,uBAAuB,mBAAO,CAAC,IAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA,2BAA2B;AAC3B,oBAAoB;AACpB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACrBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA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G,IAAI,GAAG,IAAI;AAChD,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,yBAAyB,yCAAyC;AAClE,yBAAyB,yCAAyC;AAClE,eAAe;AACf,6BAA6B,YAAY,IAAI,YAAY,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5CA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,uBAAuB,mBAAO,CAAC,IAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,gEAAgE;AAChE,iDAAiD;AACjD;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,8BAA8B,mBAAO,CAAC,IAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM,IAAI;AACtC,WAAW,eAAe;AAC1B,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA,wBAAwB;AACxB,2CAA2C,MAAM;AACjD,sDAAsD,MAAM;AAC5D;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC3BA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,MAAM,IAAI;AACxC,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA,wBAAwB,0BAA0B;AAClD,iEAAiE,MAAM,0BAA0B;AACjG;AACA;AACA,wBAAwB,6BAA6B,kBAAkB;AACvE,sEAAsE,MAAM,6BAA6B,kBAAkB;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACpDA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,yBAAyB;AACzB;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;AACA,mBAAmB;AACnB,mBAAmB;AACnB;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA,sDAAsD;AACtD,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC3BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB,2BAA2B;AAC3B;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACxBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACjFA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,CAAC;AACD;;;;;;;AClBA,+BAA+B,mBAAO,CAAC,IAA2B;AAClE,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,uBAAuB,mBAAO,CAAC,IAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,4CAA4C;AAC5C;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC/BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,sBAAsB;AACtB,kBAAkB;AAClB,kBAAkB;AAClB;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACvBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,wBAAwB;AACxB,yBAAyB;AACzB,0BAA0B;AAC1B;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA,oCAAoC;AACpC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;AC3BA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,sBAAsB,6BAA6B,GAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC/BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,MAAM,QAAQ,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB;AAC7H;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC1BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE,WAAW;AAC5B,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,YAAY,GAAG;AACf;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW,IAAI;AACpC,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,4BAA4B,uBAAuB,GAAG,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACjCA,0BAA0B,mBAAO,CAAC,IAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA,2BAA2B,SAAS,GAAG,IAAI;AAC3C;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA,wBAAwB;AACxB,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACjCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA,0BAA0B;AAC1B,2BAA2B;AAC3B,2BAA2B;AAC3B,4BAA4B;AAC5B;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACxBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,kCAAkC,mBAAO,CAAC,IAA8B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,oCAAoC,sCAAsC;AAC1E;AACA,qDAAqD,qBAAqB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AClCA,2BAA2B,mBAAO,CAAC,GAAuB,GAAG;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACzCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACpBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4CAA4C,mBAAO,CAAC,IAAwC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;;;;;;;AC/BA,kCAAkC,mBAAO,CAAC,IAAqB;AAC/D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB,aAAa,cAAc,MAAM,kBAAkB;AAChF,WAAW,UAAU;A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E,0BAA0B,mBAAO,CAAC,IAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,WAAW,UAAU;AACrB;AACA,WAAW,GAAG;AACd,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,kCAAkC,KAAK;AACvC,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,wBAAwB;AACnC,WAAW,wBAAwB;AACnC,WAAW,wBAAwB;AACnC;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB;AACxB,CAAC;AACD;;;;;;;AChEA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,WAAW,GAAG;AACd,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9DA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,WAAW,UAAU;AACrB;AACA,WAAW,GAAG;AACd,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;;;;;;;ACxCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA,+BAA+B,mBAAO,CAAC,IAA2B;AAClE,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,yBAAyB,uBAAuB,GAAG,MAAM;AACzD;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC1BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,GAAa;AAC/C,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,+CAA+C,QAAQ,IAAI,IAAI,IAAI,IAAI;AACvE,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,iCAAiC,mBAAO,CAAC,IAA6B;AACtE,0BAA0B,mBAAO,CAAC,IAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,WAAW,GAAG;AACd,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACtCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,sBAAsB,mBAAO,CAAC,IAAS;AACvC,uBAAuB,mBAAO,CAAC,IAAU;AACzC,2BAA2B,mBAAO,CAAC,IAAc;AACjD,+BAA+B,mBAAO,CAAC,IAAkB;AACzD,4BAA4B,mBAAO,CAAC,IAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,6DAA6D;AAC7D,6DAA6D;AAC7D;AACA,kDAAkD;AAClD,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACzCA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,0BAA0B,mBAAO,CAAC,GAAa;AAC/C,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW,IAAI,MAAM;AAC9C,yBAAyB,WAAW,IAAI,MAAM;AAC9C;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5BA,mCAAmC,mBAAO,CAAC,IAA+B;AAC1E,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,oDAAoD;AACpD,oDAAoD;AACpD,oDAAoD;AACpD,oDAAoD;AACpD,oDAAoD;AACpD;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,sCAAsC;AACtC,iCAAiC;AACjC;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACzCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;AC7CA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,qCAAqC;AACrC;AACA;AACA;;;;;;;ACtBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA,0CAA0C;AAC1C,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACxBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA,gDAAgD;AAChD,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,oBAAoB;AACpB;AACA;AACA,gCAAgC;AAChC,gCAAgC;AAChC;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC3BA,uBAAuB,mBAAO,CAAC,IAAU;AACzC,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;;;;;;;AClBA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,iCAAiC,mBAAO,CAAC,IAA6B;AACtE,yBAAyB,mBAAO,CAAC,IAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,YAAY,GAAG;AACf;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC3BA,gCAAgC,mBAAO,CAAC,IAA4B;AACpE,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA,6BAA6B;AAC7B,6BAA6B;AAC7B;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA,CAAC;AACD;;;;;;;AC3BA,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,sCAAsC;AACtC,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;AC5BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACrCA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;;;;;;ACjBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW;AACpB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA,mBAAmB,iBAAiB,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW;AACpB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,6BAA6B,mBAAO,CAAC,IAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,wBAAwB;AACxB,2BAA2B;AAC3B,+BAA+B;AAC/B,oBAAoB,uBAAuB,GAAG,OAAO,6BAA6B;AAClF,sDAAsD;AACtD;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzCA,2BAA2B,mBAAO,CAAC,IAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;;;;;;ACjBA,4BAA4B,mBAAO,CAAC,IAAwB;AAC5D,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;AACA,WAAW,GAAG;AACd,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACrDA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC1CA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,uBAAuB,mBAAO,CAAC,IAAU;AACzC,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,sDAAsD;AACtD;AACA;AACA,kDAAkD;AAClD,kDAAkD;AAClD,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC3CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA,4BAA4B;AAC5B,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;;;;;;;AC1BA,0BAA0B,mBAAO,CAAC,IAAsB;AACxD,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA,sCAAsC,QAAQ,GAAG;AACjD,2BAA2B,YAAY;AACvC;AACA;AACA,2BAA2B,kCAAkC,kBAAkB,qBAAqB,iBAAiB;AACrH;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACpCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,iBAAiB,GAAG;AACpB,mBAAmB;AACnB,uBAAuB;AACvB,qBAAqB;AACrB,sBAAsB;AACtB,oBAAoB;AACpB,yBAAyB;AACzB,uBAAuB,GAAG;AAC1B,6BAA6B,GAAG;AAChC,2BAA2B;AAC3B;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACjCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;ACvCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,OAAO;AACnB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACnCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,IAAc;AACjD,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;;;;;;;ACtBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D,4BAA4B,mBAAO,CAAC,IAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,WAA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A;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;AACA,6DAA6D;AAC7D,6DAA6D;AAC7D,mDAAmD;AACnD,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;;;;;;;AC1CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM;AACf,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA,kBAAkB,iBAAiB,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM;AACf,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB,GAAG;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW,IAAI;AACtC,uBAAuB,WAAW,IAAI;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACpCA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA;AACA,CAAC;AACD;;;;;;;AChCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB,IAAI,WAAW;AAChD,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,cAAc,iCAAiC,GAAG;AAClD,cAAc,iCAAiC,GAAG;AAClD,cAAc,iCAAiC,GAAG;AAClD,cAAc,iCAAiC,GAAG;AAClD,cAAc,iCAAiC,GAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB,IAAI,WAAW;AAChD,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,cAAc,gCAAgC,GAAG;AACjD,cAAc,gCAAgC,GAAG;AACjD,cAAc,iCAAiC,GAAG;AAClD,cAAc,iCAAiC,GAAG;AAClD,cAAc,iCAAiC,GAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5CA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,0BAA0B,mBAAO,CAAC,IAAa;AAC/C,uBAAuB,mBAAO,CAAC,IAAU;AACzC,yBAAyB,mBAAO,CAAC,IAAY;AAC7C;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,IAAI,WAAW;AACnC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA,cAAc,KAAK,gBAAgB;AACnC,cAAc,WAAW,UAAU;AACnC,cAAc,iBAAiB,IAAI;AACnC,cAAc,WAAW,UAAU;AACnC;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACnCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D,wBAAwB,mBAAO,CAAC,IAAoB;AACpD,0BAA0B,mBAAO,CAAC,IAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC7BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY,SAAS;AACrB;AACA;AACA;AACA,2BAA2B;AAC3B,4BAA4B;AAC5B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACzBA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACpCA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9BA,2BAA2B,mBAAO,CAAC,IAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA,8CAA8C,MAAM;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC5BA,2BAA2B,mBAAO,CAAC,GAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;UCnCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://R/webpack/universalModuleDefinition","webpack://R/./src/F.js","webpack://R/./src/T.js","webpack://R/./src/__.js","webpack://R/./src/add.js","webpack://R/./src/addIndex.js","webpack://R/./src/addIndexRight.js","webpack://R/./src/adjust.js","webpack://R/./src/all.js","webpack://R/./src/allPass.js","webpack://R/./src/always.js","webpack://R/./src/and.js","webpack://R/./src/andThen.js","webpack://R/./src/any.js","webpack://R/./src/anyPass.js","webpack://R/./src/ap.js","webpack://R/./src/aperture.js","webpack://R/./src/append.js","webpack://R/./src/apply.js","webpack://R/./src/applySpec.js","webpack://R/./src/applyTo.js","webpack://R/./src/ascend.js","webpack://R/./src/assoc.js","webpack://R/./src/assocPath.js","webpack://R/./src/binary.js","webpack://R/./src/bind.js","webpack://R/./src/both.js","webpack://R/./src/call.js","webpack://R/./src/chain.js","webpack://R/./src/clamp.js","webpack://R/./src/clone.js","webpack://R/./src/collectBy.js","webpack://R/./src/comparator.js","webpack://R/./src/complement.js","webpack://R/./src/compose.js","webpack://R/./src/composeWith.js","webpack://R/./src/concat.js","webpack://R/./src/cond.js","webpack://R/./src/construct.js","webpack://R/./src/constructN.js","webpack://R/./src/converge.js","webpack://R/./src/count.js","webpack://R/./src/countBy.js","webpack://R/./src/curry.js","webpack://R/./src/curryN.js","webpack://R/./src/dec.js","webpack://R/./src/defaultTo.js","webpack://R/./src/descend.js","webpack://R/./src/difference.js","webpack://R/./src/differenceWith.js","webpack://R/./src/dissoc.js","webpack://R/./src/dissocPath.js","webpack://R/./src/divide.js","webpack://R/./src/drop.js","webpack://R/./src/dropLast.js","webpack://R/./src/dropLastWhile.js","webpack://R/./src/dropRepeats.js","webpack://R/./src/dropRepeatsBy.js","webpack://R/./src/dropRepeatsWith.js","webpack://R/./src/dropWhile.js","webpack://R/./src/either.js","webpack://R/./src/empty.js","webpack://R/./src/endsWith.js","webpack://R/./src/eqBy.js","webpack://R/./src/eqProps.js","webpack://R/./src/equals.js","webpack://R/./src/evolve.js","webpack://R/./src/filter.js","webpack://R/./src/find.js","webpack://R/./src/findIndex.js","webpack://R/./src/findLast.js","webpack://R/./src/findLastIndex.js","webpack://R/./src/flatten.js","webpack://R/./src/flip.js","webpack://R/./src/forEach.js","webpack://R/./src/forEachObjIndexed.js","webpack://R/./src/fromPairs.js","webpack://R/./src/groupBy.js","webpack://R/./src/groupWith.js","webpack://R/./src/gt.js","webpack://R/./src/gte.js","webpack://R/./src/has.js","webpack://R/./src/hasIn.js","webpack://R/./src/hasPath.js","webpack://R/./src/head.js","webpack://R/./src/identical.js","webpack://R/./src/identity.js","webpack://R/./src/ifElse.js","webpack://R/./src/inc.js","webpack://R/./src/includes.js","webpack://R/./src/index.js","webpack://R/./src/indexBy.js","webpack://R/./src/indexOf.js","webpack://R/./src/init.js","webpack://R/./src/innerJoin.js","webpack://R/./src/insert.js","webpack://R/./src/insertAll.js","webpack://R/./src/internal/_Set.js","webpack://R/./src/internal/_aperture.js","webpack://R/./src/internal/_arity.js","webpack://R/./src/internal/_arrayFromIterator.js","webpack://R/./src/internal/_arrayReduce.js","webpack://R/./src/internal/_assertPromise.js","webpack://R/./src/internal/_assoc.js","webpack://R/./src/internal/_checkForMethod.js","webpack://R/./src/internal/_clone.js","webpack://R/./src/internal/_cloneRegExp.js","webpack://R/./src/internal/_complement.js","webpack://R/./src/internal/_concat.js","webpack://R/./src/internal/_createPartialApplicator.js","webpack://R/./src/internal/_createReduce.js","webpack://R/./src/internal/_curry1.js","webpack://R/./src/internal/_curry2.js","webpack://R/./src/internal/_curry3.js","webpack://R/./src/internal/_curryN.js","webpack://R/./src/internal/_dispatchable.js","webpack://R/./src/internal/_dissoc.js","webpack://R/./src/internal/_dropLast.js","webpack://R/./src/internal/_dropLastWhile.js","webpack://R/./src/internal/_equals.js","webpack://R/./src/internal/_filter.js","webpack://R/./src/internal/_flatCat.js","webpack://R/./src/internal/_forceReduced.js","webpack://R/./src/internal/_functionName.js","webpack://R/./src/internal/_has.js","webpack://R/./src/internal/_identity.js","webpack://R/./src/internal/_includes.js","webpack://R/./src/internal/_includesWith.js","webpack://R/./src/internal/_indexOf.js","webpack://R/./src/internal/_isArguments.js","webpack://R/./src/internal/_isArray.js","webpack://R/./src/internal/_isArrayLike.js","webpack://R/./src/internal/_isFunction.js","webpack://R/./src/internal/_isInteger.js","webpack://R/./src/internal/_isNumber.js","webpack://R/./src/internal/_isObject.js","webpack://R/./src/internal/_isPlaceholder.js","webpack://R/./src/internal/_isRegExp.js","webpack://R/./src/internal/_isString.js","webpack://R/./src/internal/_isTransformer.js","webpack://R/./src/internal/_isTypedArray.js","webpack://R/./src/internal/_makeFlat.js","webpack://R/./src/internal/_map.js","webpack://R/./src/internal/_modify.js","webpack://R/./src/internal/_nth.js","webpack://R/./src/internal/_objectAssign.js","webpack://R/./src/internal/_objectIs.js","webpack://R/./src/internal/_path.js","webpack://R/./src/internal/_pipe.js","webpack://R/./src/internal/_promap.js","webpack://R/./src/internal/_quote.js","webpack://R/./src/internal/_reduce.js","webpack://R/./src/internal/_reduced.js","webpack://R/./src/internal/_stepCat.js","webpack://R/./src/internal/_toISOString.js","webpack://R/./src/internal/_toString.js","webpack://R/./src/internal/_xArrayReduce.js","webpack://R/./src/internal/_xReduce.js","webpack://R/./src/internal/_xall.js","webpack://R/./src/internal/_xany.js","webpack://R/./src/internal/_xaperture.js","webpack://R/./src/internal/_xchain.js","webpack://R/./src/internal/_xdrop.js","webpack://R/./src/internal/_xdropLast.js","webpack://R/./src/internal/_xdropLastWhile.js","webpack://R/./src/internal/_xdropRepeatsWith.js","webpack://R/./src/internal/_xdropWhile.js","webpack://R/./src/internal/_xfBase.js","webpack://R/./src/internal/_xfilter.js","webpack://R/./src/internal/_xfind.js","webpack://R/./src/internal/_xfindIndex.js","webpack://R/./src/internal/_xfindLast.js","webpack://R/./src/internal/_xfindLastIndex.js","webpack://R/./src/internal/_xmap.js","webpack://R/./src/internal/_xpromap.js","webpack://R/./src/internal/_xreduceBy.js","webpack://R/./src/internal/_xscan.js","webpack://R/./src/internal/_xtake.js","webpack://R/./src/internal/_xtakeWhile.js","webpack://R/./src/internal/_xtap.js","webpack://R/./src/internal/_xuniqBy.js","webpack://R/./src/internal/_xuniqWith.js","webpack://R/./src/internal/_xwrap.js","webpack://R/./src/intersection.js","webpack://R/./src/intersperse.js","webpack://R/./src/into.js","webpack://R/./src/invert.js","webpack://R/./src/invertObj.js","webpack://R/./src/invoker.js","webpack://R/./src/is.js","webpack://R/./src/isEmpty.js","webpack://R/./src/isNil.js","webpack://R/./src/isNotEmpty.js","webpack://R/./src/isNotNil.js","webpack://R/./src/join.js","webpack://R/./src/juxt.js","webpack://R/./src/keys.js","webpack://R/./src/keysIn.js","webpack://R/./src/last.js","webpack://R/./src/lastIndexOf.js","webpack://R/./src/length.js","webpack://R/./src/lens.js","webpack://R/./src/lensIndex.js","webpack://R/./src/lensPath.js","webpack://R/./src/lensProp.js","webpack://R/./src/lift.js","webpack://R/./src/liftN.js","webpack://R/./src/lt.js","webpack://R/./src/lte.js","webpack://R/./src/map.js","webpack://R/./src/mapAccum.js","webpack://R/./src/mapAccumRight.js","webpack://R/./src/mapObjIndexed.js","webpack://R/./src/match.js","webpack://R/./src/mathMod.js","webpack://R/./src/max.js","webpack://R/./src/maxBy.js","webpack://R/./src/mean.js","webpack://R/./src/median.js","webpack://R/./src/memoizeWith.js","webpack://R/./src/mergeAll.js","webpack://R/./src/mergeDeepLeft.js","webpack://R/./src/mergeDeepRight.js","webpack://R/./src/mergeDeepWith.js","webpack://R/./src/mergeDeepWithKey.js","webpack://R/./src/mergeLeft.js","webpack://R/./src/mergeRight.js","webpack://R/./src/mergeWith.js","webpack://R/./src/mergeWithKey.js","webpack://R/./src/min.js","webpack://R/./src/minBy.js","webpack://R/./src/modify.js","webpack://R/./src/modifyPath.js","webpack://R/./src/modulo.js","webpack://R/./src/move.js","webpack://R/./src/multiply.js","webpack://R/./src/nAry.js","webpack://R/./src/negate.js","webpack://R/./src/none.js","webpack://R/./src/not.js","webpack://R/./src/nth.js","webpack://R/./src/nthArg.js","webpack://R/./src/o.js","webpack://R/./src/objOf.js","webpack://R/./src/of.js","webpack://R/./src/omit.js","webpack://R/./src/on.js","webpack://R/./src/once.js","webpack://R/./src/or.js","webpack://R/./src/otherwise.js","webpack://R/./src/over.js","webpack://R/./src/pair.js","webpack://R/./src/partial.js","webpack://R/./src/partialObject.js","webpack://R/./src/partialRight.js","webpack://R/./src/partition.js","webpack://R/./src/path.js","webpack://R/./src/pathEq.js","webpack://R/./src/pathOr.js","webpack://R/./src/pathSatisfies.js","webpack://R/./src/paths.js","webpack://R/./src/pick.js","webpack://R/./src/pickAll.js","webpack://R/./src/pickBy.js","webpack://R/./src/pipe.js","webpack://R/./src/pipeWith.js","webpack://R/./src/pluck.js","webpack://R/./src/prepend.js","webpack://R/./src/product.js","webpack://R/./src/project.js","webpack://R/./src/promap.js","webpack://R/./src/prop.js","webpack://R/./src/propEq.js","webpack://R/./src/propIs.js","webpack://R/./src/propOr.js","webpack://R/./src/propSatisfies.js","webpack://R/./src/props.js","webpack://R/./src/range.js","webpack://R/./src/reduce.js","webpack://R/./src/reduceBy.js","webpack://R/./src/reduceRight.js","webpack://R/./src/reduceWhile.js","webpack://R/./src/reduced.js","webpack://R/./src/reject.js","webpack://R/./src/remove.js","webpack://R/./src/repeat.js","webpack://R/./src/replace.js","webpack://R/./src/reverse.js","webpack://R/./src/scan.js","webpack://R/./src/sequence.js","webpack://R/./src/set.js","webpack://R/./src/slice.js","webpack://R/./src/sort.js","webpack://R/./src/sortBy.js","webpack://R/./src/sortWith.js","webpack://R/./src/split.js","webpack://R/./src/splitAt.js","webpack://R/./src/splitEvery.js","webpack://R/./src/splitWhen.js","webpack://R/./src/splitWhenever.js","webpack://R/./src/startsWith.js","webpack://R/./src/subtract.js","webpack://R/./src/sum.js","webpack://R/./src/swap.js","webpack://R/./src/symmetricDifference.js","webpack://R/./src/symmetricDifferenceWith.js","webpack://R/./src/tail.js","webpack://R/./src/take.js","webpack://R/./src/takeLast.js","webpack://R/./src/takeLastWhile.js","webpack://R/./src/takeWhile.js","webpack://R/./src/tap.js","webpack://R/./src/test.js","webpack://R/./src/thunkify.js","webpack://R/./src/times.js","webpack://R/./src/toLower.js","webpack://R/./src/toPairs.js","webpack://R/./src/toPairsIn.js","webpack://R/./src/toString.js","webpack://R/./src/toUpper.js","webpack://R/./src/transduce.js","webpack://R/./src/transpose.js","webpack://R/./src/traverse.js","webpack://R/./src/trim.js","webpack://R/./src/tryCatch.js","webpack://R/./src/type.js","webpack://R/./src/unapply.js","webpack://R/./src/unary.js","webpack://R/./src/uncurryN.js","webpack://R/./src/unfold.js","webpack://R/./src/union.js","webpack://R/./src/unionWith.js","webpack://R/./src/uniq.js","webpack://R/./src/uniqBy.js","webpack://R/./src/uniqWith.js","webpack://R/./src/unless.js","webpack://R/./src/unnest.js","webpack://R/./src/until.js","webpack://R/./src/unwind.js","webpack://R/./src/update.js","webpack://R/./src/useWith.js","webpack://R/./src/values.js","webpack://R/./src/valuesIn.js","webpack://R/./src/view.js","webpack://R/./src/when.js","webpack://R/./src/where.js","webpack://R/./src/whereAny.js","webpack://R/./src/whereEq.js","webpack://R/./src/without.js","webpack://R/./src/xor.js","webpack://R/./src/xprod.js","webpack://R/./src/zip.js","webpack://R/./src/zipObj.js","webpack://R/./src/zipWith.js","webpack://R/webpack/bootstrap","webpack://R/webpack/before-startup","webpack://R/webpack/startup","webpack://R/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"R\"] = factory();\n\telse\n\t\troot[\"R\"] = factory();\n})(self, () => {\nreturn ","/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\nmodule.exports = F;","/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\nmodule.exports = T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {\n  '@@functional/placeholder': true\n};","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nmodule.exports = add;","var _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig (((a ...) -> b) ... -> [a] -> *) -> (((a ..., Int, [a]) -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nmodule.exports = addIndex;","var _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\n/**\n * As with `addIndex`, `addIndexRight` creates a new list iteration function\n * from an existing one by adding two new parameters to its callback function:\n * the current index, and the entire list.\n *\n * Unlike `addIndex`, `addIndexRight` iterates from the right to the left.\n *\n * @func\n * @memberOf R\n * @since v0.29.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const revmap = (fn, ary) => R.map(fn, R.reverse(ary));\n *      const revmapIndexed = R.addIndexRight(revmap);\n *      revmapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> [ '5-r', '4-a', '3-b', '2-o', '1-o', '0-f' ]\n */\nvar addIndexRight = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var idx = list.length - 1;\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx -= 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nmodule.exports = addIndexRight;","var _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(idx, fn, list) {\n  var len = list.length;\n  if (idx >= len || idx < -len) {\n    return list;\n  }\n  var _idx = (len + idx) % len;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nmodule.exports = adjust;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xall = /*#__PURE__*/require(\"./internal/_xall.js\");\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nmodule.exports = all;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\nvar max = /*#__PURE__*/require(\"./max.js\");\nvar pluck = /*#__PURE__*/require(\"./pluck.js\");\nvar reduce = /*#__PURE__*/require(\"./reduce.js\");\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass, R.both\n * @example\n *\n *      const isQueen = R.propEq('Q', 'rank');\n *      const isSpade = R.propEq('♠︎', 'suit');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nmodule.exports = allPass;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nmodule.exports = always;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns the first argument if it is falsy, otherwise the second argument.\n * Acts as the boolean `and` statement if both inputs are `Boolean`s.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any}\n * @see R.both, R.or\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nmodule.exports = and;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _assertPromise = /*#__PURE__*/require(\"./internal/_assertPromise.js\");\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      const makeQuery = email => ({ query: { email }});\n *      const fetchMember = request =>\n *        Promise.resolve({ firstName: 'Bob', lastName: 'Loblaw', id: 42 });\n *\n *      //getMemberName :: String -> Promise ({ firstName, lastName })\n *      const getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.andThen(R.pick(['firstName', 'lastName']))\n *      );\n *\n *      getMemberName('bob@gmail.com').then(console.log);\n */\nvar andThen = /*#__PURE__*/_curry2(function andThen(f, p) {\n  _assertPromise('andThen', p);\n  return p.then(f);\n});\nmodule.exports = andThen;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xany = /*#__PURE__*/require(\"./internal/_xany.js\");\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nmodule.exports = any;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\nvar max = /*#__PURE__*/require(\"./max.js\");\nvar pluck = /*#__PURE__*/require(\"./pluck.js\");\nvar reduce = /*#__PURE__*/require(\"./reduce.js\");\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass, R.either\n * @example\n *\n *      const isClub = R.propEq('♣', 'suit');\n *      const isSpade = R.propEq('♠', 'suit');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nmodule.exports = anyPass;","var _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _reduce = /*#__PURE__*/require(\"./internal/_reduce.js\");\nvar map = /*#__PURE__*/require(\"./map.js\");\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the first argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nmodule.exports = ap;","var _aperture = /*#__PURE__*/require(\"./internal/_aperture.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xaperture = /*#__PURE__*/require(\"./internal/_xaperture.js\");\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nmodule.exports = aperture;","var _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nmodule.exports = append;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nmodule.exports = apply;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _isArray = /*#__PURE__*/require(\"./internal/_isArray.js\");\nvar apply = /*#__PURE__*/require(\"./apply.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\nvar max = /*#__PURE__*/require(\"./max.js\");\nvar pluck = /*#__PURE__*/require(\"./pluck.js\");\nvar reduce = /*#__PURE__*/require(\"./reduce.js\");\nvar keys = /*#__PURE__*/require(\"./keys.js\");\nvar values = /*#__PURE__*/require(\"./values.js\"); // Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\nfunction mapValues(fn, obj) {\n  return _isArray(obj) ? obj.map(fn) : keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nmodule.exports = applySpec;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nmodule.exports = applyTo;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nmodule.exports = ascend;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar assocPath = /*#__PURE__*/require(\"./assocPath.js\");\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> a -> {k: v} -> {k: v}\n * @param {String|Number} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  return assocPath([prop], val, obj);\n});\nmodule.exports = assoc;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\nvar _isInteger = /*#__PURE__*/require(\"./internal/_isInteger.js\");\nvar _assoc = /*#__PURE__*/require(\"./internal/_assoc.js\");\nvar isNil = /*#__PURE__*/require(\"./isNil.js\");\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) && typeof obj[idx] === 'object' ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  return _assoc(idx, val, obj);\n});\nmodule.exports = assocPath;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar nAry = /*#__PURE__*/require(\"./nAry.js\");\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> ((a, b) -> z)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nmodule.exports = binary;","var _arity = /*#__PURE__*/require(\"./internal/_arity.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nmodule.exports = bind;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isFunction = /*#__PURE__*/require(\"./internal/_isFunction.js\");\nvar and = /*#__PURE__*/require(\"./and.js\");\nvar lift = /*#__PURE__*/require(\"./lift.js\");\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.either, R.allPass, R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nmodule.exports = both;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig ((*... -> a), *...) -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(\n *        R.repeat(' '),\n *        R.join(''),\n *        R.replace(/^(?!$)/gm)\n *      );\n *\n *      const format = R.converge(\n *        R.call,\n *        [\n *          R.pipe(R.prop('indent'), indentN),\n *          R.prop('value')\n *        ]\n *      );\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/_curry1(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nmodule.exports = call;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _makeFlat = /*#__PURE__*/require(\"./internal/_makeFlat.js\");\nvar _xchain = /*#__PURE__*/require(\"./internal/_xchain.js\");\nvar map = /*#__PURE__*/require(\"./map.js\");\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nmodule.exports = chain;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nmodule.exports = clamp;","var _clone = /*#__PURE__*/require(\"./internal/_clone.js\");\nvar _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Creates a deep copy of the source that can be used in place of the source\n * object without retaining any references to it.\n * The source object may contain (nested) `Array`s and `Object`s,\n * `Number`s, `String`s, `Boolean`s and `Date`s.\n * `Function`s are assigned by reference rather than copied.\n *\n * Dispatches to a `clone` method if present.\n *\n * Note that if the source object has multiple nodes that share a reference,\n * the returned object will have the same structure, but the references will\n * be pointed to the location within the cloned value.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, true);\n});\nmodule.exports = clone;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _reduce = /*#__PURE__*/require(\"./internal/_reduce.js\");\n/**\n * Splits a list into sub-lists, based on the result of calling a key-returning function on each element,\n * and grouping the results according to values returned.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> [[b]]\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Array}\n *    An array of arrays where each sub-array contains items for which\n *    the String-returning function has returned the same value.\n * @see R.groupBy, R.partition\n * @example\n *      R.collectBy(R.prop('type'), [\n *        {type: 'breakfast', item: '☕️'},\n *        {type: 'lunch', item: '🌯'},\n *        {type: 'dinner', item: '🍝'},\n *        {type: 'breakfast', item: '🥐'},\n *        {type: 'lunch', item: '🍕'}\n *      ]);\n *\n *      // [ [ {type: 'breakfast', item: '☕️'},\n *      //     {type: 'breakfast', item: '🥐'} ],\n *      //   [ {type: 'lunch', item: '🌯'},\n *      //     {type: 'lunch', item: '🍕'} ],\n *      //   [ {type: 'dinner', item: '🍝'} ] ]\n */\nvar collectBy = /*#__PURE__*/_curry2(function collectBy(fn, list) {\n  var group = _reduce(function (o, x) {\n    var tag = fn(x);\n    if (o[tag] === undefined) {\n      o[tag] = [];\n    }\n    o[tag].push(x);\n    return o;\n  }, {}, list);\n  var newList = [];\n  for (var tag in group) {\n    newList.push(group[tag]);\n  }\n  return newList;\n});\nmodule.exports = collectBy;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nmodule.exports = comparator;","var lift = /*#__PURE__*/require(\"./lift.js\");\nvar not = /*#__PURE__*/require(\"./not.js\");\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      R.isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      R.isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nmodule.exports = complement;","var pipe = /*#__PURE__*/require(\"./pipe.js\");\nvar reverse = /*#__PURE__*/require(\"./reverse.js\");\n/**\n * Performs right-to-left function composition. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n * @symb R.compose(f, g, h)(a)(b) = f(g(h(a)))(b)\n */\nfunction compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}\nmodule.exports = compose;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar pipeWith = /*#__PURE__*/require(\"./pipeWith.js\");\nvar reverse = /*#__PURE__*/require(\"./reverse.js\");\n/**\n * Performs right-to-left function composition using transforming function. The last function may have\n * any arity; the remaining functions must be unary. Unlike `compose`, functions are passed in an array.\n *\n * **Note:** The result of composeWith is not automatically curried. Transforming function is not used\n * on the last argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, i(...args)))\n */\nvar composeWith = /*#__PURE__*/_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\nmodule.exports = composeWith;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isArray = /*#__PURE__*/require(\"./internal/_isArray.js\");\nvar _isFunction = /*#__PURE__*/require(\"./internal/_isFunction.js\");\nvar _isString = /*#__PURE__*/require(\"./internal/_isString.js\");\nvar toString = /*#__PURE__*/require(\"./toString.js\");\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nmodule.exports = concat;","var _arity = /*#__PURE__*/require(\"./internal/_arity.js\");\nvar _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar map = /*#__PURE__*/require(\"./map.js\");\nvar max = /*#__PURE__*/require(\"./max.js\");\nvar reduce = /*#__PURE__*/require(\"./reduce.js\");\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * **Please note**: This is not a direct substitute for a `switch` statement.\n * Remember that both elements of every pair passed to `cond` are *functions*,\n * and `cond` returns a function.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nmodule.exports = cond;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar constructN = /*#__PURE__*/require(\"./constructN.js\");\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nmodule.exports = construct;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar curry = /*#__PURE__*/require(\"./curry.js\");\nvar nAry = /*#__PURE__*/require(\"./nAry.js\");\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (n) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nmodule.exports = constructN;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _map = /*#__PURE__*/require(\"./internal/_map.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\nvar max = /*#__PURE__*/require(\"./max.js\");\nvar pluck = /*#__PURE__*/require(\"./pluck.js\");\nvar reduce = /*#__PURE__*/require(\"./reduce.js\");\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nmodule.exports = converge;","var _reduce = /*#__PURE__*/require(\"./internal/_reduce.js\");\nvar curry = /*#__PURE__*/require(\"./curry.js\");\n/**\n * Returns the number of items in a given `list` matching the predicate `f`\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} predicate to match items against\n * @return {Array} list of items to count in\n * @example\n *\n *      const even = x => x % 2 == 0;\n *\n *      R.count(even, [1, 2, 3, 4, 5]); // => 2\n *      R.map(R.count(even), [[1, 1, 1], [2, 3, 4, 5], [6]]); // => [0, 2, 1]\n */\nvar count = /*#__PURE__*/curry(function (pred, list) {\n  return _reduce(function (a, e) {\n    return pred(e) ? a + 1 : a;\n  }, 0, list);\n});\nmodule.exports = count;","var reduceBy = /*#__PURE__*/require(\"./reduceBy.js\");\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nmodule.exports = countBy;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * Please note that default parameters don't count towards a [function arity](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length)\n * and therefore `curry` won't work well with those.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n *\n *      // R.curry not working well with default parameters\n *      const h = R.curry((a, b, c = 2) => a + b + c);\n *      h(1)(2)(7); //=> Error! (`3` is not a function!)\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nmodule.exports = curry;","var _arity = /*#__PURE__*/require(\"./internal/_arity.js\");\nvar _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _curryN = /*#__PURE__*/require(\"./internal/_curryN.js\");\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nmodule.exports = curryN;","var add = /*#__PURE__*/require(\"./add.js\");\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nmodule.exports = dec;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nmodule.exports = defaultTo;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nmodule.exports = descend;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _Set = /*#__PURE__*/require(\"./internal/_Set.js\");\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = difference;","var _includesWith = /*#__PURE__*/require(\"./internal/_includesWith.js\");\nvar _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n *\n *      R.differenceWith(R.equals, [1, 2, 3, 3, 3], []); //=> [1, 2, 3]\n *      R.differenceWith(R.equals, [1, 2, 3, 3, 3], [1]); //=> [2, 3]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = differenceWith;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar dissocPath = /*#__PURE__*/require(\"./dissocPath.js\");\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  return dissocPath([prop], obj);\n});\nmodule.exports = dissoc;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dissoc = /*#__PURE__*/require(\"./internal/_dissoc.js\");\nvar _isInteger = /*#__PURE__*/require(\"./internal/_isInteger.js\");\nvar _isArray = /*#__PURE__*/require(\"./internal/_isArray.js\");\nvar assoc = /*#__PURE__*/require(\"./assoc.js\");\n/**\n * Makes a shallow clone of an object. Note that this copies and flattens\n * prototype properties onto the new object as well. All non-primitive\n * properties are copied by reference.\n *\n * @private\n * @param {String|Integer} prop The prop operating\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original.\n */\nfunction _shallowCloneObject(prop, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    return [].concat(obj);\n  }\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  return result;\n}\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  if (obj == null) {\n    return obj;\n  }\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return _shallowCloneObject(head, obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nmodule.exports = dissocPath;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nmodule.exports = divide;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xdrop = /*#__PURE__*/require(\"./internal/_xdrop.js\");\nvar slice = /*#__PURE__*/require(\"./slice.js\");\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nmodule.exports = drop;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _dropLast = /*#__PURE__*/require(\"./internal/_dropLast.js\");\nvar _xdropLast = /*#__PURE__*/require(\"./internal/_xdropLast.js\");\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nmodule.exports = dropLast;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _dropLastWhile = /*#__PURE__*/require(\"./internal/_dropLastWhile.js\");\nvar _xdropLastWhile = /*#__PURE__*/require(\"./internal/_xdropLastWhile.js\");\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nmodule.exports = dropLastWhile;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xdropRepeatsWith = /*#__PURE__*/require(\"./internal/_xdropRepeatsWith.js\");\nvar dropRepeatsWith = /*#__PURE__*/require(\"./dropRepeatsWith.js\");\nvar equals = /*#__PURE__*/require(\"./equals.js\");\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], function () {\n  return _xdropRepeatsWith(equals);\n}, /*#__PURE__*/dropRepeatsWith(equals)));\nmodule.exports = dropRepeats;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xdropRepeatsWith = /*#__PURE__*/require(\"./internal/_xdropRepeatsWith.js\");\nvar dropRepeatsWith = /*#__PURE__*/require(\"./dropRepeatsWith.js\");\nvar eqBy = /*#__PURE__*/require(\"./eqBy.js\");\n/**\n * Returns a new list without any consecutively repeating elements,\n * based upon the value returned by applying the supplied function to\n * each list element. [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.29.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeatsBy(Math.abs, [1, -1, -1, 2, 3, -4, 4, 2, 2]); //=> [1, 2, 3, -4, 2]\n */\nvar dropRepeatsBy = /*#__PURE__*/_curry2(function (fn, list) {\n  return _dispatchable([], function () {\n    return _xdropRepeatsWith(eqBy(fn));\n  }, dropRepeatsWith(eqBy(fn)))(list);\n});\nmodule.exports = dropRepeatsBy;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xdropRepeatsWith = /*#__PURE__*/require(\"./internal/_xdropRepeatsWith.js\");\nvar last = /*#__PURE__*/require(\"./last.js\");\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nmodule.exports = dropRepeatsWith;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xdropWhile = /*#__PURE__*/require(\"./internal/_xdropWhile.js\");\nvar slice = /*#__PURE__*/require(\"./slice.js\");\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nmodule.exports = dropWhile;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isFunction = /*#__PURE__*/require(\"./internal/_isFunction.js\");\nvar lift = /*#__PURE__*/require(\"./lift.js\");\nvar or = /*#__PURE__*/require(\"./or.js\");\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.both, R.anyPass, R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nmodule.exports = either;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _isArguments = /*#__PURE__*/require(\"./internal/_isArguments.js\");\nvar _isArray = /*#__PURE__*/require(\"./internal/_isArray.js\");\nvar _isObject = /*#__PURE__*/require(\"./internal/_isObject.js\");\nvar _isString = /*#__PURE__*/require(\"./internal/_isString.js\");\nvar _isTypedArray = /*#__PURE__*/require(\"./internal/_isTypedArray.js\");\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`),\n * TypedArray (`Uint8Array []`, `Float32Array []`, etc), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));               //=> Nothing()\n *      R.empty([1, 2, 3]);              //=> []\n *      R.empty('unicorns');             //=> ''\n *      R.empty({x: 1, y: 2});           //=> {}\n *      R.empty(Uint8Array.from('123')); //=> Uint8Array []\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : _isTypedArray(x) ? x.constructor.from('') : void 0 // else\n  ;\n});\nmodule.exports = empty;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar equals = /*#__PURE__*/require(\"./equals.js\");\nvar takeLast = /*#__PURE__*/require(\"./takeLast.js\");\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nmodule.exports = endsWith;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar equals = /*#__PURE__*/require(\"./equals.js\");\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nmodule.exports = eqBy;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar equals = /*#__PURE__*/require(\"./equals.js\");\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nmodule.exports = eqProps;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _equals = /*#__PURE__*/require(\"./internal/_equals.js\");\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nmodule.exports = equals;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isArray = /*#__PURE__*/require(\"./internal/_isArray.js\");\nvar _isObject = /*#__PURE__*/require(\"./internal/_isObject.js\");\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  if (!_isObject(object) && !_isArray(object)) {\n    return object;\n  }\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nmodule.exports = evolve;","var _arrayReduce = /*#__PURE__*/require(\"./internal/_arrayReduce.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _filter = /*#__PURE__*/require(\"./internal/_filter.js\");\nvar _isObject = /*#__PURE__*/require(\"./internal/_isObject.js\");\nvar _xfilter = /*#__PURE__*/require(\"./internal/_xfilter.js\");\nvar keys = /*#__PURE__*/require(\"./keys.js\");\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @category Object\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/filter', 'filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _arrayReduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nmodule.exports = filter;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xfind = /*#__PURE__*/require(\"./internal/_xfind.js\");\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq(2, 'a'))(xs); //=> {a: 2}\n *      R.find(R.propEq(4, 'a'))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nmodule.exports = find;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xfindIndex = /*#__PURE__*/require(\"./internal/_xfindIndex.js\");\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.indexOf\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq(2, 'a'))(xs); //=> 1\n *      R.findIndex(R.propEq(4, 'a'))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nmodule.exports = findIndex;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xfindLast = /*#__PURE__*/require(\"./internal/_xfindLast.js\");\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq(1, 'a'))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq(4, 'a'))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nmodule.exports = findLast;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xfindLastIndex = /*#__PURE__*/require(\"./internal/_xfindLastIndex.js\");\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.lastIndexOf\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq(1, 'a'))(xs); //=> 1\n *      R.findLastIndex(R.propEq(4, 'a'))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nmodule.exports = findLastIndex;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _makeFlat = /*#__PURE__*/require(\"./internal/_makeFlat.js\");\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nmodule.exports = flatten;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nmodule.exports = flip;","var _checkForMethod = /*#__PURE__*/require(\"./internal/_checkForMethod.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nmodule.exports = forEach;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar keys = /*#__PURE__*/require(\"./keys.js\");\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nmodule.exports = forEachObjIndexed;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = fromPairs;","var _checkForMethod = /*#__PURE__*/require(\"./internal/_checkForMethod.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar reduceBy = /*#__PURE__*/require(\"./reduceBy.js\");\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a key-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: [b]}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce, R.indexBy, R.collectBy\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  acc.push(item);\n  return acc;\n}, [])));\nmodule.exports = groupBy;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * const isVowel = R.test(/^[aeiou]$/i);\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nmodule.exports = groupWith;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nmodule.exports = gt;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nmodule.exports = gte;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar hasPath = /*#__PURE__*/require(\"./hasPath.js\");\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\nmodule.exports = has;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar isNil = /*#__PURE__*/require(\"./isNil.js\");\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  if (isNil(obj)) {\n    return false;\n  }\n  return prop in obj;\n});\nmodule.exports = hasIn;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\nvar isNil = /*#__PURE__*/require(\"./isNil.js\");\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\nvar hasPath = /*#__PURE__*/_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0 || isNil(obj)) {\n    return false;\n  }\n  var val = obj;\n  var idx = 0;\n  while (idx < _path.length) {\n    if (!isNil(val) && _has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n});\nmodule.exports = hasPath;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _nth = /*#__PURE__*/require(\"./internal/_nth.js\");\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/_curry1(function (list) {\n  return _nth(0, list);\n});\nmodule.exports = head;","var _objectIs = /*#__PURE__*/require(\"./internal/_objectIs.js\");\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * `identical` does not support the `__` placeholder.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = function (a, b) {\n  switch (arguments.length) {\n    case 0:\n      return identical;\n    case 1:\n      return function () {\n        return function unaryIdentical(_b) {\n          switch (arguments.length) {\n            case 0:\n              return unaryIdentical;\n            default:\n              return _objectIs(a, _b);\n          }\n        };\n      }();\n    default:\n      return _objectIs(a, b);\n  }\n};\n\n// In order to support Cross-origin Window objects as arguments to identical,\n// it cannot be implemented as _curry2(_objectIs).\n// The reason is that _curry2 checks if a function argument is the placeholder __\n// by accessing a paritcular property. However, across URL origins access\n// to most properties of Window is forbidden.\nmodule.exports = identical;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _identity = /*#__PURE__*/require(\"./internal/_identity.js\");\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nmodule.exports = identity;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * Note that `ifElse` takes its arity from the longest of the three functions passed to it.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({ count: 1 }); //=> { count: 2 }\n *      incCount({});           //=> { count: 1 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nmodule.exports = ifElse;","var add = /*#__PURE__*/require(\"./add.js\");\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nmodule.exports = inc;","var _includes = /*#__PURE__*/require(\"./internal/_includes.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Also works with strings.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\nvar includes = /*#__PURE__*/_curry2(_includes);\nmodule.exports = includes;","module.exports = {};\nmodule.exports.F = /*#__PURE__*/require(\"./F.js\");\nmodule.exports.T = /*#__PURE__*/require(\"./T.js\");\nmodule.exports.__ = /*#__PURE__*/require(\"./__.js\");\nmodule.exports.add = /*#__PURE__*/require(\"./add.js\");\nmodule.exports.addIndex = /*#__PURE__*/require(\"./addIndex.js\");\nmodule.exports.addIndexRight = /*#__PURE__*/require(\"./addIndexRight.js\");\nmodule.exports.adjust = /*#__PURE__*/require(\"./adjust.js\");\nmodule.exports.all = /*#__PURE__*/require(\"./all.js\");\nmodule.exports.allPass = /*#__PURE__*/require(\"./allPass.js\");\nmodule.exports.always = /*#__PURE__*/require(\"./always.js\");\nmodule.exports.and = /*#__PURE__*/require(\"./and.js\");\nmodule.exports.any = /*#__PURE__*/require(\"./any.js\");\nmodule.exports.anyPass = /*#__PURE__*/require(\"./anyPass.js\");\nmodule.exports.ap = /*#__PURE__*/require(\"./ap.js\");\nmodule.exports.aperture = /*#__PURE__*/require(\"./aperture.js\");\nmodule.exports.append = /*#__PURE__*/require(\"./append.js\");\nmodule.exports.apply = /*#__PURE__*/require(\"./apply.js\");\nmodule.exports.applySpec = /*#__PURE__*/require(\"./applySpec.js\");\nmodule.exports.applyTo = /*#__PURE__*/require(\"./applyTo.js\");\nmodule.exports.ascend = /*#__PURE__*/require(\"./ascend.js\");\nmodule.exports.assoc = /*#__PURE__*/require(\"./assoc.js\");\nmodule.exports.assocPath = /*#__PURE__*/require(\"./assocPath.js\");\nmodule.exports.binary = /*#__PURE__*/require(\"./binary.js\");\nmodule.exports.bind = /*#__PURE__*/require(\"./bind.js\");\nmodule.exports.both = /*#__PURE__*/require(\"./both.js\");\nmodule.exports.call = /*#__PURE__*/require(\"./call.js\");\nmodule.exports.chain = /*#__PURE__*/require(\"./chain.js\");\nmodule.exports.clamp = /*#__PURE__*/require(\"./clamp.js\");\nmodule.exports.clone = /*#__PURE__*/require(\"./clone.js\");\nmodule.exports.collectBy = /*#__PURE__*/require(\"./collectBy.js\");\nmodule.exports.comparator = /*#__PURE__*/require(\"./comparator.js\");\nmodule.exports.complement = /*#__PURE__*/require(\"./complement.js\");\nmodule.exports.compose = /*#__PURE__*/require(\"./compose.js\");\nmodule.exports.composeWith = /*#__PURE__*/require(\"./composeWith.js\");\nmodule.exports.concat = /*#__PURE__*/require(\"./concat.js\");\nmodule.exports.cond = /*#__PURE__*/require(\"./cond.js\");\nmodule.exports.construct = /*#__PURE__*/require(\"./construct.js\");\nmodule.exports.constructN = /*#__PURE__*/require(\"./constructN.js\");\nmodule.exports.converge = /*#__PURE__*/require(\"./converge.js\");\nmodule.exports.count = /*#__PURE__*/require(\"./count.js\");\nmodule.exports.countBy = /*#__PURE__*/require(\"./countBy.js\");\nmodule.exports.curry = /*#__PURE__*/require(\"./curry.js\");\nmodule.exports.curryN = /*#__PURE__*/require(\"./curryN.js\");\nmodule.exports.dec = /*#__PURE__*/require(\"./dec.js\");\nmodule.exports.defaultTo = /*#__PURE__*/require(\"./defaultTo.js\");\nmodule.exports.descend = /*#__PURE__*/require(\"./descend.js\");\nmodule.exports.difference = /*#__PURE__*/require(\"./difference.js\");\nmodule.exports.differenceWith = /*#__PURE__*/require(\"./differenceWith.js\");\nmodule.exports.dissoc = /*#__PURE__*/require(\"./dissoc.js\");\nmodule.exports.dissocPath = /*#__PURE__*/require(\"./dissocPath.js\");\nmodule.exports.divide = /*#__PURE__*/require(\"./divide.js\");\nmodule.exports.drop = /*#__PURE__*/require(\"./drop.js\");\nmodule.exports.dropLast = /*#__PURE__*/require(\"./dropLast.js\");\nmodule.exports.dropLastWhile = /*#__PURE__*/require(\"./dropLastWhile.js\");\nmodule.exports.dropRepeats = /*#__PURE__*/require(\"./dropRepeats.js\");\nmodule.exports.dropRepeatsBy = /*#__PURE__*/require(\"./dropRepeatsBy.js\");\nmodule.exports.dropRepeatsWith = /*#__PURE__*/require(\"./dropRepeatsWith.js\");\nmodule.exports.dropWhile = /*#__PURE__*/require(\"./dropWhile.js\");\nmodule.exports.either = /*#__PURE__*/require(\"./either.js\");\nmodule.exports.empty = /*#__PURE__*/require(\"./empty.js\");\nmodule.exports.endsWith = /*#__PURE__*/require(\"./endsWith.js\");\nmodule.exports.eqBy = /*#__PURE__*/require(\"./eqBy.js\");\nmodule.exports.eqProps = /*#__PURE__*/require(\"./eqProps.js\");\nmodule.exports.equals = /*#__PURE__*/require(\"./equals.js\");\nmodule.exports.evolve = /*#__PURE__*/require(\"./evolve.js\");\nmodule.exports.filter = /*#__PURE__*/require(\"./filter.js\");\nmodule.exports.find = /*#__PURE__*/require(\"./find.js\");\nmodule.exports.findIndex = /*#__PURE__*/require(\"./findIndex.js\");\nmodule.exports.findLast = /*#__PURE__*/require(\"./findLast.js\");\nmodule.exports.findLastIndex = /*#__PURE__*/require(\"./findLastIndex.js\");\nmodule.exports.flatten = /*#__PURE__*/require(\"./flatten.js\");\nmodule.exports.flip = /*#__PURE__*/require(\"./flip.js\");\nmodule.exports.forEach = /*#__PURE__*/require(\"./forEach.js\");\nmodule.exports.forEachObjIndexed = /*#__PURE__*/require(\"./forEachObjIndexed.js\");\nmodule.exports.fromPairs = /*#__PURE__*/require(\"./fromPairs.js\");\nmodule.exports.groupBy = /*#__PURE__*/require(\"./groupBy.js\");\nmodule.exports.groupWith = /*#__PURE__*/require(\"./groupWith.js\");\nmodule.exports.gt = /*#__PURE__*/require(\"./gt.js\");\nmodule.exports.gte = /*#__PURE__*/require(\"./gte.js\");\nmodule.exports.has = /*#__PURE__*/require(\"./has.js\");\nmodule.exports.hasIn = /*#__PURE__*/require(\"./hasIn.js\");\nmodule.exports.hasPath = /*#__PURE__*/require(\"./hasPath.js\");\nmodule.exports.head = /*#__PURE__*/require(\"./head.js\");\nmodule.exports.identical = /*#__PURE__*/require(\"./identical.js\");\nmodule.exports.identity = /*#__PURE__*/require(\"./identity.js\");\nmodule.exports.ifElse = /*#__PURE__*/require(\"./ifElse.js\");\nmodule.exports.inc = /*#__PURE__*/require(\"./inc.js\");\nmodule.exports.includes = /*#__PURE__*/require(\"./includes.js\");\nmodule.exports.indexBy = /*#__PURE__*/require(\"./indexBy.js\");\nmodule.exports.indexOf = /*#__PURE__*/require(\"./indexOf.js\");\nmodule.exports.init = /*#__PURE__*/require(\"./init.js\");\nmodule.exports.innerJoin = /*#__PURE__*/require(\"./innerJoin.js\");\nmodule.exports.insert = /*#__PURE__*/require(\"./insert.js\");\nmodule.exports.insertAll = /*#__PURE__*/require(\"./insertAll.js\");\nmodule.exports.intersection = /*#__PURE__*/require(\"./intersection.js\");\nmodule.exports.intersperse = /*#__PURE__*/require(\"./intersperse.js\");\nmodule.exports.into = /*#__PURE__*/require(\"./into.js\");\nmodule.exports.invert = /*#__PURE__*/require(\"./invert.js\");\nmodule.exports.invertObj = /*#__PURE__*/require(\"./invertObj.js\");\nmodule.exports.invoker = /*#__PURE__*/require(\"./invoker.js\");\nmodule.exports.is = /*#__PURE__*/require(\"./is.js\");\nmodule.exports.isEmpty = /*#__PURE__*/require(\"./isEmpty.js\");\nmodule.exports.isNil = /*#__PURE__*/require(\"./isNil.js\");\nmodule.exports.isNotEmpty = /*#__PURE__*/require(\"./isNotEmpty.js\");\nmodule.exports.isNotNil = /*#__PURE__*/require(\"./isNotNil.js\");\nmodule.exports.join = /*#__PURE__*/require(\"./join.js\");\nmodule.exports.juxt = /*#__PURE__*/require(\"./juxt.js\");\nmodule.exports.keys = /*#__PURE__*/require(\"./keys.js\");\nmodule.exports.keysIn = /*#__PURE__*/require(\"./keysIn.js\");\nmodule.exports.last = /*#__PURE__*/require(\"./last.js\");\nmodule.exports.lastIndexOf = /*#__PURE__*/require(\"./lastIndexOf.js\");\nmodule.exports.length = /*#__PURE__*/require(\"./length.js\");\nmodule.exports.lens = /*#__PURE__*/require(\"./lens.js\");\nmodule.exports.lensIndex = /*#__PURE__*/require(\"./lensIndex.js\");\nmodule.exports.lensPath = /*#__PURE__*/require(\"./lensPath.js\");\nmodule.exports.lensProp = /*#__PURE__*/require(\"./lensProp.js\");\nmodule.exports.lift = /*#__PURE__*/require(\"./lift.js\");\nmodule.exports.liftN = /*#__PURE__*/require(\"./liftN.js\");\nmodule.exports.lt = /*#__PURE__*/require(\"./lt.js\");\nmodule.exports.lte = /*#__PURE__*/require(\"./lte.js\");\nmodule.exports.map = /*#__PURE__*/require(\"./map.js\");\nmodule.exports.mapAccum = /*#__PURE__*/require(\"./mapAccum.js\");\nmodule.exports.mapAccumRight = /*#__PURE__*/require(\"./mapAccumRight.js\");\nmodule.exports.mapObjIndexed = /*#__PURE__*/require(\"./mapObjIndexed.js\");\nmodule.exports.match = /*#__PURE__*/require(\"./match.js\");\nmodule.exports.mathMod = /*#__PURE__*/require(\"./mathMod.js\");\nmodule.exports.max = /*#__PURE__*/require(\"./max.js\");\nmodule.exports.maxBy = /*#__PURE__*/require(\"./maxBy.js\");\nmodule.exports.mean = /*#__PURE__*/require(\"./mean.js\");\nmodule.exports.median = /*#__PURE__*/require(\"./median.js\");\nmodule.exports.memoizeWith = /*#__PURE__*/require(\"./memoizeWith.js\");\nmodule.exports.mergeAll = /*#__PURE__*/require(\"./mergeAll.js\");\nmodule.exports.mergeDeepLeft = /*#__PURE__*/require(\"./mergeDeepLeft.js\");\nmodule.exports.mergeDeepRight = /*#__PURE__*/require(\"./mergeDeepRight.js\");\nmodule.exports.mergeDeepWith = /*#__PURE__*/require(\"./mergeDeepWith.js\");\nmodule.exports.mergeDeepWithKey = /*#__PURE__*/require(\"./mergeDeepWithKey.js\");\nmodule.exports.mergeLeft = /*#__PURE__*/require(\"./mergeLeft.js\");\nmodule.exports.mergeRight = /*#__PURE__*/require(\"./mergeRight.js\");\nmodule.exports.mergeWith = /*#__PURE__*/require(\"./mergeWith.js\");\nmodule.exports.mergeWithKey = /*#__PURE__*/require(\"./mergeWithKey.js\");\nmodule.exports.min = /*#__PURE__*/require(\"./min.js\");\nmodule.exports.minBy = /*#__PURE__*/require(\"./minBy.js\");\nmodule.exports.modify = /*#__PURE__*/require(\"./modify.js\");\nmodule.exports.modifyPath = /*#__PURE__*/require(\"./modifyPath.js\");\nmodule.exports.modulo = /*#__PURE__*/require(\"./modulo.js\");\nmodule.exports.move = /*#__PURE__*/require(\"./move.js\");\nmodule.exports.multiply = /*#__PURE__*/require(\"./multiply.js\");\nmodule.exports.nAry = /*#__PURE__*/require(\"./nAry.js\");\nmodule.exports.partialObject = /*#__PURE__*/require(\"./partialObject.js\");\nmodule.exports.negate = /*#__PURE__*/require(\"./negate.js\");\nmodule.exports.none = /*#__PURE__*/require(\"./none.js\");\nmodule.exports.not = /*#__PURE__*/require(\"./not.js\");\nmodule.exports.nth = /*#__PURE__*/require(\"./nth.js\");\nmodule.exports.nthArg = /*#__PURE__*/require(\"./nthArg.js\");\nmodule.exports.o = /*#__PURE__*/require(\"./o.js\");\nmodule.exports.objOf = /*#__PURE__*/require(\"./objOf.js\");\nmodule.exports.of = /*#__PURE__*/require(\"./of.js\");\nmodule.exports.omit = /*#__PURE__*/require(\"./omit.js\");\nmodule.exports.on = /*#__PURE__*/require(\"./on.js\");\nmodule.exports.once = /*#__PURE__*/require(\"./once.js\");\nmodule.exports.or = /*#__PURE__*/require(\"./or.js\");\nmodule.exports.otherwise = /*#__PURE__*/require(\"./otherwise.js\");\nmodule.exports.over = /*#__PURE__*/require(\"./over.js\");\nmodule.exports.pair = /*#__PURE__*/require(\"./pair.js\");\nmodule.exports.partial = /*#__PURE__*/require(\"./partial.js\");\nmodule.exports.partialRight = /*#__PURE__*/require(\"./partialRight.js\");\nmodule.exports.partition = /*#__PURE__*/require(\"./partition.js\");\nmodule.exports.path = /*#__PURE__*/require(\"./path.js\");\nmodule.exports.paths = /*#__PURE__*/require(\"./paths.js\");\nmodule.exports.pathEq = /*#__PURE__*/require(\"./pathEq.js\");\nmodule.exports.pathOr = /*#__PURE__*/require(\"./pathOr.js\");\nmodule.exports.pathSatisfies = /*#__PURE__*/require(\"./pathSatisfies.js\");\nmodule.exports.pick = /*#__PURE__*/require(\"./pick.js\");\nmodule.exports.pickAll = /*#__PURE__*/require(\"./pickAll.js\");\nmodule.exports.pickBy = /*#__PURE__*/require(\"./pickBy.js\");\nmodule.exports.pipe = /*#__PURE__*/require(\"./pipe.js\");\nmodule.exports.pipeWith = /*#__PURE__*/require(\"./pipeWith.js\");\nmodule.exports.pluck = /*#__PURE__*/require(\"./pluck.js\");\nmodule.exports.prepend = /*#__PURE__*/require(\"./prepend.js\");\nmodule.exports.product = /*#__PURE__*/require(\"./product.js\");\nmodule.exports.project = /*#__PURE__*/require(\"./project.js\");\nmodule.exports.promap = /*#__PURE__*/require(\"./promap.js\");\nmodule.exports.prop = /*#__PURE__*/require(\"./prop.js\");\nmodule.exports.propEq = /*#__PURE__*/require(\"./propEq.js\");\nmodule.exports.propIs = /*#__PURE__*/require(\"./propIs.js\");\nmodule.exports.propOr = /*#__PURE__*/require(\"./propOr.js\");\nmodule.exports.propSatisfies = /*#__PURE__*/require(\"./propSatisfies.js\");\nmodule.exports.props = /*#__PURE__*/require(\"./props.js\");\nmodule.exports.range = /*#__PURE__*/require(\"./range.js\");\nmodule.exports.reduce = /*#__PURE__*/require(\"./reduce.js\");\nmodule.exports.reduceBy = /*#__PURE__*/require(\"./reduceBy.js\");\nmodule.exports.reduceRight = /*#__PURE__*/require(\"./reduceRight.js\");\nmodule.exports.reduceWhile = /*#__PURE__*/require(\"./reduceWhile.js\");\nmodule.exports.reduced = /*#__PURE__*/require(\"./reduced.js\");\nmodule.exports.reject = /*#__PURE__*/require(\"./reject.js\");\nmodule.exports.remove = /*#__PURE__*/require(\"./remove.js\");\nmodule.exports.repeat = /*#__PURE__*/require(\"./repeat.js\");\nmodule.exports.replace = /*#__PURE__*/require(\"./replace.js\");\nmodule.exports.reverse = /*#__PURE__*/require(\"./reverse.js\");\nmodule.exports.scan = /*#__PURE__*/require(\"./scan.js\");\nmodule.exports.sequence = /*#__PURE__*/require(\"./sequence.js\");\nmodule.exports.set = /*#__PURE__*/require(\"./set.js\");\nmodule.exports.slice = /*#__PURE__*/require(\"./slice.js\");\nmodule.exports.sort = /*#__PURE__*/require(\"./sort.js\");\nmodule.exports.sortBy = /*#__PURE__*/require(\"./sortBy.js\");\nmodule.exports.sortWith = /*#__PURE__*/require(\"./sortWith.js\");\nmodule.exports.split = /*#__PURE__*/require(\"./split.js\");\nmodule.exports.splitAt = /*#__PURE__*/require(\"./splitAt.js\");\nmodule.exports.splitEvery = /*#__PURE__*/require(\"./splitEvery.js\");\nmodule.exports.splitWhen = /*#__PURE__*/require(\"./splitWhen.js\");\nmodule.exports.splitWhenever = /*#__PURE__*/require(\"./splitWhenever.js\");\nmodule.exports.startsWith = /*#__PURE__*/require(\"./startsWith.js\");\nmodule.exports.subtract = /*#__PURE__*/require(\"./subtract.js\");\nmodule.exports.sum = /*#__PURE__*/require(\"./sum.js\");\nmodule.exports.swap = /*#__PURE__*/require(\"./swap.js\");\nmodule.exports.symmetricDifference = /*#__PURE__*/require(\"./symmetricDifference.js\");\nmodule.exports.symmetricDifferenceWith = /*#__PURE__*/require(\"./symmetricDifferenceWith.js\");\nmodule.exports.tail = /*#__PURE__*/require(\"./tail.js\");\nmodule.exports.take = /*#__PURE__*/require(\"./take.js\");\nmodule.exports.takeLast = /*#__PURE__*/require(\"./takeLast.js\");\nmodule.exports.takeLastWhile = /*#__PURE__*/require(\"./takeLastWhile.js\");\nmodule.exports.takeWhile = /*#__PURE__*/require(\"./takeWhile.js\");\nmodule.exports.tap = /*#__PURE__*/require(\"./tap.js\");\nmodule.exports.test = /*#__PURE__*/require(\"./test.js\");\nmodule.exports.andThen = /*#__PURE__*/require(\"./andThen.js\");\nmodule.exports.times = /*#__PURE__*/require(\"./times.js\");\nmodule.exports.toLower = /*#__PURE__*/require(\"./toLower.js\");\nmodule.exports.toPairs = /*#__PURE__*/require(\"./toPairs.js\");\nmodule.exports.toPairsIn = /*#__PURE__*/require(\"./toPairsIn.js\");\nmodule.exports.toString = /*#__PURE__*/require(\"./toString.js\");\nmodule.exports.toUpper = /*#__PURE__*/require(\"./toUpper.js\");\nmodule.exports.transduce = /*#__PURE__*/require(\"./transduce.js\");\nmodule.exports.transpose = /*#__PURE__*/require(\"./transpose.js\");\nmodule.exports.traverse = /*#__PURE__*/require(\"./traverse.js\");\nmodule.exports.trim = /*#__PURE__*/require(\"./trim.js\");\nmodule.exports.tryCatch = /*#__PURE__*/require(\"./tryCatch.js\");\nmodule.exports.type = /*#__PURE__*/require(\"./type.js\");\nmodule.exports.unapply = /*#__PURE__*/require(\"./unapply.js\");\nmodule.exports.unary = /*#__PURE__*/require(\"./unary.js\");\nmodule.exports.uncurryN = /*#__PURE__*/require(\"./uncurryN.js\");\nmodule.exports.unfold = /*#__PURE__*/require(\"./unfold.js\");\nmodule.exports.union = /*#__PURE__*/require(\"./union.js\");\nmodule.exports.unionWith = /*#__PURE__*/require(\"./unionWith.js\");\nmodule.exports.uniq = /*#__PURE__*/require(\"./uniq.js\");\nmodule.exports.uniqBy = /*#__PURE__*/require(\"./uniqBy.js\");\nmodule.exports.uniqWith = /*#__PURE__*/require(\"./uniqWith.js\");\nmodule.exports.unless = /*#__PURE__*/require(\"./unless.js\");\nmodule.exports.unnest = /*#__PURE__*/require(\"./unnest.js\");\nmodule.exports.until = /*#__PURE__*/require(\"./until.js\");\nmodule.exports.unwind = /*#__PURE__*/require(\"./unwind.js\");\nmodule.exports.update = /*#__PURE__*/require(\"./update.js\");\nmodule.exports.useWith = /*#__PURE__*/require(\"./useWith.js\");\nmodule.exports.values = /*#__PURE__*/require(\"./values.js\");\nmodule.exports.valuesIn = /*#__PURE__*/require(\"./valuesIn.js\");\nmodule.exports.view = /*#__PURE__*/require(\"./view.js\");\nmodule.exports.when = /*#__PURE__*/require(\"./when.js\");\nmodule.exports.where = /*#__PURE__*/require(\"./where.js\");\nmodule.exports.whereAny = /*#__PURE__*/require(\"./whereAny.js\");\nmodule.exports.whereEq = /*#__PURE__*/require(\"./whereEq.js\");\nmodule.exports.without = /*#__PURE__*/require(\"./without.js\");\nmodule.exports.xor = /*#__PURE__*/require(\"./xor.js\");\nmodule.exports.xprod = /*#__PURE__*/require(\"./xprod.js\");\nmodule.exports.zip = /*#__PURE__*/require(\"./zip.js\");\nmodule.exports.zipObj = /*#__PURE__*/require(\"./zipObj.js\");\nmodule.exports.zipWith = /*#__PURE__*/require(\"./zipWith.js\");\nmodule.exports.thunkify = /*#__PURE__*/require(\"./thunkify.js\");","var reduceBy = /*#__PURE__*/require(\"./reduceBy.js\");\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: b}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @see R.groupBy\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nmodule.exports = indexBy;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _indexOf = /*#__PURE__*/require(\"./internal/_indexOf.js\");\nvar _isArray = /*#__PURE__*/require(\"./internal/_isArray.js\");\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf, R.findIndex\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nmodule.exports = indexOf;","var slice = /*#__PURE__*/require(\"./slice.js\");\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nmodule.exports = init;","var _includesWith = /*#__PURE__*/require(\"./internal/_includesWith.js\");\nvar _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _filter = /*#__PURE__*/require(\"./internal/_filter.js\");\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\nmodule.exports = innerJoin;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nmodule.exports = insert;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nmodule.exports = insertAll;","var _includes = /*#__PURE__*/require(\"./_includes.js\");\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = _Set;","function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}\nmodule.exports = _aperture;","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\nmodule.exports = _arity;","function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}\nmodule.exports = _arrayFromIterator;","function _arrayReduce(reducer, acc, list) {\n  var index = 0;\n  var length = list.length;\n  while (index < length) {\n    acc = reducer(acc, list[index]);\n    index += 1;\n  }\n  return acc;\n}\nmodule.exports = _arrayReduce;","var _isFunction = /*#__PURE__*/require(\"./_isFunction.js\");\nvar _toString = /*#__PURE__*/require(\"./_toString.js\");\nfunction _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}\nmodule.exports = _assertPromise;","var _isArray = /*#__PURE__*/require(\"./_isArray.js\");\nvar _isInteger = /*#__PURE__*/require(\"./_isInteger.js\");\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {*} val The new value\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\nfunction _assoc(prop, val, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = val;\n    return arr;\n  }\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n}\nmodule.exports = _assoc;","var _isArray = /*#__PURE__*/require(\"./_isArray.js\");\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implementation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\nmodule.exports = _checkForMethod;","var _cloneRegExp = /*#__PURE__*/require(\"./_cloneRegExp.js\");\nvar type = /*#__PURE__*/require(\"../type.js\");\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nfunction _clone(value, deep, map) {\n  map || (map = new _ObjectMap());\n\n  // this avoids the slower switch with a quick if decision removing some milliseconds in each run.\n  if (_isPrimitive(value)) {\n    return value;\n  }\n  var copy = function copy(copiedValue) {\n    // Check for circular and same references on the object graph and return its corresponding clone.\n    var cachedCopy = map.get(value);\n    if (cachedCopy) {\n      return cachedCopy;\n    }\n    map.set(value, copiedValue);\n    for (var key in value) {\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        copiedValue[key] = deep ? _clone(value[key], true, map) : value[key];\n      }\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n    case 'Array':\n      return copy(Array(value.length));\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n    default:\n      return value;\n  }\n}\nmodule.exports = _clone;\nfunction _isPrimitive(param) {\n  var type = typeof param;\n  return param == null || type != 'object' && type != 'function';\n}\nvar _ObjectMap = /*#__PURE__*/function () {\n  function _ObjectMap() {\n    this.map = {};\n    this.length = 0;\n  }\n  _ObjectMap.prototype.set = function (key, value) {\n    const hashedKey = this.hash(key);\n    let bucket = this.map[hashedKey];\n    if (!bucket) {\n      this.map[hashedKey] = bucket = [];\n    }\n    bucket.push([key, value]);\n    this.length += 1;\n  };\n  _ObjectMap.prototype.hash = function (key) {\n    let hashedKey = [];\n    for (var value in key) {\n      hashedKey.push(Object.prototype.toString.call(key[value]));\n    }\n    return hashedKey.join();\n  };\n  _ObjectMap.prototype.get = function (key) {\n    /**\n     * depending on the number of objects to be cloned is faster to just iterate over the items in the map just because the hash function is so costly,\n     * on my tests this number is 180, anything above that using the hash function is faster.\n     */\n    if (this.length <= 180) {\n      for (const p in this.map) {\n        const bucket = this.map[p];\n        for (let i = 0; i < bucket.length; i += 1) {\n          const element = bucket[i];\n          if (element[0] === key) {\n            return element[1];\n          }\n        }\n      }\n      return;\n    }\n    const hashedKey = this.hash(key);\n    const bucket = this.map[hashedKey];\n    if (!bucket) {\n      return;\n    }\n    for (let i = 0; i < bucket.length; i += 1) {\n      const element = bucket[i];\n      if (element[0] === key) {\n        return element[1];\n      }\n    }\n  };\n  return _ObjectMap;\n}();","function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, pattern.flags ? pattern.flags : (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : '') + (pattern.dotAll ? 's' : ''));\n}\nmodule.exports = _cloneRegExp;","function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\nmodule.exports = _complement;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nfunction _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _concat;","var _arity = /*#__PURE__*/require(\"./_arity.js\");\nvar _curry2 = /*#__PURE__*/require(\"./_curry2.js\");\nfunction _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}\nmodule.exports = _createPartialApplicator;","var _isArrayLike = /*#__PURE__*/require(\"./_isArrayLike.js\");\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nfunction _createReduce(arrayReduce, methodReduce, iterableReduce) {\n  return function _reduce(xf, acc, list) {\n    if (_isArrayLike(list)) {\n      return arrayReduce(xf, acc, list);\n    }\n    if (list == null) {\n      return acc;\n    }\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n      return methodReduce(xf, acc, list, 'fantasy-land/reduce');\n    }\n    if (list[symIterator] != null) {\n      return iterableReduce(xf, acc, list[symIterator]());\n    }\n    if (typeof list.next === 'function') {\n      return iterableReduce(xf, acc, list);\n    }\n    if (typeof list.reduce === 'function') {\n      return methodReduce(xf, acc, list, 'reduce');\n    }\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}\nmodule.exports = _createReduce;","var _isPlaceholder = /*#__PURE__*/require(\"./_isPlaceholder.js\");\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\nmodule.exports = _curry1;","var _curry1 = /*#__PURE__*/require(\"./_curry1.js\");\nvar _isPlaceholder = /*#__PURE__*/require(\"./_isPlaceholder.js\");\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\nmodule.exports = _curry2;","var _curry1 = /*#__PURE__*/require(\"./_curry1.js\");\nvar _curry2 = /*#__PURE__*/require(\"./_curry2.js\");\nvar _isPlaceholder = /*#__PURE__*/require(\"./_isPlaceholder.js\");\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\nmodule.exports = _curry3;","var _arity = /*#__PURE__*/require(\"./_arity.js\");\nvar _isPlaceholder = /*#__PURE__*/require(\"./_isPlaceholder.js\");\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    var hasPlaceholder = false;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      } else {\n        hasPlaceholder = true;\n      }\n      combinedIdx += 1;\n    }\n    return !hasPlaceholder && left <= 0 ? fn.apply(this, combined) : _arity(Math.max(0, left), _curryN(length, combined, fn));\n  };\n}\nmodule.exports = _curryN;","var _isArray = /*#__PURE__*/require(\"./_isArray.js\");\nvar _isTransformer = /*#__PURE__*/require(\"./_isTransformer.js\");\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer created by [transducerCreator] to return a new transformer\n * (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} transducerCreator transducer factory if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nfunction _dispatchable(methodNames, transducerCreator, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var obj = arguments[arguments.length - 1];\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, Array.prototype.slice.call(arguments, 0, -1));\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = transducerCreator.apply(null, Array.prototype.slice.call(arguments, 0, -1));\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}\nmodule.exports = _dispatchable;","var _isInteger = /*#__PURE__*/require(\"./_isInteger.js\");\nvar _isArray = /*#__PURE__*/require(\"./_isArray.js\");\nvar remove = /*#__PURE__*/require(\"../remove.js\");\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @private\n * @param {String|Number} prop The name of the property to dissociate\n * @param {Object|Array} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n */\nfunction _dissoc(prop, obj) {\n  if (obj == null) {\n    return obj;\n  }\n  if (_isInteger(prop) && _isArray(obj)) {\n    return remove(prop, 1, obj);\n  }\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n}\nmodule.exports = _dissoc;","var take = /*#__PURE__*/require(\"../take.js\");\nfunction dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\nmodule.exports = dropLast;","var slice = /*#__PURE__*/require(\"../slice.js\");\nfunction dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}\nmodule.exports = dropLastWhile;","var _arrayFromIterator = /*#__PURE__*/require(\"./_arrayFromIterator.js\");\nvar _includesWith = /*#__PURE__*/require(\"./_includesWith.js\");\nvar _functionName = /*#__PURE__*/require(\"./_functionName.js\");\nvar _has = /*#__PURE__*/require(\"./_has.js\");\nvar _objectIs = /*#__PURE__*/require(\"./_objectIs.js\");\nvar keys = /*#__PURE__*/require(\"../keys.js\");\nvar type = /*#__PURE__*/require(\"../type.js\");\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparison of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\nfunction _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n  var typeA = type(a);\n  if (typeA !== type(b)) {\n    return false;\n  }\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}\nmodule.exports = _equals;","function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _filter;","var _forceReduced = /*#__PURE__*/require(\"./_forceReduced.js\");\nvar _isArrayLike = /*#__PURE__*/require(\"./_isArrayLike.js\");\nvar _xArrayReduce = /*#__PURE__*/require(\"./_xArrayReduce.js\");\nvar _xReduce = /*#__PURE__*/require(\"./_xReduce.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar tInit = '@@transducer/init';\nvar tStep = '@@transducer/step';\nvar tResult = '@@transducer/result';\nvar XPreservingReduced = /*#__PURE__*/function () {\n  function XPreservingReduced(xf) {\n    this.xf = xf;\n  }\n  XPreservingReduced.prototype[tInit] = _xfBase.init;\n  XPreservingReduced.prototype[tResult] = _xfBase.result;\n  XPreservingReduced.prototype[tStep] = function (result, input) {\n    var ret = this.xf[tStep](result, input);\n    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n  };\n  return XPreservingReduced;\n}();\nvar XFlatCat = /*#__PURE__*/function () {\n  function XFlatCat(xf) {\n    this.xf = new XPreservingReduced(xf);\n  }\n  XFlatCat.prototype[tInit] = _xfBase.init;\n  XFlatCat.prototype[tResult] = _xfBase.result;\n  XFlatCat.prototype[tStep] = function (result, input) {\n    return !_isArrayLike(input) ? _xArrayReduce(this.xf, result, [input]) : _xReduce(this.xf, result, input);\n  };\n  return XFlatCat;\n}();\nvar _flatCat = function _xcat(xf) {\n  return new XFlatCat(xf);\n};\nmodule.exports = _flatCat;","function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\nmodule.exports = _forceReduced;","function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\nmodule.exports = _functionName;","function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nmodule.exports = _has;","function _identity(x) {\n  return x;\n}\nmodule.exports = _identity;","var _indexOf = /*#__PURE__*/require(\"./_indexOf.js\");\nfunction _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\nmodule.exports = _includes;","function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}\nmodule.exports = _includesWith;","var equals = /*#__PURE__*/require(\"../equals.js\");\nfunction _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}\nmodule.exports = _indexOf;","var _has = /*#__PURE__*/require(\"./_has.js\");\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\nmodule.exports = _isArguments;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","var _curry1 = /*#__PURE__*/require(\"./_curry1.js\");\nvar _isArray = /*#__PURE__*/require(\"./_isArray.js\");\nvar _isString = /*#__PURE__*/require(\"./_isString.js\");\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n *      _isArrayLike({nodeType: 1, length: 1}) // => false\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nmodule.exports = _isArrayLike;","function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}\nmodule.exports = _isFunction;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}\nmodule.exports = _isNumber;","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\nmodule.exports = _isObject;","function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\nmodule.exports = _isPlaceholder;","function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}\nmodule.exports = _isRegExp;","function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\nmodule.exports = _isString;","function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\nmodule.exports = _isTransformer;","/**\n * Tests whether or not an object is a typed array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is a typed array, `false` otherwise.\n * @example\n *\n *      _isTypedArray(new Uint8Array([])); //=> true\n *      _isTypedArray(new Float32Array([])); //=> true\n *      _isTypedArray([]); //=> false\n *      _isTypedArray(null); //=> false\n *      _isTypedArray({}); //=> false\n */\nfunction _isTypedArray(val) {\n  var type = Object.prototype.toString.call(val);\n  return type === '[object Uint8ClampedArray]' || type === '[object Int8Array]' || type === '[object Uint8Array]' || type === '[object Int16Array]' || type === '[object Uint16Array]' || type === '[object Int32Array]' || type === '[object Uint32Array]' || type === '[object Float32Array]' || type === '[object Float64Array]' || type === '[object BigInt64Array]' || type === '[object BigUint64Array]';\n}\nmodule.exports = _isTypedArray;","var _isArrayLike = /*#__PURE__*/require(\"./_isArrayLike.js\");\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}\nmodule.exports = _makeFlat;","function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _map;","var _isArray = /*#__PURE__*/require(\"./_isArray.js\");\nvar _isInteger = /*#__PURE__*/require(\"./_isInteger.js\");\n/**\n * Makes a shallow clone of an object, applying the given fn to the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {Function} fn The function to apply to the property\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\nfunction _modify(prop, fn, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = fn(arr[prop]);\n    return arr;\n  }\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = fn(result[prop]);\n  return result;\n}\nmodule.exports = _modify;","var _isString = /*#__PURE__*/require(\"./_isString.js\");\nfunction _nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n}\nmodule.exports = _nth;","var _has = /*#__PURE__*/require(\"./_has.js\"); // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\nmodule.exports = typeof Object.is === 'function' ? Object.is : _objectIs;","var _isInteger = /*#__PURE__*/require(\"./_isInteger.js\");\nvar _nth = /*#__PURE__*/require(\"./_nth.js\");\nfunction _path(pathAr, obj) {\n  var val = obj;\n  for (var i = 0; i < pathAr.length; i += 1) {\n    if (val == null) {\n      return undefined;\n    }\n    const p = pathAr[i];\n    if (_isInteger(p)) {\n      val = _nth(p, val);\n    } else {\n      val = val[p];\n    }\n  }\n  return val;\n}\nmodule.exports = _path;","function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}\nmodule.exports = _pipe;","function _promap(f, g, profunctor) {\n  return function (x) {\n    return g(profunctor(f(x)));\n  };\n}\nmodule.exports = _promap;","function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\nmodule.exports = _quote;","var _arrayReduce = /*#__PURE__*/require(\"./_arrayReduce.js\");\nvar _createReduce = /*#__PURE__*/require(\"./_createReduce.js\");\nfunction _iterableReduce(reducer, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = reducer(acc, step.value);\n    step = iter.next();\n  }\n  return acc;\n}\nfunction _methodReduce(reducer, acc, obj, methodName) {\n  return obj[methodName](reducer, acc);\n}\nvar _reduce = /*#__PURE__*/_createReduce(_arrayReduce, _methodReduce, _iterableReduce);\nmodule.exports = _reduce;","function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\nmodule.exports = _reduced;","var _objectAssign = /*#__PURE__*/require(\"./_objectAssign.js\");\nvar _identity = /*#__PURE__*/require(\"./_identity.js\");\nvar _isArrayLike = /*#__PURE__*/require(\"./_isArrayLike.js\");\nvar _isTransformer = /*#__PURE__*/require(\"./_isTransformer.js\");\nvar objOf = /*#__PURE__*/require(\"../objOf.js\");\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nfunction _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}\nmodule.exports = _stepCat;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\nmodule.exports = _toISOString;","var _includes = /*#__PURE__*/require(\"./_includes.js\");\nvar _map = /*#__PURE__*/require(\"./_map.js\");\nvar _quote = /*#__PURE__*/require(\"./_quote.js\");\nvar _toISOString = /*#__PURE__*/require(\"./_toISOString.js\");\nvar keys = /*#__PURE__*/require(\"../keys.js\");\nvar reject = /*#__PURE__*/require(\"../reject.js\");\nfunction _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Map]':\n      return 'new Map(' + recur(Array.from(x)) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object Set]':\n      return 'new Set(' + recur(Array.from(x).sort()) + ')';\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\nmodule.exports = _toString;","function _xArrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\nmodule.exports = _xArrayReduce;","var _createReduce = /*#__PURE__*/require(\"./_createReduce.js\");\nvar _xArrayReduce = /*#__PURE__*/require(\"./_xArrayReduce.js\");\nvar bind = /*#__PURE__*/require(\"../bind.js\");\nfunction _xIterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\nfunction _xMethodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\nvar _xReduce = /*#__PURE__*/_createReduce(_xArrayReduce, _xMethodReduce, _xIterableReduce);\nmodule.exports = _xReduce;","var _reduced = /*#__PURE__*/require(\"./_reduced.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n  return XAll;\n}();\nfunction _xall(f) {\n  return function (xf) {\n    return new XAll(f, xf);\n  };\n}\nmodule.exports = _xall;","var _reduced = /*#__PURE__*/require(\"./_reduced.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n  return XAny;\n}();\nfunction _xany(f) {\n  return function (xf) {\n    return new XAny(f, xf);\n  };\n}\nmodule.exports = _xany;","var _concat = /*#__PURE__*/require(\"./_concat.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n  return XAperture;\n}();\nfunction _xaperture(n) {\n  return function (xf) {\n    return new XAperture(n, xf);\n  };\n}\nmodule.exports = _xaperture;","var _flatCat = /*#__PURE__*/require(\"./_flatCat.js\");\nvar _xmap = /*#__PURE__*/require(\"./_xmap.js\");\nfunction _xchain(f) {\n  return function (xf) {\n    return _xmap(f)(_flatCat(xf));\n  };\n}\nmodule.exports = _xchain;","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n  return XDrop;\n}();\nfunction _xdrop(n) {\n  return function (xf) {\n    return new XDrop(n, xf);\n  };\n}\nmodule.exports = _xdrop;","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    if (n <= 0) {\n      return xf;\n    }\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  return XDropLast;\n}();\nfunction _xdropLast(n) {\n  return function (xf) {\n    return new XDropLast(n, xf);\n  };\n}\nmodule.exports = _xdropLast;","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar _xReduce = /*#__PURE__*/require(\"./_xReduce.js\");\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _xReduce(this.xf, result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n  return XDropLastWhile;\n}();\nfunction _xdropLastWhile(fn) {\n  return function (xf) {\n    return new XDropLastWhile(fn, xf);\n  };\n}\nmodule.exports = _xdropLastWhile;","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n  return XDropRepeatsWith;\n}();\nfunction _xdropRepeatsWith(pred) {\n  return function (xf) {\n    return new XDropRepeatsWith(pred, xf);\n  };\n}\nmodule.exports = _xdropRepeatsWith;","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n  return XDropWhile;\n}();\nfunction _xdropWhile(f) {\n  return function (xf) {\n    return new XDropWhile(f, xf);\n  };\n}\nmodule.exports = _xdropWhile;","module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n  return XFilter;\n}();\nfunction _xfilter(f) {\n  return function (xf) {\n    return new XFilter(f, xf);\n  };\n}\nmodule.exports = _xfilter;","var _reduced = /*#__PURE__*/require(\"./_reduced.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n  return XFind;\n}();\nfunction _xfind(f) {\n  return function (xf) {\n    return new XFind(f, xf);\n  };\n}\nmodule.exports = _xfind;","var _reduced = /*#__PURE__*/require(\"./_reduced.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n  return XFindIndex;\n}();\nfunction _xfindIndex(f) {\n  return function (xf) {\n    return new XFindIndex(f, xf);\n  };\n}\nmodule.exports = _xfindIndex;","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n  return XFindLast;\n}();\nfunction _xfindLast(f) {\n  return function (xf) {\n    return new XFindLast(f, xf);\n  };\n}\nmodule.exports = _xfindLast;","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n  return XFindLastIndex;\n}();\nfunction _xfindLastIndex(f) {\n  return function (xf) {\n    return new XFindLastIndex(f, xf);\n  };\n}\nmodule.exports = _xfindLastIndex;","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n  return XMap;\n}();\nvar _xmap = function _xmap(f) {\n  return function (xf) {\n    return new XMap(f, xf);\n  };\n};\nmodule.exports = _xmap;","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar _promap = /*#__PURE__*/require(\"./_promap.js\");\nvar XPromap = /*#__PURE__*/function () {\n  function XPromap(f, g, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.g = g;\n  }\n  XPromap.prototype['@@transducer/init'] = _xfBase.init;\n  XPromap.prototype['@@transducer/result'] = _xfBase.result;\n  XPromap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, _promap(this.f, this.g, input));\n  };\n  return XPromap;\n}();\nfunction _xpromap(f, g) {\n  return function (xf) {\n    return new XPromap(f, g, xf);\n  };\n}\nmodule.exports = _xpromap;","var _clone = /*#__PURE__*/require(\"./_clone.js\");\nvar _has = /*#__PURE__*/require(\"./_has.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, _clone(this.valueAcc, false)];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n  return XReduceBy;\n}();\nfunction _xreduceBy(valueFn, valueAcc, keyFn) {\n  return function (xf) {\n    return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n  };\n}\nmodule.exports = _xreduceBy;","var _curry3 = /*#__PURE__*/require(\"./_curry3.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar tInit = '@@transducer/init';\nvar tStep = '@@transducer/step';\nvar XScan = /*#__PURE__*/function () {\n  function XScan(reducer, acc, xf) {\n    this.xf = xf;\n    this.f = reducer;\n    this.acc = acc;\n  }\n  XScan.prototype[tInit] = function () {\n    return this.xf[tStep](this.xf[tInit](), this.acc);\n  };\n  XScan.prototype['@@transducer/result'] = _xfBase.result;\n  XScan.prototype[tStep] = function (result, input) {\n    if (result['@@transducer/reduced']) {\n      return result;\n    }\n    this.acc = this.f(this.acc, input);\n    return this.xf[tStep](result, this.acc);\n  };\n  return XScan;\n}();\nvar _xscan = /*#__PURE__*/_curry3(function _xscan(reducer, acc, xf) {\n  return new XScan(reducer, acc, xf);\n});\nmodule.exports = _xscan;","var _reduced = /*#__PURE__*/require(\"./_reduced.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n  return XTake;\n}();\nfunction _xtake(n) {\n  return function (xf) {\n    return new XTake(n, xf);\n  };\n}\nmodule.exports = _xtake;","var _reduced = /*#__PURE__*/require(\"./_reduced.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n  return XTakeWhile;\n}();\nfunction _xtakeWhile(f) {\n  return function (xf) {\n    return new XTakeWhile(f, xf);\n  };\n}\nmodule.exports = _xtakeWhile;","var _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n  return XTap;\n}();\nfunction _xtap(f) {\n  return function (xf) {\n    return new XTap(f, xf);\n  };\n}\nmodule.exports = _xtap;","var _Set = /*#__PURE__*/require(\"./_Set.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XUniqBy = /*#__PURE__*/function () {\n  function XUniqBy(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.set = new _Set();\n  }\n  XUniqBy.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqBy.prototype['@@transducer/result'] = _xfBase.result;\n  XUniqBy.prototype['@@transducer/step'] = function (result, input) {\n    return this.set.add(this.f(input)) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n  return XUniqBy;\n}();\nfunction _xuniqBy(f) {\n  return function (xf) {\n    return new XUniqBy(f, xf);\n  };\n}\nmodule.exports = _xuniqBy;","var _includesWith = /*#__PURE__*/require(\"./_includesWith.js\");\nvar _xfBase = /*#__PURE__*/require(\"./_xfBase.js\");\nvar XUniqWith = /*#__PURE__*/function () {\n  function XUniqWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.items = [];\n  }\n  XUniqWith.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqWith.prototype['@@transducer/result'] = _xfBase.result;\n  XUniqWith.prototype['@@transducer/step'] = function (result, input) {\n    if (_includesWith(this.pred, input, this.items)) {\n      return result;\n    } else {\n      this.items.push(input);\n      return this.xf['@@transducer/step'](result, input);\n    }\n  };\n  return XUniqWith;\n}();\nfunction _xuniqWith(pred) {\n  return function (xf) {\n    return new XUniqWith(pred, xf);\n  };\n}\nmodule.exports = _xuniqWith;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n  return XWrap;\n}();\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\nmodule.exports = _xwrap;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _filter = /*#__PURE__*/require(\"./internal/_filter.js\");\nvar _Set = /*#__PURE__*/require(\"./internal/_Set.js\");\nvar uniq = /*#__PURE__*/require(\"./uniq.js\");\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var toKeep = new _Set();\n  for (var i = 0; i < list1.length; i += 1) {\n    toKeep.add(list1[i]);\n  }\n  return uniq(_filter(toKeep.has.bind(toKeep), list2));\n});\nmodule.exports = intersection;","var _checkForMethod = /*#__PURE__*/require(\"./internal/_checkForMethod.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function _intersperse(separator, list) {\n  var length = list.length;\n  if (length === 0) {\n    return [];\n  }\n  var out = Array(length * 2 - 1);\n  var idx = 0;\n  while (idx < length) {\n    var i = idx * 2;\n    if (idx === length - 1) {\n      out[i] = list[idx];\n    } else {\n      out[i] = list[idx];\n      out[i + 1] = separator;\n    }\n    idx += 1;\n  }\n  return out;\n}));\nmodule.exports = intersperse;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _isTransformer = /*#__PURE__*/require(\"./internal/_isTransformer.js\");\nvar _xReduce = /*#__PURE__*/require(\"./internal/_xReduce.js\");\nvar _stepCat = /*#__PURE__*/require(\"./internal/_stepCat.js\");\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, transducer, list) {\n  var xf = transducer(_isTransformer(acc) ? acc : _stepCat(acc));\n  return _xReduce(xf, xf['@@transducer/init'](), list);\n});\nmodule.exports = into;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\nvar keys = /*#__PURE__*/require(\"./keys.js\");\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = invert;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar keys = /*#__PURE__*/require(\"./keys.js\");\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = invertObj;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isFunction = /*#__PURE__*/require(\"./internal/_isFunction.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\nvar toString = /*#__PURE__*/require(\"./toString.js\");\n/**\n * Given an `arity` (Number) and a `name` (String) the `invoker` function\n * returns a curried function that takes `arity` arguments and a `context`\n * object. It will \"invoke\" the `name`'d function (a method) on the `context`\n * object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *      // A function with no arguments\n *      const asJson = invoker(0, \"json\")\n *      // Just like calling .then((response) => response.json())\n *      fetch(\"http://example.com/index.json\").then(asJson)\n *\n *      // A function with one argument\n *      const sliceFrom = invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *\n *      // A function with two arguments\n *      const sliceFrom6 = invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      // NOTE: You can't simply pass some of the arguments to the initial invoker function.\n *      const firstCreditCardSection = invoker(2, \"slice\", 0, 4)\n *      firstCreditCardSection(\"4242 4242 4242 4242\") // => Function<...>\n *\n *      // Since invoker returns a curried function, you may partially apply it to create the function you need.\n *      const firstCreditCardSection = invoker(2, \"slice\")(0, 4)\n *      firstCreditCardSection(\"4242 4242 4242 4242\") // => \"4242\"\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nmodule.exports = invoker;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * See if an object (i.e. `val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n * If `val` was created using `Object.create`, `R.is(Object, val) === true`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val instanceof Ctor || val != null && (val.constructor === Ctor || Ctor.name === 'Object' && typeof val === 'object');\n});\nmodule.exports = is;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar empty = /*#__PURE__*/require(\"./empty.js\");\nvar equals = /*#__PURE__*/require(\"./equals.js\");\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty, R.isNotEmpty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);           //=> false\n *      R.isEmpty([]);                  //=> true\n *      R.isEmpty('');                  //=> true\n *      R.isEmpty(null);                //=> false\n *      R.isEmpty({});                  //=> true\n *      R.isEmpty({length: 0});         //=> false\n *      R.isEmpty(Uint8Array.from('')); //=> true\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nmodule.exports = isEmpty;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nmodule.exports = isNil;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar isEmpty = /*#__PURE__*/require(\"./isEmpty.js\");\n/**\n * Returns `false` if the given value is its type's empty value; `true`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.29.2\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty, R.isEmpty\n * @example\n *\n *      R.isNotEmpty([1, 2, 3]);           //=> true\n *      R.isNotEmpty([]);                  //=> false\n *      R.isNotEmpty('');                  //=> false\n *      R.isNotEmpty(null);                //=> true\n *      R.isNotEmpty({});                  //=> false\n *      R.isNotEmpty({length: 0});         //=> true\n *      R.isNotEmpty(Uint8Array.from('')); //=> false\n */\nvar isNotEmpty = /*#__PURE__*/_curry1(function isNotEmpty(x) {\n  return !isEmpty(x);\n});\nmodule.exports = isNotEmpty;","var isNil = /*#__PURE__*/require(\"./isNil.js\");\nvar _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Checks if the input value is not `null` and not `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.29.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is not `undefined` or not `null`, otherwise `false`.\n * @example\n *\n *      R.isNotNil(null); //=> false\n *      R.isNotNil(undefined); //=> false\n *      R.isNotNil(0); //=> true\n *      R.isNotNil([]); //=> true\n */\nvar isNotNil = /*#__PURE__*/_curry1(function isNotNil(x) {\n  return !isNil(x);\n});\nmodule.exports = isNotNil;","var invoker = /*#__PURE__*/require(\"./invoker.js\");\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nmodule.exports = join;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar converge = /*#__PURE__*/require(\"./converge.js\");\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nmodule.exports = juxt;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\nvar _isArguments = /*#__PURE__*/require(\"./internal/_isArguments.js\"); // cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nmodule.exports = keys;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nmodule.exports = keysIn;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _nth = /*#__PURE__*/require(\"./internal/_nth.js\");\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/_curry1(function (list) {\n  return _nth(-1, list);\n});\nmodule.exports = last;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isArray = /*#__PURE__*/require(\"./internal/_isArray.js\");\nvar equals = /*#__PURE__*/require(\"./equals.js\");\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf, R.findLastIndex\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nmodule.exports = lastIndexOf;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _isNumber = /*#__PURE__*/require(\"./internal/_isNumber.js\");\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nmodule.exports = length;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar map = /*#__PURE__*/require(\"./map.js\");\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nmodule.exports = lens;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _nth = /*#__PURE__*/require(\"./internal/_nth.js\");\nvar lens = /*#__PURE__*/require(\"./lens.js\");\nvar update = /*#__PURE__*/require(\"./update.js\");\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over, R.nth\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(function (val) {\n    return _nth(n, val);\n  }, update(n));\n});\nmodule.exports = lensIndex;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar assocPath = /*#__PURE__*/require(\"./assocPath.js\");\nvar lens = /*#__PURE__*/require(\"./lens.js\");\nvar _path = /*#__PURE__*/require(\"./internal/_path.js\");\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(function (val) {\n    return _path(p, val);\n  }, assocPath(p));\n});\nmodule.exports = lensPath;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar assoc = /*#__PURE__*/require(\"./assoc.js\");\nvar lens = /*#__PURE__*/require(\"./lens.js\");\nvar prop = /*#__PURE__*/require(\"./prop.js\");\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nmodule.exports = lensProp;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar liftN = /*#__PURE__*/require(\"./liftN.js\");\n/**\n * \"lifts\" a function of arity >= 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([100, 200], [30, 40], [5, 6, 7]); //=> [135, 136, 137, 145, 146, 147, 235, 236, 237, 245, 246, 247]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([10, 20], [1], [2, 3], [4], [100, 200]); //=> [117, 217, 118, 218, 127, 227, 128, 228]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nmodule.exports = lift;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _arrayReduce = /*#__PURE__*/require(\"./internal/_arrayReduce.js\");\nvar ap = /*#__PURE__*/require(\"./ap.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\nvar map = /*#__PURE__*/require(\"./map.js\");\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _arrayReduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nmodule.exports = liftN;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nmodule.exports = lt;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nmodule.exports = lte;","var _arrayReduce = /*#__PURE__*/require(\"./internal/_arrayReduce.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _map = /*#__PURE__*/require(\"./internal/_map.js\");\nvar _xmap = /*#__PURE__*/require(\"./internal/_xmap.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\nvar keys = /*#__PURE__*/require(\"./keys.js\");\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex, R.pluck, R.project\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _arrayReduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nmodule.exports = map;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = Array(len);\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nmodule.exports = mapAccum;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = Array(list.length);\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [tuple[0], result];\n});\nmodule.exports = mapAccumRight;","var _arrayReduce = /*#__PURE__*/require(\"./internal/_arrayReduce.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar keys = /*#__PURE__*/require(\"./keys.js\");\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _arrayReduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nmodule.exports = mapObjIndexed;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nmodule.exports = match;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isInteger = /*#__PURE__*/require(\"./internal/_isInteger.js\");\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nmodule.exports = mathMod;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar toString = /*#__PURE__*/require(\"./toString.js\");\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  if (a === b) {\n    return b;\n  }\n  function safeMax(x, y) {\n    if (x > y !== y > x) {\n      return y > x ? y : x;\n    }\n    return undefined;\n  }\n  var maxByValue = safeMax(a, b);\n  if (maxByValue !== undefined) {\n    return maxByValue;\n  }\n  var maxByType = safeMax(typeof a, typeof b);\n  if (maxByType !== undefined) {\n    return maxByType === typeof a ? a : b;\n  }\n  var stringA = toString(a);\n  var maxByStringValue = safeMax(stringA, toString(b));\n  if (maxByStringValue !== undefined) {\n    return maxByStringValue === stringA ? a : b;\n  }\n  return b;\n});\nmodule.exports = max;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar max = /*#__PURE__*/require(\"./max.js\");\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  var resultB = f(b);\n  return max(f(a), resultB) === resultB ? b : a;\n});\nmodule.exports = maxBy;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar sum = /*#__PURE__*/require(\"./sum.js\");\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nmodule.exports = mean;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar mean = /*#__PURE__*/require(\"./mean.js\");\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nmodule.exports = median;","var _arity = /*#__PURE__*/require(\"./internal/_arity.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\n/**\n * Takes a string-returning function `keyGen` and a function `fn` and returns\n * a new function that returns cached results for subsequent\n * calls with the same arguments.\n *\n * When the function is invoked, `keyGen` is applied to the same arguments\n * and its result becomes the cache key. If the cache contains something\n * under that key, the function simply returns it and does not invoke `fn` at all.\n *\n * Otherwise `fn` is applied to the same arguments and its return value\n * is cached under that key and returned by the function.\n *\n * Care must be taken when implementing `keyGen` to avoid key collision,\n * or if tracking references, memory leaks and mutating arguments.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} keyGen The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *      const withAge = memoizeWith(o => `${o.birth}/${o.death}`, ({birth, death}) => {\n *      //                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^\n *      //                          keyGen                        fn\n *        console.log(`computing age for ${birth}/${death}`);\n *        return ({birth, death, age: death - birth});\n *      });\n *\n *      withAge({birth: 1921, death: 1999});\n *      //=> LOG: computing age for 1921/1999\n *      //=> {birth: 1921, death: 1999, age: 78} (returned from fn)\n *\n *      withAge({birth: 1921, death: 1999});\n *      //=> {birth: 1921, death: 1999, age: 78} (returned from cache)\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(keyGen, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = keyGen.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nmodule.exports = memoizeWith;","var _objectAssign = /*#__PURE__*/require(\"./internal/_objectAssign.js\");\nvar _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Creates one new object with the own properties from a list of objects.\n * If a key exists in more than one object, the value from the last\n * object it exists in will be used.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nmodule.exports = mergeAll;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar mergeDeepWithKey = /*#__PURE__*/require(\"./mergeDeepWithKey.js\");\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepLeft;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar mergeDeepWithKey = /*#__PURE__*/require(\"./mergeDeepWithKey.js\");\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepRight;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar mergeDeepWithKey = /*#__PURE__*/require(\"./mergeDeepWithKey.js\");\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepWith;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _isObject = /*#__PURE__*/require(\"./internal/_isObject.js\");\nvar mergeWithKey = /*#__PURE__*/require(\"./mergeWithKey.js\");\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepWithKey;","var _objectAssign = /*#__PURE__*/require(\"./internal/_objectAssign.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\nvar mergeLeft = /*#__PURE__*/_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\nmodule.exports = mergeLeft;","var _objectAssign = /*#__PURE__*/require(\"./internal/_objectAssign.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\nvar mergeRight = /*#__PURE__*/_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\nmodule.exports = mergeRight;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar mergeWithKey = /*#__PURE__*/require(\"./mergeWithKey.js\");\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nmodule.exports = mergeWith;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n  l = l || {};\n  r = r || {};\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n  return result;\n});\nmodule.exports = mergeWithKey;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar toString = /*#__PURE__*/require(\"./toString.js\");\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  if (a === b) {\n    return a;\n  }\n  function safeMin(x, y) {\n    if (x < y !== y < x) {\n      return y < x ? y : x;\n    }\n    return undefined;\n  }\n  var minByValue = safeMin(a, b);\n  if (minByValue !== undefined) {\n    return minByValue;\n  }\n  var minByType = safeMin(typeof a, typeof b);\n  if (minByType !== undefined) {\n    return minByType === typeof a ? a : b;\n  }\n  var stringA = toString(a);\n  var minByStringValue = safeMin(stringA, toString(b));\n  if (minByStringValue !== undefined) {\n    return minByStringValue === stringA ? a : b;\n  }\n  return a;\n});\nmodule.exports = min;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar min = /*#__PURE__*/require(\"./min.js\");\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  var resultB = f(b);\n  return min(f(a), resultB) === resultB ? b : a;\n});\nmodule.exports = minBy;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar modifyPath = /*#__PURE__*/require(\"./modifyPath.js\");\n/**\n * Creates a copy of the passed object by applying an `fn` function to the given `prop` property.\n *\n * The function will not be invoked, and the object will not change\n * if its corresponding property does not exist in the object.\n * All non-primitive properties are copied to the new object by reference.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig Idx -> (v -> v) -> {k: v} -> {k: v}\n * @param {String|Number} prop The property to be modified.\n * @param {Function} fn The function to apply to the property.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const person = {name: 'James', age: 20, pets: ['dog', 'cat']};\n *      R.modify('age', R.add(1), person); //=> {name: 'James', age: 21, pets: ['dog', 'cat']}\n *      R.modify('pets', R.append('turtle'), person); //=> {name: 'James', age: 20, pets: ['dog', 'cat', 'turtle']}\n */\nvar modify = /*#__PURE__*/_curry3(function modify(prop, fn, object) {\n  return modifyPath([prop], fn, object);\n});\nmodule.exports = modify;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _isArray = /*#__PURE__*/require(\"./internal/_isArray.js\");\nvar _isObject = /*#__PURE__*/require(\"./internal/_isObject.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\nvar _assoc = /*#__PURE__*/require(\"./internal/_assoc.js\");\nvar _modify = /*#__PURE__*/require(\"./internal/_modify.js\");\n/**\n * Creates a shallow clone of the passed object by applying an `fn` function\n * to the value at the given path.\n *\n * The function will not be invoked, and the object will not change\n * if its corresponding path does not exist in the object.\n * All non-primitive properties are copied to the new object by reference.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig [Idx] -> (v -> v) -> {k: v} -> {k: v}\n * @param {Array} path The path to be modified.\n * @param {Function} fn The function to apply to the path.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const person = {name: 'James', address: { zipCode: '90216' }};\n *      R.modifyPath(['address', 'zipCode'], R.reverse, person); //=> {name: 'James', address: { zipCode: '61209' }}\n *\n *      // Can handle arrays too\n *      const person = {name: 'James', addresses: [{ zipCode: '90216' }]};\n *      R.modifyPath(['addresses', 0, 'zipCode'], R.reverse, person); //=> {name: 'James', addresses: [{ zipCode: '61209' }]}\n */\nvar modifyPath = /*#__PURE__*/_curry3(function modifyPath(path, fn, object) {\n  if (!_isObject(object) && !_isArray(object)) {\n    return object;\n  }\n  if (path.length === 0) {\n    return fn(object);\n  }\n  var idx = path[0];\n  if (!_has(idx, object)) {\n    return object;\n  }\n  if (path.length === 1) {\n    return _modify(idx, fn, object);\n  }\n  var val = modifyPath(Array.prototype.slice.call(path, 1), fn, object[idx]);\n  if (val === object[idx]) {\n    return object;\n  }\n  return _assoc(idx, val, object);\n});\nmodule.exports = modifyPath;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nmodule.exports = modulo;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\nvar move = /*#__PURE__*/_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\nmodule.exports = move;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nmodule.exports = multiply;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nmodule.exports = nAry;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nmodule.exports = negate;","var _complement = /*#__PURE__*/require(\"./internal/_complement.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar all = /*#__PURE__*/require(\"./all.js\");\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 !== 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\nmodule.exports = none;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nmodule.exports = not;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _nth = /*#__PURE__*/require(\"./internal/_nth.js\");\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(_nth);\nmodule.exports = nth;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _nth = /*#__PURE__*/require(\"./internal/_nth.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return _nth(n, arguments);\n  });\n});\nmodule.exports = nthArg;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator ∘.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nmodule.exports = o;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nmodule.exports = objOf;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Given a constructor and a value, returns a new instance of that constructor\n * containing the value.\n *\n * Dispatches to the `fantasy-land/of` method of the constructor first (if present)\n * or to the `of` method last (if present). When neither are present, wraps the\n * value in an array.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig (* -> {*}) -> a -> {a}\n * @param {Object} Ctor A constructor\n * @param {*} val any value\n * @return {*} An instance of the `Ctor` wrapping `val`.\n * @example\n *\n *      R.of(Array, 42);   //=> [42]\n *      R.of(Array, [42]); //=> [[42]]\n *      R.of(Maybe, 42);   //=> Maybe.Just(42)\n */\nvar of = /*#__PURE__*/_curry2(function of(Ctor, val) {\n  return typeof Ctor['fantasy-land/of'] === 'function' ? Ctor['fantasy-land/of'](val) : typeof Ctor.of === 'function' ? Ctor.of(val) : [val];\n});\nmodule.exports = of;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nmodule.exports = omit;","var curryN = /*#__PURE__*/require(\"./internal/_curryN.js\");\n/**\n * Takes a binary function `f`, a unary function `g`, and two values.\n * Applies `g` to each value, then applies the result of each to `f`.\n *\n * Also known as the P combinator.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig ((a, a) -> b) -> (c -> a) -> c -> c -> b\n * @param {Function} f a binary function\n * @param {Function} g a unary function\n * @param {any} a any value\n * @param {any} b any value\n * @return {any} The result of `f`\n * @example\n *\n *      const eqBy = R.on((a, b) => a === b);\n *      eqBy(R.prop('a'), {b:0, a:1}, {a:1}) //=> true;\n *\n *      const containsInsensitive = R.on(R.includes, R.toLower);\n *      containsInsensitive('o', 'FOO'); //=> true\n * @symb R.on(f, g, a, b) = f(g(a), g(b))\n */\nvar on = /*#__PURE__*/curryN(4, [], function on(f, g, a, b) {\n  return f(g(a), g(b));\n});\nmodule.exports = on;","var _arity = /*#__PURE__*/require(\"./internal/_arity.js\");\nvar _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nmodule.exports = once;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns the first argument if it is truthy, otherwise the second argument.\n * Acts as the boolean `or` statement if both inputs are `Boolean`s.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any}\n * @see R.either, R.and\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nmodule.exports = or;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _assertPromise = /*#__PURE__*/require(\"./internal/_assertPromise.js\");\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.andThen\n * @example\n *\n *      const failedFetch = id => Promise.reject('bad ID');\n *      const useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' });\n *\n *      //recoverFromFailure :: String -> Promise ({ firstName, lastName })\n *      const recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.andThen(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log);\n */\nvar otherwise = /*#__PURE__*/_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n  return p.then(null, f);\n});\nmodule.exports = otherwise;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\"); // `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return {\n    value: x,\n    map: function (f) {\n      return Identity(f(x));\n    }\n  };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.view, R.set, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nmodule.exports = over;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nmodule.exports = pair;","var _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _createPartialApplicator = /*#__PURE__*/require(\"./internal/_createPartialApplicator.js\");\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(3); //=> 6\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nmodule.exports = partial;","var mergeDeepRight = /*#__PURE__*/require(\"./mergeDeepRight.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Takes a function `f` and an object, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the object\n * provided initially merged deeply (right) with the object provided as an argument to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (({ a, b, c, ..., n }) -> x) -> { a, b, c, ...} -> ({ d, e, f, ..., n } -> x)\n * @param {Function} f\n * @param {Object} props\n * @return {Function}\n * @see R.partial, R.partialRight, R.curry, R.mergeDeepRight\n * @example\n *\n *      const multiply2 = ({ a, b }) => a * b;\n *      const double = R.partialObject(multiply2, { a: 2 });\n *      double({ b: 2 }); //=> 4\n *\n *      const greet = ({ salutation, title, firstName, lastName }) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partialObject(greet, { salutation: 'Hello' });\n *      const sayHelloToMs = R.partialObject(sayHello, { title: 'Ms.' });\n *      sayHelloToMs({ firstName: 'Jane', lastName: 'Jones' }); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialObject(f, { a, b })({ c, d }) = f({ a, b, c, d })\n */\nvar partialObject = /*#__PURE__*/_curry2((f, o) => props => f.call(this, mergeDeepRight(o, props)));\nmodule.exports = partialObject;","var _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _createPartialApplicator = /*#__PURE__*/require(\"./internal/_createPartialApplicator.js\");\nvar flip = /*#__PURE__*/require(\"./flip.js\");\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nmodule.exports = partialRight;","var filter = /*#__PURE__*/require(\"./filter.js\");\nvar juxt = /*#__PURE__*/require(\"./juxt.js\");\nvar reject = /*#__PURE__*/require(\"./reject.js\");\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nmodule.exports = partition;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _path = /*#__PURE__*/require(\"./internal/_path.js\");\n/**\n * Retrieves the value at a given path. The nodes of the path can be arbitrary strings or non-negative integers.\n * For anything else, the value is unspecified. Integer paths are meant to index arrays, strings are meant for objects.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {a} -> a | Undefined\n * @sig Idx = String | NonNegativeInt\n * @param {Array} path The path to use.\n * @param {Object} obj The object or array to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth, R.assocPath, R.dissocPath\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n *      R.path([2], {'2': 2}); //=> 2\n *      R.path([-2], {'-2': 'a'}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(_path);\nmodule.exports = path;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _path = /*#__PURE__*/require(\"./internal/_path.js\");\nvar equals = /*#__PURE__*/require(\"./equals.js\");\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int | Symbol\n * @sig a -> [Idx] -> {a} -> Boolean\n * @param {*} val The value to compare the nested property with\n * @param {Array} path The path of the nested property to use\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @see R.whereEq, R.propEq, R.pathSatisfies, R.equals\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(90210, ['address', 'zipCode']);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(val, pathAr, obj) {\n  return equals(_path(pathAr, obj), val);\n});\nmodule.exports = pathEq;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _path = /*#__PURE__*/require(\"./internal/_path.js\");\nvar defaultTo = /*#__PURE__*/require(\"./defaultTo.js\");\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, _path(p, obj));\n});\nmodule.exports = pathOr;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _path = /*#__PURE__*/require(\"./internal/_path.js\");\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int | Symbol\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n *      R.pathSatisfies(R.is(Object), [], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return pred(_path(propPath, obj));\n});\nmodule.exports = pathSatisfies;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isInteger = /*#__PURE__*/require(\"./internal/_isInteger.js\");\nvar _nth = /*#__PURE__*/require(\"./internal/_nth.js\");\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Object\n * @typedefn Idx = [String | Int | Symbol]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\nvar paths = /*#__PURE__*/_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n      p = paths[idx];\n      val = _isInteger(p) ? _nth(p, val) : val[p];\n      idx += 1;\n    }\n    return val;\n  });\n});\nmodule.exports = paths;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = pick;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = pickAll;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nmodule.exports = pickBy;","var _arity = /*#__PURE__*/require(\"./internal/_arity.js\");\nvar _pipe = /*#__PURE__*/require(\"./internal/_pipe.js\");\nvar reduce = /*#__PURE__*/require(\"./reduce.js\");\nvar tail = /*#__PURE__*/require(\"./tail.js\");\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n * @symb R.pipe(f, g, h)(a)(b) = h(g(f(a)))(b)\n */\nfunction pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}\nmodule.exports = pipe;","var _arity = /*#__PURE__*/require(\"./internal/_arity.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar head = /*#__PURE__*/require(\"./head.js\");\nvar _reduce = /*#__PURE__*/require(\"./internal/_reduce.js\");\nvar tail = /*#__PURE__*/require(\"./tail.js\");\nvar identity = /*#__PURE__*/require(\"./identity.js\");\n/**\n * Performs left-to-right function composition using transforming function. The first function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried. Transforming function is not used on the\n * first argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to pipe\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, g(...args)))\n */\nvar pipeWith = /*#__PURE__*/_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n  var headList = head(list);\n  var tailList = tail(list);\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\nmodule.exports = pipeWith;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar map = /*#__PURE__*/require(\"./map.js\");\nvar prop = /*#__PURE__*/require(\"./prop.js\");\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.project, R.prop, R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nmodule.exports = pluck;","var _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nmodule.exports = prepend;","var multiply = /*#__PURE__*/require(\"./multiply.js\");\nvar reduce = /*#__PURE__*/require(\"./reduce.js\");\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nmodule.exports = product;","var _map = /*#__PURE__*/require(\"./internal/_map.js\");\nvar identity = /*#__PURE__*/require(\"./identity.js\");\nvar pickAll = /*#__PURE__*/require(\"./pickAll.js\");\nvar useWith = /*#__PURE__*/require(\"./useWith.js\");\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @see R.pluck, R.props, R.prop\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nmodule.exports = project;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _promap = /*#__PURE__*/require(\"./internal/_promap.js\");\nvar _xpromap = /*#__PURE__*/require(\"./internal/_xpromap.js\");\n/**\n * Takes two functions as pre- and post- processors respectively for a third function,\n * i.e. `promap(f, g, h)(x) === g(h(f(x)))`.\n *\n * Dispatches to the `promap` method of the third argument, if present,\n * according to the [FantasyLand Profunctor spec](https://github.com/fantasyland/fantasy-land#profunctor).\n *\n * Acts as a transducer if a transformer is given in profunctor position.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (a -> b) -> (c -> d) -> (b -> c) -> (a -> d)\n * @sig Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n * @param {Function} f The preprocessor function, a -> b\n * @param {Function} g The postprocessor function, c -> d\n * @param {Profunctor} profunctor The profunctor instance to be promapped, e.g. b -> c\n * @return {Profunctor} The new profunctor instance, e.g. a -> d\n * @see R.transduce\n * @example\n *\n *      const decodeChar = R.promap(s => s.charCodeAt(), String.fromCharCode, R.add(-8))\n *      const decodeString = R.promap(R.split(''), R.join(''), R.map(decodeChar))\n *      decodeString(\"ziuli\") //=> \"ramda\"\n *\n * @symb R.promap(f, g, h) = x => g(h(f(x)))\n * @symb R.promap(f, g, profunctor) = profunctor.promap(f, g)\n */\nvar promap = /*#__PURE__*/_curry3( /*#__PURE__*/_dispatchable(['fantasy-land/promap', 'promap'], _xpromap, _promap));\nmodule.exports = promap;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isInteger = /*#__PURE__*/require(\"./internal/_isInteger.js\");\nvar _nth = /*#__PURE__*/require(\"./internal/_nth.js\");\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.props, R.pluck, R.project, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  if (obj == null) {\n    return;\n  }\n  return _isInteger(p) ? _nth(p, obj) : obj[p];\n});\nmodule.exports = prop;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar prop = /*#__PURE__*/require(\"./prop.js\");\nvar equals = /*#__PURE__*/require(\"./equals.js\");\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq),\n * and test nested path property with [`R.pathEq`](#pathEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig a -> String -> Object -> Boolean\n * @param {*} val The value to compare the property with\n * @param {String} name the specified object property's key\n * @param {*} obj The object to check the property in\n * @return {Boolean} `true` if the value equals the specified object property,\n *         `false` otherwise.\n * @see R.whereEq, R.pathEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('brown', 'hair');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(val, name, obj) {\n  return equals(val, prop(name, obj));\n});\nmodule.exports = propEq;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar prop = /*#__PURE__*/require(\"./prop.js\");\nvar is = /*#__PURE__*/require(\"./is.js\");\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, prop(name, obj));\n});\nmodule.exports = propIs;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar defaultTo = /*#__PURE__*/require(\"./defaultTo.js\");\nvar prop = /*#__PURE__*/require(\"./prop.js\");\n/**\n * Return the specified property of the given non-null object if the property\n * is present and it's value is not `null`, `undefined` or `NaN`.\n *\n * Otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return defaultTo(val, prop(p, obj));\n});\nmodule.exports = propOr;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar prop = /*#__PURE__*/require(\"./prop.js\");\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(prop(name, obj));\n});\nmodule.exports = propSatisfies;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar prop = /*#__PURE__*/require(\"./prop.js\");\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @see R.prop, R.pluck, R.project\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  return ps.map(function (p) {\n    return prop(p, obj);\n  });\n});\nmodule.exports = props;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isNumber = /*#__PURE__*/require(\"./internal/_isNumber.js\");\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = Array(from < to ? to - from : 0);\n  var finish = from < 0 ? to + Math.abs(from) : to - from;\n  var idx = 0;\n  while (idx < finish) {\n    result[idx] = idx + from;\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = range;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _xReduce = /*#__PURE__*/require(\"./internal/_xReduce.js\");\nvar _xwrap = /*#__PURE__*/require(\"./internal/_xwrap.js\");\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Be cautious of mutating and returning the accumulator. If you reuse it across\n * invocations, it will continue to accumulate onto the same value. The general\n * recommendation is to always return a new value. If you can't do so for\n * performance reasons, then be sure to reinitialize the accumulator on each\n * invocation.\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(function (xf, acc, list) {\n  return _xReduce(typeof xf === 'function' ? _xwrap(xf) : xf, acc, list);\n});\nmodule.exports = reduce;","var _clone = /*#__PURE__*/require(\"./internal/_clone.js\");\nvar _curryN = /*#__PURE__*/require(\"./internal/_curryN.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\nvar _reduced = /*#__PURE__*/require(\"./internal/_reduced.js\");\nvar _xReduce = /*#__PURE__*/require(\"./internal/_xReduce.js\");\nvar _xreduceBy = /*#__PURE__*/require(\"./internal/_xreduceBy.js\");\nvar _xwrap = /*#__PURE__*/require(\"./internal/_xwrap.js\");\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * The value function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to short circuit the iteration.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce, R.reduced\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  var xf = _xwrap(function (acc, elt) {\n    var key = keyFn(elt);\n    var value = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, false), elt);\n    if (value && value['@@transducer/reduced']) {\n      return _reduced(acc);\n    }\n    acc[key] = value;\n    return acc;\n  });\n  return _xReduce(xf, {}, list);\n}));\nmodule.exports = reduceBy;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*. `reduceRight` may use [`reduced`](#reduced)\n * to short circuit the iteration.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * Be cautious of mutating and returning the accumulator. If you reuse it across\n * invocations, it will continue to accumulate onto the same value. The general\n * recommendation is to always return a new value. If you can't do so for\n * performance reasons, then be sure to reinitialize the accumulator on each\n * invocation.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex, R.reduced\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx -= 1;\n  }\n  return acc;\n});\nmodule.exports = reduceRight;","var _curryN = /*#__PURE__*/require(\"./internal/_curryN.js\");\nvar _xReduce = /*#__PURE__*/require(\"./internal/_xReduce.js\");\nvar _xwrap = /*#__PURE__*/require(\"./internal/_xwrap.js\");\nvar _reduced = /*#__PURE__*/require(\"./internal/_reduced.js\");\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator. `reduceWhile` may alternatively be short-circuited\n * via [`reduced`](#reduced).\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 !== 0;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  var xf = _xwrap(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  });\n  return _xReduce(xf, a, list);\n});\nmodule.exports = reduceWhile;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _reduced = /*#__PURE__*/require(\"./internal/_reduced.js\");\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * This optimization is available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`reduceBy`](#reduceBy)\n * - [`reduceRight`](#reduceRight)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.reduceBy, R.reduceRight, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nmodule.exports = reduced;","var _complement = /*#__PURE__*/require(\"./internal/_complement.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar filter = /*#__PURE__*/require(\"./filter.js\");\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 !== 0;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nmodule.exports = reject;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nmodule.exports = remove;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar always = /*#__PURE__*/require(\"./always.js\");\nvar times = /*#__PURE__*/require(\"./times.js\");\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nmodule.exports = repeat;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nmodule.exports = replace;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _isString = /*#__PURE__*/require(\"./internal/_isString.js\");\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nmodule.exports = reverse;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xscan = /*#__PURE__*/require(\"./internal/_xscan.js\");\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3( /*#__PURE__*/_dispatchable([], _xscan, function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = Array(len + 1);\n  result[0] = acc;\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n}));\nmodule.exports = scan;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar ap = /*#__PURE__*/require(\"./ap.js\");\nvar map = /*#__PURE__*/require(\"./map.js\");\nvar prepend = /*#__PURE__*/require(\"./prepend.js\");\nvar reduceRight = /*#__PURE__*/require(\"./reduceRight.js\");\nvar identity = /*#__PURE__*/require(\"./internal/_identity.js\");\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `\"fantasy-land/traverse\"` or the `traverse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig fantasy-land/of :: TypeRep f => f ~> a -> f a\n * @sig (Applicative f, Traversable t) => TypeRep f -> t (f a) -> f (t a)\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Object|Function} TypeRepresentative with an `of` or `fantasy-land/of` method\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of(Array), Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of(Array), Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(F, traversable) {\n  var of = typeof F['fantasy-land/of'] === 'function' ? F['fantasy-land/of'] : typeof F.of === 'function' ? F.of : F;\n  var TypeRep = {\n    'fantasy-land/of': of\n  };\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](TypeRep, identity) : typeof traversable.traverse === 'function' ? traversable.traverse(TypeRep, identity) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nmodule.exports = sequence;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar always = /*#__PURE__*/require(\"./always.js\");\nvar over = /*#__PURE__*/require(\"./over.js\");\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.view, R.over, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nmodule.exports = set;","var _checkForMethod = /*#__PURE__*/require(\"./internal/_checkForMethod.js\");\nvar _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nmodule.exports = slice;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @see R.ascend, R.descend\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nmodule.exports = sort;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nmodule.exports = sortBy;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @see R.ascend, R.descend\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nmodule.exports = sortWith;","var invoker = /*#__PURE__*/require(\"./invoker.js\");\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `sep`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nmodule.exports = split;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar length = /*#__PURE__*/require(\"./length.js\");\nvar slice = /*#__PURE__*/require(\"./slice.js\");\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nmodule.exports = splitAt;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar slice = /*#__PURE__*/require(\"./slice.js\");\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nmodule.exports = splitEvery;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nmodule.exports = splitWhen;","var _curryN = /*#__PURE__*/require(\"./internal/_curryN.js\");\n/**\n * Splits an array into slices on every occurrence of a value.\n *\n * @func\n * @memberOf R\n * @since v0.26.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhenever(R.equals(2), [1, 2, 3, 2, 4, 5, 2, 6, 7]); //=> [[1], [3], [4, 5], [6, 7]]\n */\nvar splitWhenever = /*#__PURE__*/_curryN(2, [], function splitWhenever(pred, list) {\n  var acc = [];\n  var curr = [];\n  for (var i = 0; i < list.length; i = i + 1) {\n    if (!pred(list[i])) {\n      curr.push(list[i]);\n    }\n    if ((i < list.length - 1 && pred(list[i + 1]) || i === list.length - 1) && curr.length > 0) {\n      acc.push(curr);\n      curr = [];\n    }\n  }\n  return acc;\n});\nmodule.exports = splitWhenever;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar equals = /*#__PURE__*/require(\"./equals.js\");\nvar take = /*#__PURE__*/require(\"./take.js\");\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nmodule.exports = startsWith;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nmodule.exports = subtract;","var add = /*#__PURE__*/require(\"./add.js\");\nvar reduce = /*#__PURE__*/require(\"./reduce.js\");\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nmodule.exports = sum;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar _isArray = /*#__PURE__*/require(\"./internal/_isArray.js\");\nvar _isString = /*#__PURE__*/require(\"./internal/_isString.js\");\nvar clone = /*#__PURE__*/require(\"./clone.js\");\nvar swapObject = function (indexA, indexB, o) {\n  var copy = clone(o);\n  var properties = Object.getOwnPropertyNames(copy);\n  if (properties.includes(indexA) && properties.includes(indexB)) {\n    var tmp = copy[indexA];\n    copy[indexA] = copy[indexB];\n    copy[indexB] = tmp;\n  }\n  return copy;\n};\nvar swapList = function (indexA, indexB, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveIndexA = indexA < 0 ? length + indexA : indexA;\n  var positiveIndexB = indexB < 0 ? length + indexB : indexB;\n  var positiveMin = Math.min(positiveIndexA, positiveIndexB);\n  var positiveMax = Math.max(positiveIndexA, positiveIndexB);\n  if (positiveIndexA < 0 || positiveIndexA > length) {\n    return result;\n  }\n  if (positiveIndexB < 0 || positiveIndexB > length) {\n    return result;\n  }\n  if (positiveIndexA === positiveIndexB) {\n    return result;\n  }\n  result = [].concat(result.slice(0, positiveMin)).concat([result[positiveMax]]).concat(result.slice(positiveMin + 1, positiveMax)).concat([result[positiveMin]]).concat(result.slice(positiveMax + 1, length));\n  return result;\n};\nvar swapString = function (indexA, indexB, s) {\n  var result = swapList(indexA, indexB, s);\n  return _isArray(result) ? result.join('') : result;\n};\n\n/**\n * Swap an item, at index `indexA` with another item, at index `indexB`, in an object or a list of elements.\n * A new result will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @since v0.29.0\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number|string|Object} indexA The first index\n * @param {Number|string|Object} indexB The second index\n * @param {Array|Object} o Either the object or list which will serve to realise the swap\n * @return {Array|Object} The new object or list reordered\n * @example\n *\n *      R.swap(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['c', 'b', 'a', 'd', 'e', 'f']\n *      R.swap(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'b', 'c', 'd', 'e', 'a']\n *      R.swap('a', 'b', {a: 1, b: 2}); //=> {a: 2, b: 1}\n *      R.swap(0, 2, 'foo'); //=> 'oof'\n */\nvar swap = /*#__PURE__*/_curry3(function (indexA, indexB, o) {\n  if (_isArray(o)) {\n    return swapList(indexA, indexB, o);\n  } else if (_isString(o)) {\n    return swapString(indexA, indexB, o);\n  } else {\n    return swapObject(indexA, indexB, o);\n  }\n});\nmodule.exports = swap;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar concat = /*#__PURE__*/require(\"./concat.js\");\nvar difference = /*#__PURE__*/require(\"./difference.js\");\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nmodule.exports = symmetricDifference;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar concat = /*#__PURE__*/require(\"./concat.js\");\nvar differenceWith = /*#__PURE__*/require(\"./differenceWith.js\");\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nmodule.exports = symmetricDifferenceWith;","var _checkForMethod = /*#__PURE__*/require(\"./internal/_checkForMethod.js\");\nvar _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar slice = /*#__PURE__*/require(\"./slice.js\");\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nmodule.exports = tail;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xtake = /*#__PURE__*/require(\"./internal/_xtake.js\");\nvar slice = /*#__PURE__*/require(\"./slice.js\");\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nmodule.exports = take;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar drop = /*#__PURE__*/require(\"./drop.js\");\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nmodule.exports = takeLast;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar slice = /*#__PURE__*/require(\"./slice.js\");\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nmodule.exports = takeLastWhile;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xtakeWhile = /*#__PURE__*/require(\"./internal/_xtakeWhile.js\");\nvar slice = /*#__PURE__*/require(\"./slice.js\");\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nmodule.exports = takeWhile;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xtap = /*#__PURE__*/require(\"./internal/_xtap.js\");\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = (f(a), a)\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nmodule.exports = tap;","var _cloneRegExp = /*#__PURE__*/require(\"./internal/_cloneRegExp.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isRegExp = /*#__PURE__*/require(\"./internal/_isRegExp.js\");\nvar toString = /*#__PURE__*/require(\"./toString.js\");\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nmodule.exports = test;","var curryN = /*#__PURE__*/require(\"./curryN.js\");\nvar _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\nvar thunkify = /*#__PURE__*/_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\nmodule.exports = thunkify;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  var idx = 0;\n  var list = Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nmodule.exports = times;","var invoker = /*#__PURE__*/require(\"./invoker.js\");\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nmodule.exports = toLower;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs, R.keys, R.values\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nmodule.exports = toPairs;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nmodule.exports = toPairsIn;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar _toString = /*#__PURE__*/require(\"./internal/_toString.js\");\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nmodule.exports = toString;","var invoker = /*#__PURE__*/require(\"./invoker.js\");\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nmodule.exports = toUpper;","var _xReduce = /*#__PURE__*/require(\"./internal/_xReduce.js\");\nvar _xwrap = /*#__PURE__*/require(\"./internal/_xwrap.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 !== 0;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _xReduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nmodule.exports = transduce;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nmodule.exports = transpose;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar map = /*#__PURE__*/require(\"./map.js\");\nvar sequence = /*#__PURE__*/require(\"./sequence.js\");\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig fantasy-land/of :: TypeRep f => f ~> a -> f a\n * @sig (Applicative f, Traversable t) => TypeRep f -> (a -> f b) -> t a -> f (t b)\n * @sig (Applicative f, Traversable t) => (b -> f b) -> (a -> f b) -> t a -> f (t b)\n * @param {Object|Function} TypeRepresentative with an `of` or `fantasy-land/of` method\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n *\n *      // Using a Type Representative\n *      R.traverse(Maybe, safeDiv(10), Right(4)); //=> Just(Right(2.5))\n *      R.traverse(Maybe, safeDiv(10), Right(0)); //=> Nothing\n *      R.traverse(Maybe, safeDiv(10), Left(\"X\")); //=> Just(Left(\"X\"))\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(F, f, traversable) {\n  var of = typeof F['fantasy-land/of'] === 'function' ? F['fantasy-land/of'] : typeof F.of === 'function' ? F.of : F;\n  var TypeRep = {\n    'fantasy-land/of': of\n  };\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](TypeRep, f) : typeof traversable.traverse === 'function' ? traversable.traverse(TypeRep, f) : sequence(TypeRep, map(f, traversable));\n});\nmodule.exports = traverse;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? /*#__PURE__*/_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) : /*#__PURE__*/_curry1(function trim(str) {\n  return str.trim();\n});\nmodule.exports = trim;","var _arity = /*#__PURE__*/require(\"./internal/_arity.js\");\nvar _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send them to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('caught'))('bar') // =>\n *      'caught'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n *      R.tryCatch(() => { throw 'this is not a valid value'}, (err, value)=>({error : err,  value }))('bar') // => {'error': 'this is not a valid value', 'value': 'bar'}\n */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nmodule.exports = tryCatch;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig * -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(async () => {}); //=> \"AsyncFunction\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nmodule.exports = type;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nmodule.exports = unapply;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar nAry = /*#__PURE__*/require(\"./nAry.js\");\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (a -> z)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nmodule.exports = unary;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n * Note that, the returned function is actually a ramda style\n * curryied function, which can accept one or more arguments in each\n * function calling.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b -> c ... -> z) -> ((a -> b -> c ...) -> z)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry, R.curryN\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nmodule.exports = uncurryN;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nmodule.exports = unfold;","var _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar compose = /*#__PURE__*/require(\"./compose.js\");\nvar uniq = /*#__PURE__*/require(\"./uniq.js\");\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nmodule.exports = union;","var _concat = /*#__PURE__*/require(\"./internal/_concat.js\");\nvar _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar uniqWith = /*#__PURE__*/require(\"./uniqWith.js\");\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements. If an element exists\n * in both lists, the first element from the first list will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nmodule.exports = unionWith;","var identity = /*#__PURE__*/require(\"./identity.js\");\nvar uniqBy = /*#__PURE__*/require(\"./uniqBy.js\");\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nmodule.exports = uniq;","var _Set = /*#__PURE__*/require(\"./internal/_Set.js\");\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _xuniqBy = /*#__PURE__*/require(\"./internal/_xuniqBy.js\");\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xuniqBy, function (fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n}));\nmodule.exports = uniqBy;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\nvar _includesWith = /*#__PURE__*/require(\"./internal/_includesWith.js\");\nvar _xuniqWith = /*#__PURE__*/require(\"./internal/_xuniqWith.js\");\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xuniqWith, function (pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n}));\nmodule.exports = uniqWith;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nmodule.exports = unless;","var _identity = /*#__PURE__*/require(\"./internal/_identity.js\");\nvar chain = /*#__PURE__*/require(\"./chain.js\");\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nmodule.exports = unnest;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nmodule.exports = until;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _isArray = /*#__PURE__*/require(\"./internal/_isArray.js\");\nvar _map = /*#__PURE__*/require(\"./internal/_map.js\");\nvar _assoc = /*#__PURE__*/require(\"./internal/_assoc.js\");\n/**\n *\n * Deconstructs an array field from the input documents to output a document for each element.\n * Each output document is the input document with the value of the array field replaced by the element.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig String -> {k: [v]} -> [{k: v}]\n * @param {String} key The key to determine which property of the object should be unwind\n * @param {Object} object The object containing list under property named as key which is to unwind\n * @return {List} A new list of object containing the value of input key having list replaced by each element in the object.\n * @example\n *\n * R.unwind('hobbies', {\n *   name: 'alice',\n *   hobbies: ['Golf', 'Hacking'],\n *   colors: ['red', 'green'],\n * });\n * // [\n * //   { name: 'alice', hobbies: 'Golf', colors: ['red', 'green'] },\n * //   { name: 'alice', hobbies: 'Hacking', colors: ['red', 'green'] }\n * // ]\n */\nvar unwind = /*#__PURE__*/_curry2(function (key, object) {\n  // If key is not in object or key is not as a list in object\n  if (!(key in object && _isArray(object[key]))) {\n    return [object];\n  }\n  // Map over object[key] which is a list and assoc each element with key\n  return _map(function (item) {\n    return _assoc(key, item, object);\n  }, object[key]);\n});\nmodule.exports = unwind;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\nvar adjust = /*#__PURE__*/require(\"./adjust.js\");\nvar always = /*#__PURE__*/require(\"./always.js\");\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\nmodule.exports = update;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar curryN = /*#__PURE__*/require(\"./curryN.js\");\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nmodule.exports = useWith;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\nvar keys = /*#__PURE__*/require(\"./keys.js\");\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys, R.toPairs\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nmodule.exports = values;","var _curry1 = /*#__PURE__*/require(\"./internal/_curry1.js\");\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nmodule.exports = valuesIn;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\"); // `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return {\n    value: x,\n    'fantasy-land/map': function () {\n      return this;\n    }\n  };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.set, R.over, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nmodule.exports = view;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nmodule.exports = when;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nmodule.exports = where;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _has = /*#__PURE__*/require(\"./internal/_has.js\");\n/**\n * Takes a spec object and a test object; each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `whereAny` returns true if at least one of the predicates return true,\n * false otherwise.\n *\n * `whereAny` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereAny({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('xxx')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 8, y: 34}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 9, y: 21}); //=> false\n *      pred({a: 'bar', b: 'xxx', x: 10, y: 20}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 10, y: 20}); //=> true\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> true\n */\nvar whereAny = /*#__PURE__*/_curry2(function whereAny(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && spec[prop](testObj[prop])) {\n      return true;\n    }\n  }\n  return false;\n});\nmodule.exports = whereAny;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar equals = /*#__PURE__*/require(\"./equals.js\");\nvar map = /*#__PURE__*/require(\"./map.js\");\nvar where = /*#__PURE__*/require(\"./where.js\");\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nmodule.exports = whereEq;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\nvar _Set = /*#__PURE__*/require(\"./internal/_Set.js\");\nvar reject = /*#__PURE__*/require(\"./reject.js\");\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function without(xs, list) {\n  var toRemove = new _Set();\n  for (var i = 0; i < xs.length; i += 1) {\n    toRemove.add(xs[i]);\n  }\n  return reject(toRemove.has.bind(toRemove), list);\n});\nmodule.exports = without;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Exclusive disjunction logical operation.\n * Returns `true` if one of the arguments is truthy and the other is falsy.\n * Otherwise, it returns `false`.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Logic\n * @sig a -> b -> Boolean\n * @param {Any} a\n * @param {Any} b\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\n * @see R.or, R.and\n * @example\n *\n *      R.xor(true, true); //=> false\n *      R.xor(true, false); //=> true\n *      R.xor(false, true); //=> true\n *      R.xor(false, false); //=> false\n */\nvar xor = /*#__PURE__*/_curry2(function xor(a, b) {\n  return Boolean(!a ^ !b);\n});\nmodule.exports = xor;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var i = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = Array(ilen * jlen);\n  while (i < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[i * jlen + j] = [a[i], b[j]];\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nmodule.exports = xprod;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var len = Math.min(a.length, b.length);\n  var rv = Array(len);\n  var idx = 0;\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nmodule.exports = zip;","var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = zipObj;","var _curry3 = /*#__PURE__*/require(\"./internal/_curry3.js\");\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var len = Math.min(a.length, b.length);\n  var rv = Array(len);\n  var idx = 0;\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nmodule.exports = zipWith;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(44);\n",""],"names":[],"sourceRoot":""}