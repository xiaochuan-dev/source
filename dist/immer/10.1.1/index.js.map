{"version":3,"file":"index.js","mappings":"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","sources":["webpack://immer/webpack/universalModuleDefinition","webpack://immer/webpack/bootstrap","webpack://immer/webpack/runtime/define property getters","webpack://immer/webpack/runtime/hasOwnProperty shorthand","webpack://immer/webpack/runtime/make namespace object","webpack://immer/./src/utils/errors.ts","webpack://immer/./src/utils/env.ts","webpack://immer/./src/utils/common.ts","webpack://immer/./src/utils/plugins.ts","webpack://immer/./src/core/scope.ts","webpack://immer/./src/core/finalize.ts","webpack://immer/./src/core/current.ts","webpack://immer/./src/core/proxy.ts","webpack://immer/./src/core/immerClass.ts","webpack://immer/./src/plugins/patches.ts","webpack://immer/./src/plugins/mapset.ts","webpack://immer/./src/immer.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"immer\"] = factory();\n\telse\n\t\troot[\"immer\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const errors =\n\tprocess.env.NODE_ENV !== \"production\"\n\t\t? [\n\t\t\t\t// All error codes, starting by 0:\n\t\t\t\tfunction(plugin: string) {\n\t\t\t\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t\t\t\t},\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t\t\t\t},\n\t\t\t\t\"This object has been frozen and should not be mutated\",\n\t\t\t\tfunction(data: any) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\t\t\tdata\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t\t\t\t\"Immer forbids circular references\",\n\t\t\t\t\"The first or second argument to `produce` must be a function\",\n\t\t\t\t\"The third argument to `produce` must be a function or undefined\",\n\t\t\t\t\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t\t\t\t\"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'current' expects a draft, got: ${thing}`\n\t\t\t\t},\n\t\t\t\t\"Object.defineProperty() cannot be used on an Immer draft\",\n\t\t\t\t\"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t\t\t\t\"Immer only supports deleting array indices\",\n\t\t\t\t\"Immer only supports setting array indices and the 'length' property\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'original' expects a draft, got: ${thing}`\n\t\t\t\t}\n\t\t\t\t// Note: if more errors are added, the errorOffset in Patches.ts should be increased\n\t\t\t\t// See Patches.ts for additional errors\n\t\t  ]\n\t\t: []\n\nexport function die(error: number, ...args: any[]): never {\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tconst e = errors[error]\n\t\tconst msg = typeof e === \"function\" ? e.apply(null, args as any) : e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","// Should be no imports here!\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: unique symbol = Symbol.for(\"immer-nothing\")\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = Symbol.for(\"immer-draftable\")\n\nexport const DRAFT_STATE: unique symbol = Symbol.for(\"immer-state\")\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\tArchType,\n\tdie,\n\tStrictMode\n} from \"../internal\"\n\nexport const getPrototypeOf = Object.getPrototypeOf\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(15, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/**\n * Each iterates a map, set or array.\n * Or, if any other kind of object, all of its own properties.\n * Regardless whether they are enumerable or symbols\n */\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void\n): void\nexport function each(obj: any, iter: any) {\n\tif (getArchtype(obj) === ArchType.Object) {\n\t\tReflect.ownKeys(obj).forEach(key => {\n\t\t\titer(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): ArchType {\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_\n\t\t: Array.isArray(thing)\n\t\t? ArchType.Array\n\t\t: isMap(thing)\n\t\t? ArchType.Map\n\t\t: isSet(thing)\n\t\t? ArchType.Set\n\t\t: ArchType.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchType.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchType.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchType.Map) thing.set(propOrOldValue, value)\n\telse if (t === ArchType.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any, strict: StrictMode) {\n\tif (isMap(base)) {\n\t\treturn new Map(base)\n\t}\n\tif (isSet(base)) {\n\t\treturn new Set(base)\n\t}\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\n\tconst isPlain = isPlainObject(base)\n\n\tif (strict === true || (strict === \"class_only\" && !isPlain)) {\n\t\t// Perform a strict copy\n\t\tconst descriptors = Object.getOwnPropertyDescriptors(base)\n\t\tdelete descriptors[DRAFT_STATE as any]\n\t\tlet keys = Reflect.ownKeys(descriptors)\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key: any = keys[i]\n\t\t\tconst desc = descriptors[key]\n\t\t\tif (desc.writable === false) {\n\t\t\t\tdesc.writable = true\n\t\t\t\tdesc.configurable = true\n\t\t\t}\n\t\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t\t// with libraries that trap values, like mobx or vue\n\t\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\t\tif (desc.get || desc.set)\n\t\t\t\tdescriptors[key] = {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\t\tvalue: base[key]\n\t\t\t\t}\n\t\t}\n\t\treturn Object.create(getPrototypeOf(base), descriptors)\n\t} else {\n\t\t// perform a sloppy copy\n\t\tconst proto = getPrototypeOf(base)\n\t\tif (proto !== null && isPlain) {\n\t\t\treturn {...base} // assumption: better inner class optimization than the assign below\n\t\t}\n\t\tconst obj = Object.create(proto)\n\t\treturn Object.assign(obj, base)\n\t}\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep)\n\t\t// See #590, don't recurse into non-enumerable / Symbol properties when freezing\n\t\t// So use Object.entries (only string-like, enumerables) instead of each()\n\t\tObject.entries(obj).forEach(([key, value]) => freeze(value, true))\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tDrafted,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tArchType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: readonly Patch[]): T\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(0, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ArchType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ArchType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tArchType,\n\tgetPlugin\n} from \"../internal\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (state.type_ === ArchType.Object || state.type_ === ArchType.Array)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tArchType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(value, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path)\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result = state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ArchType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n\t\tdie(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ArchType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// Immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\t// Per #590, we never freeze symbolic properties. Just to make sure don't accidentally interfere\n\t\t// with other frameworks.\n\t\tif (\n\t\t\t(!parentState || !parentState.scope_.parent_) &&\n\t\t\ttypeof prop !== \"symbol\" &&\n\t\t\tObject.prototype.propertyIsEnumerable.call(targetObject, prop)\n\t\t)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tisFrozen\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(10, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value) || isFrozen(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tif (state) {\n\t\tif (!state.modified_) return state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_)\n\t} else {\n\t\tcopy = shallowCopy(value, true)\n\t}\n\t// recurse\n\teach(copy, (key, childValue) => {\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\tif (state) {\n\t\tstate.finalized_ = false\n\t}\n\treturn copy\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tgetPrototypeOf,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tArchType,\n\tImmerScope\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ArchType.Object\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ArchType.Array\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ArchType.Array : (ArchType.Object as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(value, state))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\tif (state.copy_) {\n\t\t\tdelete state.copy_[prop]\n\t\t}\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ArchType.Array || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop as any)))\n\t\tdie(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (\n\t\tprocess.env.NODE_ENV !== \"production\" &&\n\t\tprop !== \"length\" &&\n\t\tisNaN(parseInt(prop as any))\n\t)\n\t\tdie(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {\n\tbase_: any\n\tcopy_: any\n\tscope_: ImmerScope\n}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(\n\t\t\tstate.base_,\n\t\t\tstate.scope_.immer_.useStrictShallowCopy_\n\t\t)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport type StrictMode = boolean | \"class_only\";\n\nexport class Immer implements ProducersFns {\n\tautoFreeze_: boolean = true\n\tuseStrictShallowCopy_: StrictMode = false\n\n\tconstructor(config?: {\n\t\tautoFreeze?: boolean\n\t\tuseStrictShallowCopy?: StrictMode\n\t}) {\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tif (typeof config?.useStrictShallowCopy === \"boolean\")\n\t\t\tthis.setUseStrictShallowCopy(config!.useStrictShallowCopy)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(1, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (!state || !state.isManual_) die(9)\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to enable strict shallow copy.\n\t *\n\t * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n\t */\n\tsetUseStrictShallowCopy(value: StrictMode) {\n\t\tthis.useStrictShallowCopy_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: readonly Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: createProxyProxy(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tProxyArrayState,\n\tMapState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tgetPrototypeOf,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tArchType,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING,\n\terrors\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst errorOffset = 16\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\terrors.push(\n\t\t\t'Sets cannot have \"replace\" patches.',\n\t\t\tfunction(op: string) {\n\t\t\t\treturn \"Unsupported patch operation: \" + op\n\t\t\t},\n\t\t\tfunction(path: string) {\n\t\t\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t\t\t},\n\t\t\t\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n\t\t)\n\t}\n\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ArchType.Object:\n\t\t\tcase ArchType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ArchType.Array:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ArchType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tfor (let i = copy_.length - 1; base_.length <= i; --i) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tinversePatches.push({\n\t\t\t\top: REMOVE,\n\t\t\t\tpath\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: readonly Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tlet p = path[i]\n\t\t\t\tif (typeof p !== \"string\" && typeof p !== \"number\") {\n\t\t\t\t\tp = \"\" + p\n\t\t\t\t}\n\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === ArchType.Object || parentType === ArchType.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(errorOffset + 3)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\")\n\t\t\t\t\tdie(errorOffset + 3)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(errorOffset + 2, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\tdie(errorOffset)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(errorOffset + 1, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tdie,\n\tArchType,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\tclass DraftMap extends Map {\n\t\t[DRAFT_STATE]: MapState\n\n\t\tconstructor(target: AnyMap, parent?: ImmerState) {\n\t\t\tsuper()\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ArchType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tset(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tclear() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tforEach(cb: (value: any, key: any, self: any) => void, thisArg?: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tget(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tkeys(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tvalues(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tentries(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\treturn this.entries()\n\t\t}\n\t}\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tclass DraftSet extends Set {\n\t\t[DRAFT_STATE]: SetState\n\t\tconstructor(target: AnySet, parent?: ImmerState) {\n\t\t\tsuper()\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ArchType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t}\n\n\t\thas(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tadd(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tdelete(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tclear() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tvalues(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tentries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tkeys(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tforEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\t}\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tWritableDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\tProducer,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze,\n\tObjectish,\n\tStrictMode\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to enable strict shallow copy.\n *\n * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n */\nexport const setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\n"],"names":[],"sourceRoot":""}