{"version":3,"file":"pinia.iife.js","sources":["../../../node_modules/.pnpm/vue-demi@0.14.5_@vue+composition-api@1.4.0_vue@3.3.4/node_modules/vue-demi/lib/index.mjs","../src/rootStore.ts","../../../node_modules/.pnpm/@vue+devtools-api@6.5.0/node_modules/@vue/devtools-api/lib/esm/env.js","../../../node_modules/.pnpm/@vue+devtools-api@6.5.0/node_modules/@vue/devtools-api/lib/esm/const.js","../../../node_modules/.pnpm/@vue+devtools-api@6.5.0/node_modules/@vue/devtools-api/lib/esm/time.js","../../../node_modules/.pnpm/@vue+devtools-api@6.5.0/node_modules/@vue/devtools-api/lib/esm/proxy.js","../../../node_modules/.pnpm/@vue+devtools-api@6.5.0/node_modules/@vue/devtools-api/lib/esm/index.js","../src/types.ts","../src/env.ts","../src/devtools/file-saver.ts","../src/devtools/utils.ts","../src/devtools/actions.ts","../src/devtools/formatting.ts","../src/devtools/plugin.ts","../src/createPinia.ts","../src/hmr.ts","../src/subscriptions.ts","../src/store.ts","../src/mapHelpers.ts","../src/storeToRefs.ts","../src/vue2-plugin.ts"],"sourcesContent":["import * as Vue from 'vue'\n\nvar isVue2 = false\nvar isVue3 = true\nvar Vue2 = undefined\n\nfunction install() {}\n\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  target[key] = val\n  return val\n}\n\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1)\n    return\n  }\n  delete target[key]\n}\n\nexport * from 'vue'\nexport {\n  Vue,\n  Vue2,\n  isVue2,\n  isVue3,\n  install,\n}\n","import {\n  App,\n  EffectScope,\n  inject,\n  hasInjectionContext,\n  InjectionKey,\n  Ref,\n} from 'vue-demi'\nimport {\n  StateTree,\n  PiniaCustomProperties,\n  _Method,\n  Store,\n  _GettersTree,\n  _ActionsTree,\n  PiniaCustomStateProperties,\n  DefineStoreOptionsInPlugin,\n  StoreGeneric,\n} from './types'\n\n/**\n * setActivePinia must be called to handle SSR at the top of functions like\n * `fetch`, `setup`, `serverPrefetch` and others\n */\nexport let activePinia: Pinia | undefined\n\n/**\n * Sets or unsets the active pinia. Used in SSR and internally when calling\n * actions and getters\n *\n * @param pinia - Pinia instance\n */\n// @ts-expect-error: cannot constrain the type of the return\nexport const setActivePinia: _SetActivePinia = (pinia) => (activePinia = pinia)\n\ninterface _SetActivePinia {\n  (pinia: Pinia): Pinia\n  (pinia: undefined): undefined\n  (pinia: Pinia | undefined): Pinia | undefined\n}\n\n/**\n * Get the currently active pinia if there is any.\n */\nexport const getActivePinia = () =>\n  (hasInjectionContext() && inject(piniaSymbol)) || activePinia\n\n/**\n * Every application must own its own pinia to be able to create stores\n */\nexport interface Pinia {\n  install: (app: App) => void\n\n  /**\n   * root state\n   */\n  state: Ref<Record<string, StateTree>>\n\n  /**\n   * Adds a store plugin to extend every store\n   *\n   * @param plugin - store plugin to add\n   */\n  use(plugin: PiniaPlugin): Pinia\n\n  /**\n   * Installed store plugins\n   *\n   * @internal\n   */\n  _p: PiniaPlugin[]\n\n  /**\n   * App linked to this Pinia instance\n   *\n   * @internal\n   */\n  _a: App\n\n  /**\n   * Effect scope the pinia is attached to\n   *\n   * @internal\n   */\n  _e: EffectScope\n\n  /**\n   * Registry of stores used by this pinia.\n   *\n   * @internal\n   */\n  _s: Map<string, StoreGeneric>\n\n  /**\n   * Added by `createTestingPinia()` to bypass `useStore(pinia)`.\n   *\n   * @internal\n   */\n  _testing?: boolean\n}\n\nexport const piniaSymbol = (\n  __DEV__ ? Symbol('pinia') : /* istanbul ignore next */ Symbol()\n) as InjectionKey<Pinia>\n\n/**\n * Context argument passed to Pinia plugins.\n */\nexport interface PiniaPluginContext<\n  Id extends string = string,\n  S extends StateTree = StateTree,\n  G /* extends _GettersTree<S> */ = _GettersTree<S>,\n  A /* extends _ActionsTree */ = _ActionsTree\n> {\n  /**\n   * pinia instance.\n   */\n  pinia: Pinia\n\n  /**\n   * Current app created with `Vue.createApp()`.\n   */\n  app: App\n\n  /**\n   * Current store being extended.\n   */\n  store: Store<Id, S, G, A>\n\n  /**\n   * Initial options defining the store when calling `defineStore()`.\n   */\n  options: DefineStoreOptionsInPlugin<Id, S, G, A>\n}\n\n/**\n * Plugin to extend every store.\n */\nexport interface PiniaPlugin {\n  /**\n   * Plugin to extend every store. Returns an object to extend the store or\n   * nothing.\n   *\n   * @param context - Context\n   */\n  (context: PiniaPluginContext): Partial<\n    PiniaCustomProperties & PiniaCustomStateProperties\n  > | void\n}\n\n/**\n * Plugin to extend every store.\n * @deprecated use PiniaPlugin instead\n */\nexport type PiniaStorePlugin = PiniaPlugin\n","export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return (typeof navigator !== 'undefined' && typeof window !== 'undefined')\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\nexport const isProxyAvailable = typeof Proxy === 'function';\n","export const HOOK_SETUP = 'devtools-plugin:setup';\nexport const HOOK_PLUGIN_SETTINGS_SET = 'plugin:settings:set';\n","let supported;\nlet perf;\nexport function isPerformanceSupported() {\n    var _a;\n    if (supported !== undefined) {\n        return supported;\n    }\n    if (typeof window !== 'undefined' && window.performance) {\n        supported = true;\n        perf = window.performance;\n    }\n    else if (typeof global !== 'undefined' && ((_a = global.perf_hooks) === null || _a === void 0 ? void 0 : _a.performance)) {\n        supported = true;\n        perf = global.perf_hooks.performance;\n    }\n    else {\n        supported = false;\n    }\n    return supported;\n}\nexport function now() {\n    return isPerformanceSupported() ? perf.now() : Date.now();\n}\n","import { HOOK_PLUGIN_SETTINGS_SET } from './const.js';\nimport { now } from './time.js';\nexport class ApiProxy {\n    constructor(plugin, hook) {\n        this.target = null;\n        this.targetQueue = [];\n        this.onQueue = [];\n        this.plugin = plugin;\n        this.hook = hook;\n        const defaultSettings = {};\n        if (plugin.settings) {\n            for (const id in plugin.settings) {\n                const item = plugin.settings[id];\n                defaultSettings[id] = item.defaultValue;\n            }\n        }\n        const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;\n        let currentSettings = Object.assign({}, defaultSettings);\n        try {\n            const raw = localStorage.getItem(localSettingsSaveId);\n            const data = JSON.parse(raw);\n            Object.assign(currentSettings, data);\n        }\n        catch (e) {\n            // noop\n        }\n        this.fallbacks = {\n            getSettings() {\n                return currentSettings;\n            },\n            setSettings(value) {\n                try {\n                    localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n                }\n                catch (e) {\n                    // noop\n                }\n                currentSettings = value;\n            },\n            now() {\n                return now();\n            },\n        };\n        if (hook) {\n            hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {\n                if (pluginId === this.plugin.id) {\n                    this.fallbacks.setSettings(value);\n                }\n            });\n        }\n        this.proxiedOn = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target.on[prop];\n                }\n                else {\n                    return (...args) => {\n                        this.onQueue.push({\n                            method: prop,\n                            args,\n                        });\n                    };\n                }\n            },\n        });\n        this.proxiedTarget = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target[prop];\n                }\n                else if (prop === 'on') {\n                    return this.proxiedOn;\n                }\n                else if (Object.keys(this.fallbacks).includes(prop)) {\n                    return (...args) => {\n                        this.targetQueue.push({\n                            method: prop,\n                            args,\n                            resolve: () => { },\n                        });\n                        return this.fallbacks[prop](...args);\n                    };\n                }\n                else {\n                    return (...args) => {\n                        return new Promise(resolve => {\n                            this.targetQueue.push({\n                                method: prop,\n                                args,\n                                resolve,\n                            });\n                        });\n                    };\n                }\n            },\n        });\n    }\n    async setRealTarget(target) {\n        this.target = target;\n        for (const item of this.onQueue) {\n            this.target.on[item.method](...item.args);\n        }\n        for (const item of this.targetQueue) {\n            item.resolve(await this.target[item.method](...item.args));\n        }\n    }\n}\n","import { getTarget, getDevtoolsGlobalHook, isProxyAvailable } from './env.js';\nimport { HOOK_SETUP } from './const.js';\nimport { ApiProxy } from './proxy.js';\nexport * from './api/index.js';\nexport * from './plugin.js';\nexport * from './time.js';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const descriptor = pluginDescriptor;\n    const target = getTarget();\n    const hook = getDevtoolsGlobalHook();\n    const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;\n    if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const proxy = enableProxy ? new ApiProxy(descriptor, hook) : null;\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor: descriptor,\n            setupFn,\n            proxy,\n        });\n        if (proxy)\n            setupFn(proxy.proxiedTarget);\n    }\n}\n","import type {\n  ComputedRef,\n  DebuggerEvent,\n  Ref,\n  UnwrapRef,\n  WatchOptions,\n} from 'vue-demi'\nimport { Pinia } from './rootStore'\n\n/**\n * Generic state of a Store\n */\nexport type StateTree = Record<string | number | symbol, any>\n\nexport function isPlainObject<S extends StateTree>(\n  value: S | unknown\n): value is S\nexport function isPlainObject(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  o: any\n): o is StateTree {\n  return (\n    o &&\n    typeof o === 'object' &&\n    Object.prototype.toString.call(o) === '[object Object]' &&\n    typeof o.toJSON !== 'function'\n  )\n}\n\n/**\n * Recursive `Partial<T>`. Used by {@link Store['$patch']}.\n *\n * For internal use **only**\n */\nexport type _DeepPartial<T> = { [K in keyof T]?: _DeepPartial<T[K]> }\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n\n// TODO: can we change these to numbers?\n/**\n * Possible types for SubscriptionCallback\n */\nexport enum MutationType {\n  /**\n   * Direct mutation of the state:\n   *\n   * - `store.name = 'new name'`\n   * - `store.$state.name = 'new name'`\n   * - `store.list.push('new item')`\n   */\n  direct = 'direct',\n\n  /**\n   * Mutated the state with `$patch` and an object\n   *\n   * - `store.$patch({ name: 'newName' })`\n   */\n  patchObject = 'patch object',\n\n  /**\n   * Mutated the state with `$patch` and a function\n   *\n   * - `store.$patch(state => state.name = 'newName')`\n   */\n  patchFunction = 'patch function',\n\n  // maybe reset? for $state = {} and $reset\n}\n\n/**\n * Base type for the context passed to a subscription callback. Internal type.\n */\nexport interface _SubscriptionCallbackMutationBase {\n  /**\n   * Type of the mutation.\n   */\n  type: MutationType\n\n  /**\n   * `id` of the store doing the mutation.\n   */\n  storeId: string\n\n  /**\n   * 🔴 DEV ONLY, DO NOT use for production code. Different mutation calls. Comes from\n   * https://vuejs.org/guide/extras/reactivity-in-depth.html#reactivity-debugging and allows to track mutations in\n   * devtools and plugins **during development only**.\n   */\n  events?: DebuggerEvent[] | DebuggerEvent\n}\n\n/**\n * Context passed to a subscription callback when directly mutating the state of\n * a store with `store.someState = newValue` or `store.$state.someState =\n * newValue`.\n */\nexport interface SubscriptionCallbackMutationDirect\n  extends _SubscriptionCallbackMutationBase {\n  type: MutationType.direct\n\n  events: DebuggerEvent\n}\n\n/**\n * Context passed to a subscription callback when `store.$patch()` is called\n * with an object.\n */\nexport interface SubscriptionCallbackMutationPatchObject<S>\n  extends _SubscriptionCallbackMutationBase {\n  type: MutationType.patchObject\n\n  events: DebuggerEvent[]\n\n  /**\n   * Object passed to `store.$patch()`.\n   */\n  payload: _DeepPartial<S>\n}\n\n/**\n * Context passed to a subscription callback when `store.$patch()` is called\n * with a function.\n */\nexport interface SubscriptionCallbackMutationPatchFunction\n  extends _SubscriptionCallbackMutationBase {\n  type: MutationType.patchFunction\n\n  events: DebuggerEvent[]\n\n  /**\n   * Object passed to `store.$patch()`.\n   */\n  // payload: DeepPartial<UnwrapRef<S>>\n}\n\n/**\n * Context object passed to a subscription callback.\n */\nexport type SubscriptionCallbackMutation<S> =\n  | SubscriptionCallbackMutationDirect\n  | SubscriptionCallbackMutationPatchObject<S>\n  | SubscriptionCallbackMutationPatchFunction\n\n/**\n * Callback of a subscription\n */\nexport type SubscriptionCallback<S> = (\n  /**\n   * Object with information relative to the store mutation that triggered the\n   * subscription.\n   */\n  mutation: SubscriptionCallbackMutation<S>,\n\n  /**\n   * State of the store when the subscription is triggered. Same as\n   * `store.$state`.\n   */\n  state: UnwrapRef<S>\n) => void\n\n// to support TS 4.4\n// TODO: remove in 2.1.0, use Awaited, and up the peer dep to TS 4.5\nexport type _Awaited<T> = T extends null | undefined\n  ? T // special case for `null | undefined` when not in `--strictNullChecks` mode\n  : T extends object & { then(onfulfilled: infer F): any } // `await` only unwraps object types with a callable `then`. Non-object types are not unwrapped\n  ? F extends (value: infer V, ...args: any) => any // if the argument to `then` is callable, extracts the first argument\n    ? _Awaited<V> // recursively unwrap the value\n    : never // the argument to `then` was not callable\n  : T // non-object or non-thenable\n\n/**\n * Actual type for {@link StoreOnActionListenerContext}. Exists for refactoring\n * purposes. For internal use only.\n * For internal use **only**\n */\nexport interface _StoreOnActionListenerContext<\n  Store,\n  ActionName extends string,\n  A\n> {\n  /**\n   * Name of the action\n   */\n  name: ActionName\n\n  /**\n   * Store that is invoking the action\n   */\n  store: Store\n\n  /**\n   * Parameters passed to the action\n   */\n  args: A extends Record<ActionName, _Method>\n    ? Parameters<A[ActionName]>\n    : unknown[]\n\n  /**\n   * Sets up a hook once the action is finished. It receives the return value\n   * of the action, if it's a Promise, it will be unwrapped.\n   */\n  after: (\n    callback: A extends Record<ActionName, _Method>\n      ? (resolvedReturn: _Awaited<ReturnType<A[ActionName]>>) => void\n      : () => void\n  ) => void\n\n  /**\n   * Sets up a hook if the action fails. Return `false` to catch the error and\n   * stop it from propagating.\n   */\n  onError: (callback: (error: unknown) => void) => void\n}\n\n/**\n * Context object passed to callbacks of `store.$onAction(context => {})`\n * TODO: should have only the Id, the Store and Actions to generate the proper object\n */\nexport type StoreOnActionListenerContext<\n  Id extends string,\n  S extends StateTree,\n  G /* extends GettersTree<S> */,\n  A /* extends ActionsTree */\n> = _ActionsTree extends A\n  ? _StoreOnActionListenerContext<StoreGeneric, string, _ActionsTree>\n  : {\n      [Name in keyof A]: Name extends string\n        ? _StoreOnActionListenerContext<Store<Id, S, G, A>, Name, A>\n        : never\n    }[keyof A]\n\n/**\n * Argument of `store.$onAction()`\n */\nexport type StoreOnActionListener<\n  Id extends string,\n  S extends StateTree,\n  G /* extends GettersTree<S> */,\n  A /* extends ActionsTree */\n> = (\n  context: StoreOnActionListenerContext<\n    Id,\n    S,\n    G,\n    // {} creates a type of never due to how StoreOnActionListenerContext is defined\n    {} extends A ? _ActionsTree : A\n  >\n) => void\n\n/**\n * Properties of a store.\n */\nexport interface StoreProperties<Id extends string> {\n  /**\n   * Unique identifier of the store\n   */\n  $id: Id\n\n  /**\n   * Private property defining the pinia the store is attached to.\n   *\n   * @internal\n   */\n  _p: Pinia\n\n  /**\n   * Used by devtools plugin to retrieve getters. Removed in production.\n   *\n   * @internal\n   */\n  _getters?: string[]\n\n  /**\n   * Used (and added) by devtools plugin to detect Setup vs Options API usage.\n   *\n   * @internal\n   */\n  _isOptionsAPI?: boolean\n\n  /**\n   * Used by devtools plugin to retrieve properties added with plugins. Removed\n   * in production. Can be used by the user to add property keys of the store\n   * that should be displayed in devtools.\n   */\n  _customProperties: Set<string>\n\n  /**\n   * Handles a HMR replacement of this store. Dev Only.\n   *\n   * @internal\n   */\n  _hotUpdate(useStore: StoreGeneric): void\n\n  /**\n   * Allows pausing some of the watching mechanisms while the store is being\n   * patched with a newer version.\n   *\n   * @internal\n   */\n  _hotUpdating: boolean\n\n  /**\n   * Payload of the hmr update. Dev only.\n   *\n   * @internal\n   */\n  _hmrPayload: {\n    state: string[]\n    hotState: Ref<StateTree>\n    actions: _ActionsTree\n    getters: _ActionsTree\n  }\n}\n\n/**\n * Base store with state and functions. Should not be used directly.\n */\nexport interface _StoreWithState<\n  Id extends string,\n  S extends StateTree,\n  G /* extends GettersTree<StateTree> */,\n  A /* extends ActionsTree */\n> extends StoreProperties<Id> {\n  /**\n   * State of the Store. Setting it will internally call `$patch()` to update the state.\n   */\n  $state: UnwrapRef<S> & PiniaCustomStateProperties<S>\n\n  /**\n   * Applies a state patch to current state. Allows passing nested values\n   *\n   * @param partialState - patch to apply to the state\n   */\n  $patch(partialState: _DeepPartial<UnwrapRef<S>>): void\n\n  /**\n   * Group multiple changes into one function. Useful when mutating objects like\n   * Sets or arrays and applying an object patch isn't practical, e.g. appending\n   * to an array. The function passed to `$patch()` **must be synchronous**.\n   *\n   * @param stateMutator - function that mutates `state`, cannot be asynchronous\n   */\n  $patch<F extends (state: UnwrapRef<S>) => any>(\n    // this prevents the user from using `async` which isn't allowed\n    stateMutator: ReturnType<F> extends Promise<any> ? never : F\n  ): void\n\n  /**\n   * Resets the store to its initial state by building a new state object.\n   * TODO: make this options only\n   */\n  $reset(): void\n\n  /**\n   * Setups a callback to be called whenever the state changes. It also returns a function to remove the callback. Note\n   * that when calling `store.$subscribe()` inside of a component, it will be automatically cleaned up when the\n   * component gets unmounted unless `detached` is set to true.\n   *\n   * @param callback - callback passed to the watcher\n   * @param options - `watch` options + `detached` to detach the subscription from the context (usually a component)\n   * this is called from. Note that the `flush` option does not affect calls to `store.$patch()`.\n   * @returns function that removes the watcher\n   */\n  $subscribe(\n    callback: SubscriptionCallback<S>,\n    options?: { detached?: boolean } & WatchOptions\n  ): () => void\n\n  /**\n   * Setups a callback to be called every time an action is about to get\n   * invoked. The callback receives an object with all the relevant information\n   * of the invoked action:\n   * - `store`: the store it is invoked on\n   * - `name`: The name of the action\n   * - `args`: The parameters passed to the action\n   *\n   * On top of these, it receives two functions that allow setting up a callback\n   * once the action finishes or when it fails.\n   *\n   * It also returns a function to remove the callback. Note than when calling\n   * `store.$onAction()` inside of a component, it will be automatically cleaned\n   * up when the component gets unmounted unless `detached` is set to true.\n   *\n   * @example\n   *\n   *```js\n   *store.$onAction(({ after, onError }) => {\n   *  // Here you could share variables between all of the hooks as well as\n   *  // setting up watchers and clean them up\n   *  after((resolvedValue) => {\n   *    // can be used to cleanup side effects\n   * .  // `resolvedValue` is the value returned by the action, if it's a\n   * .  // Promise, it will be the resolved value instead of the Promise\n   *  })\n   *  onError((error) => {\n   *    // can be used to pass up errors\n   *  })\n   *})\n   *```\n   *\n   * @param callback - callback called before every action\n   * @param detached - detach the subscription from the context this is called from\n   * @returns function that removes the watcher\n   */\n  $onAction(\n    callback: StoreOnActionListener<Id, S, G, A>,\n    detached?: boolean\n  ): () => void\n\n  /**\n   * Stops the associated effect scope of the store and remove it from the store\n   * registry. Plugins can override this method to cleanup any added effects.\n   * e.g. devtools plugin stops displaying disposed stores from devtools.\n   * Note this doesn't delete the state of the store, you have to do it manually with\n   * `delete pinia.state.value[store.$id]` if you want to. If you don't and the\n   * store is used again, it will reuse the previous state.\n   */\n  $dispose(): void\n\n  /**\n   * Vue 2 only. Is the store ready. Used for store cross usage. Getters automatically compute when they are added to\n   * the store, before the store is actually ready, this allows to avoid calling the computed function yet.\n   *\n   * @internal\n   */\n  _r?: boolean\n}\n\n/**\n * Generic type for a function that can infer arguments and return type\n *\n * For internal use **only**\n */\nexport type _Method = (...args: any[]) => any\n\n// export type StoreAction<P extends any[], R> = (...args: P) => R\n// export interface StoreAction<P, R> {\n//   (...args: P[]): R\n// }\n\n// in this type we forget about this because otherwise the type is recursive\n/**\n * Store augmented for actions. For internal usage only.\n * For internal use **only**\n */\nexport type _StoreWithActions<A> = {\n  [k in keyof A]: A[k] extends (...args: infer P) => infer R\n    ? (...args: P) => R\n    : never\n}\n\n/**\n * Store augmented with getters. For internal usage only.\n * For internal use **only**\n */\nexport type _StoreWithGetters<G> = {\n  readonly [k in keyof G]: G[k] extends (...args: any[]) => infer R\n    ? R\n    : UnwrapRef<G[k]>\n}\n\n/**\n * Store type to build a store.\n */\nexport type Store<\n  Id extends string = string,\n  S extends StateTree = {},\n  G /* extends GettersTree<S>*/ = {},\n  // has the actions without the context (this) for typings\n  A /* extends ActionsTree */ = {}\n> = _StoreWithState<Id, S, G, A> &\n  UnwrapRef<S> &\n  _StoreWithGetters<G> &\n  // StoreWithActions<A> &\n  (_ActionsTree extends A ? {} : A) &\n  PiniaCustomProperties<Id, S, G, A> &\n  PiniaCustomStateProperties<S>\n\n/**\n * Generic and type-unsafe version of Store. Doesn't fail on access with\n * strings, making it much easier to write generic functions that do not care\n * about the kind of store that is passed.\n */\nexport type StoreGeneric = Store<\n  string,\n  StateTree,\n  _GettersTree<StateTree>,\n  _ActionsTree\n>\n\n/**\n * Return type of `defineStore()`. Function that allows instantiating a store.\n */\nexport interface StoreDefinition<\n  Id extends string = string,\n  S extends StateTree = StateTree,\n  G /* extends GettersTree<S>*/ = _GettersTree<S>,\n  A /* extends ActionsTree */ = _ActionsTree\n> {\n  /**\n   * Returns a store, creates it if necessary.\n   *\n   * @param pinia - Pinia instance to retrieve the store\n   * @param hot - dev only hot module replacement\n   */\n  (pinia?: Pinia | null | undefined, hot?: StoreGeneric): Store<Id, S, G, A>\n\n  /**\n   * Id of the store. Used by map helpers.\n   */\n  $id: Id\n\n  /**\n   * Dev only pinia for HMR.\n   *\n   * @internal\n   */\n  _pinia?: Pinia\n}\n\n/**\n * Interface to be extended by the user when they add properties through plugins.\n */\nexport interface PiniaCustomProperties<\n  Id extends string = string,\n  S extends StateTree = StateTree,\n  G /* extends GettersTree<S> */ = _GettersTree<S>,\n  A /* extends ActionsTree */ = _ActionsTree\n> {}\n\n/**\n * Properties that are added to every `store.$state` by `pinia.use()`.\n */\nexport interface PiniaCustomStateProperties<S extends StateTree = StateTree> {}\n\n/**\n * Type of an object of Getters that infers the argument. For internal usage only.\n * For internal use **only**\n */\nexport type _GettersTree<S extends StateTree> = Record<\n  string,\n  | ((state: UnwrapRef<S> & UnwrapRef<PiniaCustomStateProperties<S>>) => any)\n  | (() => any)\n>\n\n/**\n * Type of an object of Actions. For internal usage only.\n * For internal use **only**\n */\nexport type _ActionsTree = Record<string, _Method>\n\n/**\n * Type that enables refactoring through IDE.\n * For internal use **only**\n */\nexport type _ExtractStateFromSetupStore_Keys<SS> = keyof {\n  [K in keyof SS as SS[K] extends _Method | ComputedRef ? never : K]: any\n}\n\n/**\n * Type that enables refactoring through IDE.\n * For internal use **only**\n */\nexport type _ExtractActionsFromSetupStore_Keys<SS> = keyof {\n  [K in keyof SS as SS[K] extends _Method ? K : never]: any\n}\n\n/**\n * Type that enables refactoring through IDE.\n * For internal use **only**\n */\nexport type _ExtractGettersFromSetupStore_Keys<SS> = keyof {\n  [K in keyof SS as SS[K] extends ComputedRef ? K : never]: any\n}\n\n/**\n * Type that enables refactoring through IDE.\n * For internal use **only**\n */\nexport type _UnwrapAll<SS> = { [K in keyof SS]: UnwrapRef<SS[K]> }\n\n/**\n * For internal use **only**\n */\nexport type _ExtractStateFromSetupStore<SS> = SS extends undefined | void\n  ? {}\n  : _ExtractStateFromSetupStore_Keys<SS> extends keyof SS\n  ? _UnwrapAll<Pick<SS, _ExtractStateFromSetupStore_Keys<SS>>>\n  : never\n\n/**\n * For internal use **only**\n */\nexport type _ExtractActionsFromSetupStore<SS> = SS extends undefined | void\n  ? {}\n  : _ExtractActionsFromSetupStore_Keys<SS> extends keyof SS\n  ? Pick<SS, _ExtractActionsFromSetupStore_Keys<SS>>\n  : never\n\n/**\n * For internal use **only**\n */\nexport type _ExtractGettersFromSetupStore<SS> = SS extends undefined | void\n  ? {}\n  : _ExtractGettersFromSetupStore_Keys<SS> extends keyof SS\n  ? Pick<SS, _ExtractGettersFromSetupStore_Keys<SS>>\n  : never\n\n/**\n * Options passed to `defineStore()` that are common between option and setup\n * stores. Extend this interface if you want to add custom options to both kinds\n * of stores.\n */\nexport interface DefineStoreOptionsBase<S extends StateTree, Store> {}\n\n/**\n * Options parameter of `defineStore()` for option stores. Can be extended to\n * augment stores with the plugin API. @see {@link DefineStoreOptionsBase}.\n */\nexport interface DefineStoreOptions<\n  Id extends string,\n  S extends StateTree,\n  G /* extends GettersTree<S> */,\n  A /* extends Record<string, StoreAction> */\n> extends DefineStoreOptionsBase<S, Store<Id, S, G, A>> {\n  /**\n   * Unique string key to identify the store across the application.\n   */\n  id: Id\n\n  /**\n   * Function to create a fresh state. **Must be an arrow function** to ensure\n   * correct typings!\n   */\n  state?: () => S\n\n  /**\n   * Optional object of getters.\n   */\n  getters?: G &\n    ThisType<UnwrapRef<S> & _StoreWithGetters<G> & PiniaCustomProperties> &\n    _GettersTree<S>\n\n  /**\n   * Optional object of actions.\n   */\n  actions?: A &\n    ThisType<\n      A &\n        UnwrapRef<S> &\n        _StoreWithState<Id, S, G, A> &\n        _StoreWithGetters<G> &\n        PiniaCustomProperties\n    >\n\n  /**\n   * Allows hydrating the store during SSR when complex state (like client side only refs) are used in the store\n   * definition and copying the value from `pinia.state` isn't enough.\n   *\n   * @example\n   * If in your `state`, you use any `customRef`s, any `computed`s, or any `ref`s that have a different value on\n   * Server and Client, you need to manually hydrate them. e.g., a custom ref that is stored in the local\n   * storage:\n   *\n   * ```ts\n   * const useStore = defineStore('main', {\n   *   state: () => ({\n   *     n: useLocalStorage('key', 0)\n   *   }),\n   *   hydrate(storeState, initialState) {\n   *     // @ts-expect-error: https://github.com/microsoft/TypeScript/issues/43826\n   *     storeState.n = useLocalStorage('key', 0)\n   *   }\n   * })\n   * ```\n   *\n   * @param storeState - the current state in the store\n   * @param initialState - initialState\n   */\n  hydrate?(storeState: UnwrapRef<S>, initialState: UnwrapRef<S>): void\n}\n\n/**\n * Options parameter of `defineStore()` for setup stores. Can be extended to\n * augment stores with the plugin API. @see {@link DefineStoreOptionsBase}.\n */\nexport interface DefineSetupStoreOptions<\n  Id extends string,\n  // NOTE: Passing SS seems to make TS crash\n  S extends StateTree,\n  G,\n  A /* extends ActionsTree */\n> extends DefineStoreOptionsBase<S, Store<Id, S, G, A>> {\n  /**\n   * Extracted actions. Added by useStore(). SHOULD NOT be added by the user when\n   * creating the store. Can be used in plugins to get the list of actions in a\n   * store defined with a setup function. Note this is always defined\n   */\n  actions?: A\n}\n\n/**\n * Available `options` when creating a pinia plugin.\n */\nexport interface DefineStoreOptionsInPlugin<\n  Id extends string,\n  S extends StateTree,\n  G,\n  A\n> extends Omit<DefineStoreOptions<Id, S, G, A>, 'id' | 'actions'> {\n  /**\n   * Extracted object of actions. Added by useStore() when the store is built\n   * using the setup API, otherwise uses the one passed to `defineStore()`.\n   * Defaults to an empty object if no actions are defined.\n   */\n  actions: A\n}\n","export const IS_CLIENT = typeof window !== 'undefined'\n\n/**\n * Should we add the devtools plugins.\n * - only if dev mode or forced through the prod devtools flag\n * - not in test\n * - only if window exists (could change in the future)\n */\nexport const USE_DEVTOOLS =\n  (__DEV__ || __FEATURE_PROD_DEVTOOLS__) && !__TEST__ && IS_CLIENT\n","/*\n * FileSaver.js A saveAs() FileSaver implementation.\n *\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\n * Morote.\n *\n * License : MIT\n */\n\nimport { IS_CLIENT } from '../env'\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nconst _global = /*#__PURE__*/ (() =>\n  typeof window === 'object' && window.window === window\n    ? window\n    : typeof self === 'object' && self.self === self\n    ? self\n    : typeof global === 'object' && global.global === global\n    ? global\n    : typeof globalThis === 'object'\n    ? globalThis\n    : { HTMLElement: null })()\n\nexport interface Options {\n  autoBom?: boolean\n}\n\nfunction bom(blob: Blob, { autoBom = false }: Options = {}) {\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (\n    autoBom &&\n    /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(\n      blob.type\n    )\n  ) {\n    return new Blob([String.fromCharCode(0xfeff), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download(url: string, name: string, opts?: Options) {\n  const xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled(url: string) {\n  const xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click(node: Element) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    const evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent(\n      'click',\n      true,\n      true,\n      window,\n      0,\n      0,\n      0,\n      80,\n      20,\n      false,\n      false,\n      false,\n      false,\n      0,\n      null\n    )\n    node.dispatchEvent(evt)\n  }\n}\n\nconst _navigator =\n  /*#__PURE__*/ typeof navigator === 'object' ? navigator : { userAgent: '' }\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nconst isMacOSWebView = /*#__PURE__*/ (() =>\n  /Macintosh/.test(_navigator.userAgent) &&\n  /AppleWebKit/.test(_navigator.userAgent) &&\n  !/Safari/.test(_navigator.userAgent))()\n\nexport type SaveAs =\n  | ((blob: Blob, name?: string, opts?: Options) => void)\n  | ((\n      blob: Blob,\n      name: string,\n      opts?: Options | undefined,\n      popup?: Window | null | undefined\n    ) => void)\n\nexport const saveAs: SaveAs = !IS_CLIENT\n  ? () => {} // noop\n  : // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\n  typeof HTMLAnchorElement !== 'undefined' &&\n    'download' in HTMLAnchorElement.prototype &&\n    !isMacOSWebView\n  ? downloadSaveAs\n  : // Use msSaveOrOpenBlob as a second approach\n  'msSaveOrOpenBlob' in _navigator\n  ? msSaveAs\n  : // Fallback to using FileReader and a popup\n    fileSaverSaveAs\n\nfunction downloadSaveAs(blob: Blob, name: string = 'download', opts?: Options) {\n  const a = document.createElement('a')\n\n  a.download = name\n  a.rel = 'noopener' // tabnabbing\n\n  // TODO: detect chrome extensions & packaged apps\n  // a.target = '_blank'\n\n  if (typeof blob === 'string') {\n    // Support regular links\n    a.href = blob\n    if (a.origin !== location.origin) {\n      if (corsEnabled(a.href)) {\n        download(blob, name, opts)\n      } else {\n        a.target = '_blank'\n        click(a)\n      }\n    } else {\n      click(a)\n    }\n  } else {\n    // Support blobs\n    a.href = URL.createObjectURL(blob)\n    setTimeout(function () {\n      URL.revokeObjectURL(a.href)\n    }, 4e4) // 40s\n    setTimeout(function () {\n      click(a)\n    }, 0)\n  }\n}\n\nfunction msSaveAs(blob: Blob, name: string = 'download', opts?: Options) {\n  if (typeof blob === 'string') {\n    if (corsEnabled(blob)) {\n      download(blob, name, opts)\n    } else {\n      const a = document.createElement('a')\n      a.href = blob\n      a.target = '_blank'\n      setTimeout(function () {\n        click(a)\n      })\n    }\n  } else {\n    // @ts-ignore: works on windows\n    navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n  }\n}\n\nfunction fileSaverSaveAs(\n  blob: Blob,\n  name: string,\n  opts?: Options,\n  popup?: Window | null\n) {\n  // Open a popup immediately do go around popup blocker\n  // Mostly only available on user interaction and the fileReader is async so...\n  popup = popup || open('', '_blank')\n  if (popup) {\n    popup.document.title = popup.document.body.innerText = 'downloading...'\n  }\n\n  if (typeof blob === 'string') return download(blob, name, opts)\n\n  const force = blob.type === 'application/octet-stream'\n  const isSafari =\n    /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global\n  const isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n  if (\n    (isChromeIOS || (force && isSafari) || isMacOSWebView) &&\n    typeof FileReader !== 'undefined'\n  ) {\n    // Safari doesn't allow downloading of blob URLs\n    const reader = new FileReader()\n    reader.onloadend = function () {\n      let url = reader.result\n      if (typeof url !== 'string') {\n        popup = null\n        throw new Error('Wrong reader.result type')\n      }\n      url = isChromeIOS\n        ? url\n        : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n      if (popup) {\n        popup.location.href = url\n      } else {\n        location.assign(url)\n      }\n      popup = null // reverse-tabnabbing #460\n    }\n    reader.readAsDataURL(blob)\n  } else {\n    const url = URL.createObjectURL(blob)\n    if (popup) popup.location.assign(url)\n    else location.href = url\n    popup = null // reverse-tabnabbing #460\n    setTimeout(function () {\n      URL.revokeObjectURL(url)\n    }, 4e4) // 40s\n  }\n}\n","import { Pinia } from '../rootStore'\n\n/**\n * Shows a toast or console.log\n *\n * @param message - message to log\n * @param type - different color of the tooltip\n */\nexport function toastMessage(\n  message: string,\n  type?: 'normal' | 'error' | 'warn' | undefined\n) {\n  const piniaMessage = '🍍 ' + message\n\n  if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n    // No longer available :(\n    __VUE_DEVTOOLS_TOAST__(piniaMessage, type)\n  } else if (type === 'error') {\n    console.error(piniaMessage)\n  } else if (type === 'warn') {\n    console.warn(piniaMessage)\n  } else {\n    console.log(piniaMessage)\n  }\n}\n\nexport function isPinia(o: any): o is Pinia {\n  return '_a' in o && 'install' in o\n}\n","import { Pinia } from '../rootStore'\nimport { saveAs } from './file-saver'\nimport { toastMessage } from './utils'\n\n/**\n * This file contain devtools actions, they are not Pinia actions.\n */\n\n// ---\n\nexport function checkClipboardAccess() {\n  if (!('clipboard' in navigator)) {\n    toastMessage(`Your browser doesn't support the Clipboard API`, 'error')\n    return true\n  }\n}\n\nfunction checkNotFocusedError(error: unknown): error is Error {\n  if (\n    error instanceof Error &&\n    error.message.toLowerCase().includes('document is not focused')\n  ) {\n    toastMessage(\n      'You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.',\n      'warn'\n    )\n    return true\n  }\n  return false\n}\n\nexport async function actionGlobalCopyState(pinia: Pinia) {\n  if (checkClipboardAccess()) return\n  try {\n    await navigator.clipboard.writeText(JSON.stringify(pinia.state.value))\n    toastMessage('Global state copied to clipboard.')\n  } catch (error) {\n    if (checkNotFocusedError(error)) return\n    toastMessage(\n      `Failed to serialize the state. Check the console for more details.`,\n      'error'\n    )\n    console.error(error)\n  }\n}\n\nexport async function actionGlobalPasteState(pinia: Pinia) {\n  if (checkClipboardAccess()) return\n  try {\n    loadStoresState(pinia, JSON.parse(await navigator.clipboard.readText()))\n    toastMessage('Global state pasted from clipboard.')\n  } catch (error) {\n    if (checkNotFocusedError(error)) return\n    toastMessage(\n      `Failed to deserialize the state from clipboard. Check the console for more details.`,\n      'error'\n    )\n    console.error(error)\n  }\n}\n\nexport async function actionGlobalSaveState(pinia: Pinia) {\n  try {\n    saveAs(\n      new Blob([JSON.stringify(pinia.state.value)], {\n        type: 'text/plain;charset=utf-8',\n      }),\n      'pinia-state.json'\n    )\n  } catch (error) {\n    toastMessage(\n      `Failed to export the state as JSON. Check the console for more details.`,\n      'error'\n    )\n    console.error(error)\n  }\n}\n\nlet fileInput: HTMLInputElement | undefined\nfunction getFileOpener() {\n  if (!fileInput) {\n    fileInput = document.createElement('input')\n    fileInput.type = 'file'\n    fileInput.accept = '.json'\n  }\n\n  function openFile(): Promise<null | { text: string; file: File }> {\n    return new Promise((resolve, reject) => {\n      fileInput!.onchange = async () => {\n        const files = fileInput!.files\n        if (!files) return resolve(null)\n        const file = files.item(0)\n        if (!file) return resolve(null)\n        return resolve({ text: await file.text(), file })\n      }\n      // @ts-ignore: TODO: changed from 4.3 to 4.4\n      fileInput!.oncancel = () => resolve(null)\n      fileInput!.onerror = reject\n      fileInput!.click()\n    })\n  }\n  return openFile\n}\n\nexport async function actionGlobalOpenStateFile(pinia: Pinia) {\n  try {\n    const open = getFileOpener()\n    const result = await open()\n    if (!result) return\n    const { text, file } = result\n    loadStoresState(pinia, JSON.parse(text))\n    toastMessage(`Global state imported from \"${file.name}\".`)\n  } catch (error) {\n    toastMessage(\n      `Failed to import the state from JSON. Check the console for more details.`,\n      'error'\n    )\n    console.error(error)\n  }\n}\n\nfunction loadStoresState(pinia: Pinia, state: Record<string, unknown>) {\n  for (const key in state) {\n    const storeState = pinia.state.value[key]\n    // store is already instantiated, patch it\n    if (storeState) {\n      Object.assign(storeState, state[key])\n    } else {\n      // store is not instantiated, set the initial state\n      pinia.state.value[key] = state[key] as any\n    }\n  }\n}\n","import {\n  ComponentCustomState,\n  CustomInspectorNode,\n  CustomInspectorState,\n} from '@vue/devtools-api'\nimport { MutationType, StoreGeneric } from '../types'\nimport { DebuggerEvent } from 'vue-demi'\nimport { Pinia } from '../rootStore'\nimport { isPinia } from './utils'\n\nexport function formatDisplay(display: string) {\n  return {\n    _custom: {\n      display,\n    },\n  }\n}\n\nexport const PINIA_ROOT_LABEL = '🍍 Pinia (root)'\nexport const PINIA_ROOT_ID = '_root'\n\nexport function formatStoreForInspectorTree(\n  store: StoreGeneric | Pinia\n): CustomInspectorNode {\n  return isPinia(store)\n    ? {\n        id: PINIA_ROOT_ID,\n        label: PINIA_ROOT_LABEL,\n      }\n    : {\n        id: store.$id,\n        label: store.$id,\n      }\n}\n\nexport function formatStoreForInspectorState(\n  store: StoreGeneric | Pinia\n): CustomInspectorState {\n  if (isPinia(store)) {\n    const storeNames = Array.from(store._s.keys())\n    const storeMap = store._s\n    const state: CustomInspectorState = {\n      state: storeNames.map((storeId) => ({\n        editable: true,\n        key: storeId,\n        value: store.state.value[storeId],\n      })),\n      getters: storeNames\n        .filter((id) => storeMap.get(id)!._getters)\n        .map((id) => {\n          const store = storeMap.get(id)!\n\n          return {\n            editable: false,\n            key: id,\n            value: store._getters!.reduce((getters, key) => {\n              getters[key] = store[key]\n              return getters\n            }, {} as Record<string, any>),\n          }\n        }),\n    }\n\n    return state\n  }\n\n  const state: CustomInspectorState | ComponentCustomState = {\n    state: Object.keys(store.$state).map((key) => ({\n      editable: true,\n      key,\n      value: store.$state[key],\n    })),\n  }\n\n  // avoid adding empty getters\n  if (store._getters && store._getters.length) {\n    state.getters = store._getters.map((getterName) => ({\n      editable: false,\n      key: getterName,\n      value: store[getterName],\n    }))\n  }\n\n  if (store._customProperties.size) {\n    state.customProperties = Array.from(store._customProperties).map((key) => ({\n      editable: true,\n      key,\n      value: store[key],\n    }))\n  }\n\n  return state\n}\n\nexport function formatEventData(\n  events: DebuggerEvent[] | DebuggerEvent | undefined\n) {\n  if (!events) return {}\n  if (Array.isArray(events)) {\n    // TODO: handle add and delete for arrays and objects\n    return events.reduce(\n      (data, event) => {\n        data.keys.push(event.key)\n        data.operations.push(event.type)\n        data.oldValue[event.key] = event.oldValue\n        data.newValue[event.key] = event.newValue\n        return data\n      },\n      {\n        oldValue: {} as Record<string, any>,\n        keys: [] as string[],\n        operations: [] as string[],\n        newValue: {} as Record<string, any>,\n      }\n    )\n  } else {\n    return {\n      operation: formatDisplay(events.type),\n      key: formatDisplay(events.key),\n      oldValue: events.oldValue,\n      newValue: events.newValue,\n    }\n  }\n}\n\nexport function formatMutationType(type: MutationType): string {\n  switch (type) {\n    case MutationType.direct:\n      return 'mutation'\n    case MutationType.patchFunction:\n      return '$patch'\n    case MutationType.patchObject:\n      return '$patch'\n    default:\n      return 'unknown'\n  }\n}\n","import {\n  setupDevtoolsPlugin,\n  TimelineEvent,\n  App as DevtoolsApp,\n} from '@vue/devtools-api'\nimport { ComponentPublicInstance, markRaw, toRaw, unref, watch } from 'vue-demi'\nimport { Pinia, PiniaPluginContext } from '../rootStore'\nimport {\n  _GettersTree,\n  MutationType,\n  StateTree,\n  _ActionsTree,\n  StoreGeneric,\n} from '../types'\nimport {\n  actionGlobalCopyState,\n  actionGlobalPasteState,\n  actionGlobalSaveState,\n  actionGlobalOpenStateFile,\n} from './actions'\nimport {\n  formatDisplay,\n  formatEventData,\n  formatMutationType,\n  formatStoreForInspectorState,\n  formatStoreForInspectorTree,\n  PINIA_ROOT_ID,\n  PINIA_ROOT_LABEL,\n} from './formatting'\nimport { isPinia, toastMessage } from './utils'\n\n// timeline can be paused when directly changing the state\nlet isTimelineActive = true\nconst componentStateTypes: string[] = []\n\nconst MUTATIONS_LAYER_ID = 'pinia:mutations'\nconst INSPECTOR_ID = 'pinia'\nconst { assign } = Object\n\n/**\n * Gets the displayed name of a store in devtools\n *\n * @param id - id of the store\n * @returns a formatted string\n */\nconst getStoreType = (id: string) => '🍍 ' + id\n\n/**\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\n * as soon as it is added to the application.\n *\n * @param app - Vue application\n * @param pinia - pinia instance\n */\nexport function registerPiniaDevtools(app: DevtoolsApp, pinia: Pinia) {\n  setupDevtoolsPlugin(\n    {\n      id: 'dev.esm.pinia',\n      label: 'Pinia 🍍',\n      logo: 'https://pinia.vuejs.org/logo.svg',\n      packageName: 'pinia',\n      homepage: 'https://pinia.vuejs.org',\n      componentStateTypes,\n      app,\n    },\n    (api) => {\n      if (typeof api.now !== 'function') {\n        toastMessage(\n          'You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.'\n        )\n      }\n\n      api.addTimelineLayer({\n        id: MUTATIONS_LAYER_ID,\n        label: `Pinia 🍍`,\n        color: 0xe5df88,\n      })\n\n      api.addInspector({\n        id: INSPECTOR_ID,\n        label: 'Pinia 🍍',\n        icon: 'storage',\n        treeFilterPlaceholder: 'Search stores',\n        actions: [\n          {\n            icon: 'content_copy',\n            action: () => {\n              actionGlobalCopyState(pinia)\n            },\n            tooltip: 'Serialize and copy the state',\n          },\n          {\n            icon: 'content_paste',\n            action: async () => {\n              await actionGlobalPasteState(pinia)\n              api.sendInspectorTree(INSPECTOR_ID)\n              api.sendInspectorState(INSPECTOR_ID)\n            },\n            tooltip: 'Replace the state with the content of your clipboard',\n          },\n          {\n            icon: 'save',\n            action: () => {\n              actionGlobalSaveState(pinia)\n            },\n            tooltip: 'Save the state as a JSON file',\n          },\n          {\n            icon: 'folder_open',\n            action: async () => {\n              await actionGlobalOpenStateFile(pinia)\n              api.sendInspectorTree(INSPECTOR_ID)\n              api.sendInspectorState(INSPECTOR_ID)\n            },\n            tooltip: 'Import the state from a JSON file',\n          },\n        ],\n        nodeActions: [\n          {\n            icon: 'restore',\n            tooltip: 'Reset the state (with \"$reset\")',\n            action: (nodeId) => {\n              const store = pinia._s.get(nodeId)\n              if (!store) {\n                toastMessage(\n                  `Cannot reset \"${nodeId}\" store because it wasn't found.`,\n                  'warn'\n                )\n              } else if (typeof store.$reset !== 'function') {\n                toastMessage(\n                  `Cannot reset \"${nodeId}\" store because it doesn't have a \"$reset\" method implemented.`,\n                  'warn'\n                )\n              } else {\n                store.$reset()\n                toastMessage(`Store \"${nodeId}\" reset.`)\n              }\n            },\n          },\n        ],\n      })\n\n      api.on.inspectComponent((payload, ctx) => {\n        const proxy = (payload.componentInstance &&\n          payload.componentInstance.proxy) as\n          | ComponentPublicInstance\n          | undefined\n        if (proxy && proxy._pStores) {\n          const piniaStores = (\n            payload.componentInstance.proxy as ComponentPublicInstance\n          )._pStores!\n\n          Object.values(piniaStores).forEach((store) => {\n            payload.instanceData.state.push({\n              type: getStoreType(store.$id),\n              key: 'state',\n              editable: true,\n              value: store._isOptionsAPI\n                ? {\n                    _custom: {\n                      value: toRaw(store.$state),\n                      actions: [\n                        {\n                          icon: 'restore',\n                          tooltip: 'Reset the state of this store',\n                          action: () => store.$reset(),\n                        },\n                      ],\n                    },\n                  }\n                : // NOTE: workaround to unwrap transferred refs\n                  Object.keys(store.$state).reduce((state, key) => {\n                    state[key] = store.$state[key]\n                    return state\n                  }, {} as StateTree),\n            })\n\n            if (store._getters && store._getters.length) {\n              payload.instanceData.state.push({\n                type: getStoreType(store.$id),\n                key: 'getters',\n                editable: false,\n                value: store._getters.reduce((getters, key) => {\n                  try {\n                    getters[key] = store[key]\n                  } catch (error) {\n                    // @ts-expect-error: we just want to show it in devtools\n                    getters[key] = error\n                  }\n                  return getters\n                }, {} as _GettersTree<StateTree>),\n              })\n            }\n          })\n        }\n      })\n\n      api.on.getInspectorTree((payload) => {\n        if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n          let stores: Array<StoreGeneric | Pinia> = [pinia]\n          stores = stores.concat(Array.from(pinia._s.values()))\n\n          payload.rootNodes = (\n            payload.filter\n              ? stores.filter((store) =>\n                  '$id' in store\n                    ? store.$id\n                        .toLowerCase()\n                        .includes(payload.filter.toLowerCase())\n                    : PINIA_ROOT_LABEL.toLowerCase().includes(\n                        payload.filter.toLowerCase()\n                      )\n                )\n              : stores\n          ).map(formatStoreForInspectorTree)\n        }\n      })\n\n      api.on.getInspectorState((payload) => {\n        if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n          const inspectedStore =\n            payload.nodeId === PINIA_ROOT_ID\n              ? pinia\n              : pinia._s.get(payload.nodeId)\n\n          if (!inspectedStore) {\n            // this could be the selected store restored for a different project\n            // so it's better not to say anything here\n            return\n          }\n\n          if (inspectedStore) {\n            payload.state = formatStoreForInspectorState(inspectedStore)\n          }\n        }\n      })\n\n      api.on.editInspectorState((payload, ctx) => {\n        if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n          const inspectedStore =\n            payload.nodeId === PINIA_ROOT_ID\n              ? pinia\n              : pinia._s.get(payload.nodeId)\n\n          if (!inspectedStore) {\n            return toastMessage(`store \"${payload.nodeId}\" not found`, 'error')\n          }\n\n          const { path } = payload\n\n          if (!isPinia(inspectedStore)) {\n            // access only the state\n            if (\n              path.length !== 1 ||\n              !inspectedStore._customProperties.has(path[0]) ||\n              path[0] in inspectedStore.$state\n            ) {\n              path.unshift('$state')\n            }\n          } else {\n            // Root access, we can omit the `.value` because the devtools API does it for us\n            path.unshift('state')\n          }\n          isTimelineActive = false\n          payload.set(inspectedStore, path, payload.state.value)\n          isTimelineActive = true\n        }\n      })\n\n      api.on.editComponentState((payload) => {\n        if (payload.type.startsWith('🍍')) {\n          const storeId = payload.type.replace(/^🍍\\s*/, '')\n          const store = pinia._s.get(storeId)\n\n          if (!store) {\n            return toastMessage(`store \"${storeId}\" not found`, 'error')\n          }\n\n          const { path } = payload\n          if (path[0] !== 'state') {\n            return toastMessage(\n              `Invalid path for store \"${storeId}\":\\n${path}\\nOnly state can be modified.`\n            )\n          }\n\n          // rewrite the first entry to be able to directly set the state as\n          // well as any other path\n          path[0] = '$state'\n          isTimelineActive = false\n          payload.set(store, path, payload.state.value)\n          isTimelineActive = true\n        }\n      })\n    }\n  )\n}\n\nfunction addStoreToDevtools(app: DevtoolsApp, store: StoreGeneric) {\n  if (!componentStateTypes.includes(getStoreType(store.$id))) {\n    componentStateTypes.push(getStoreType(store.$id))\n  }\n\n  setupDevtoolsPlugin(\n    {\n      id: 'dev.esm.pinia',\n      label: 'Pinia 🍍',\n      logo: 'https://pinia.vuejs.org/logo.svg',\n      packageName: 'pinia',\n      homepage: 'https://pinia.vuejs.org',\n      componentStateTypes,\n      app,\n      settings: {\n        logStoreChanges: {\n          label: 'Notify about new/deleted stores',\n          type: 'boolean',\n          defaultValue: true,\n        },\n        // useEmojis: {\n        //   label: 'Use emojis in messages ⚡️',\n        //   type: 'boolean',\n        //   defaultValue: true,\n        // },\n      },\n    },\n    (api) => {\n      // gracefully handle errors\n      const now = typeof api.now === 'function' ? api.now.bind(api) : Date.now\n\n      store.$onAction(({ after, onError, name, args }) => {\n        const groupId = runningActionId++\n\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            title: '🛫 ' + name,\n            subtitle: 'start',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args,\n            },\n            groupId,\n          },\n        })\n\n        after((result) => {\n          activeAction = undefined\n          api.addTimelineEvent({\n            layerId: MUTATIONS_LAYER_ID,\n            event: {\n              time: now(),\n              title: '🛬 ' + name,\n              subtitle: 'end',\n              data: {\n                store: formatDisplay(store.$id),\n                action: formatDisplay(name),\n                args,\n                result,\n              },\n              groupId,\n            },\n          })\n        })\n\n        onError((error) => {\n          activeAction = undefined\n          api.addTimelineEvent({\n            layerId: MUTATIONS_LAYER_ID,\n            event: {\n              time: now(),\n              logType: 'error',\n              title: '💥 ' + name,\n              subtitle: 'end',\n              data: {\n                store: formatDisplay(store.$id),\n                action: formatDisplay(name),\n                args,\n                error,\n              },\n              groupId,\n            },\n          })\n        })\n      }, true)\n\n      store._customProperties.forEach((name) => {\n        watch(\n          () => unref<unknown>(store[name]),\n          (newValue, oldValue) => {\n            api.notifyComponentUpdate()\n            api.sendInspectorState(INSPECTOR_ID)\n            if (isTimelineActive) {\n              api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                  time: now(),\n                  title: 'Change',\n                  subtitle: name,\n                  data: {\n                    newValue,\n                    oldValue,\n                  },\n                  groupId: activeAction,\n                },\n              })\n            }\n          },\n          { deep: true }\n        )\n      })\n\n      store.$subscribe(\n        ({ events, type }, state) => {\n          api.notifyComponentUpdate()\n          api.sendInspectorState(INSPECTOR_ID)\n\n          if (!isTimelineActive) return\n          // rootStore.state[store.id] = state\n\n          const eventData: TimelineEvent = {\n            time: now(),\n            title: formatMutationType(type),\n            data: assign(\n              { store: formatDisplay(store.$id) },\n              formatEventData(events)\n            ),\n            groupId: activeAction,\n          }\n\n          if (type === MutationType.patchFunction) {\n            eventData.subtitle = '⤵️'\n          } else if (type === MutationType.patchObject) {\n            eventData.subtitle = '🧩'\n          } else if (events && !Array.isArray(events)) {\n            eventData.subtitle = events.type\n          }\n\n          if (events) {\n            eventData.data['rawEvent(s)'] = {\n              _custom: {\n                display: 'DebuggerEvent',\n                type: 'object',\n                tooltip: 'raw DebuggerEvent[]',\n                value: events,\n              },\n            }\n          }\n\n          api.addTimelineEvent({\n            layerId: MUTATIONS_LAYER_ID,\n            event: eventData,\n          })\n        },\n        { detached: true, flush: 'sync' }\n      )\n\n      const hotUpdate = store._hotUpdate\n      store._hotUpdate = markRaw((newStore) => {\n        hotUpdate(newStore)\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            title: '🔥 ' + store.$id,\n            subtitle: 'HMR update',\n            data: {\n              store: formatDisplay(store.$id),\n              info: formatDisplay(`HMR update`),\n            },\n          },\n        })\n        // update the devtools too\n        api.notifyComponentUpdate()\n        api.sendInspectorTree(INSPECTOR_ID)\n        api.sendInspectorState(INSPECTOR_ID)\n      })\n\n      const { $dispose } = store\n      store.$dispose = () => {\n        $dispose()\n        api.notifyComponentUpdate()\n        api.sendInspectorTree(INSPECTOR_ID)\n        api.sendInspectorState(INSPECTOR_ID)\n        api.getSettings().logStoreChanges &&\n          toastMessage(`Disposed \"${store.$id}\" store 🗑`)\n      }\n\n      // trigger an update so it can display new registered stores\n      api.notifyComponentUpdate()\n      api.sendInspectorTree(INSPECTOR_ID)\n      api.sendInspectorState(INSPECTOR_ID)\n      api.getSettings().logStoreChanges &&\n        toastMessage(`\"${store.$id}\" store installed 🆕`)\n    }\n  )\n}\n\nlet runningActionId = 0\nlet activeAction: number | undefined\n\n/**\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\n * mutation to the action.\n *\n * @param store - store to patch\n * @param actionNames - list of actionst to patch\n */\nfunction patchActionForGrouping(\n  store: StoreGeneric,\n  actionNames: string[],\n  wrapWithProxy: boolean\n) {\n  // original actions of the store as they are given by pinia. We are going to override them\n  const actions = actionNames.reduce((storeActions, actionName) => {\n    // use toRaw to avoid tracking #541\n    storeActions[actionName] = toRaw(store)[actionName]\n    return storeActions\n  }, {} as _ActionsTree)\n\n  for (const actionName in actions) {\n    store[actionName] = function () {\n      // the running action id is incremented in a before action hook\n      const _actionId = runningActionId\n      const trackedStore = wrapWithProxy\n        ? new Proxy(store, {\n            get(...args) {\n              activeAction = _actionId\n              return Reflect.get(...args)\n            },\n            set(...args) {\n              activeAction = _actionId\n              return Reflect.set(...args)\n            },\n          })\n        : store\n\n      // For Setup Stores we need https://github.com/tc39/proposal-async-context\n      activeAction = _actionId\n      const retValue = actions[actionName].apply(\n        trackedStore,\n        arguments as unknown as any[]\n      )\n      // this is safer as async actions in Setup Stores would associate mutations done outside of the action\n      activeAction = undefined\n      return retValue\n    }\n  }\n}\n\n/**\n * pinia.use(devtoolsPlugin)\n */\nexport function devtoolsPlugin<\n  Id extends string = string,\n  S extends StateTree = StateTree,\n  G extends object = _GettersTree<S>,\n  A extends object = _ActionsTree\n>({ app, store, options }: PiniaPluginContext<Id, S, G, A>) {\n  // HMR module\n  if (store.$id.startsWith('__hot:')) {\n    return\n  }\n\n  // detect option api vs setup api\n  store._isOptionsAPI = !!options.state\n\n  patchActionForGrouping(\n    store as StoreGeneric,\n    Object.keys(options.actions),\n    store._isOptionsAPI\n  )\n\n  // Upgrade the HMR to also update the new actions\n  const originalHotUpdate = store._hotUpdate\n  toRaw(store)._hotUpdate = function (newStore) {\n    originalHotUpdate.apply(this, arguments as any)\n    patchActionForGrouping(\n      store as StoreGeneric,\n      Object.keys(newStore._hmrPayload.actions),\n      !!store._isOptionsAPI\n    )\n  }\n\n  addStoreToDevtools(\n    app,\n    // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n    store as StoreGeneric\n  )\n}\n","import { Pinia, PiniaPlugin, setActivePinia, piniaSymbol } from './rootStore'\nimport { ref, App, markRaw, effectScope, isVue2, Ref } from 'vue-demi'\nimport { registerPiniaDevtools, devtoolsPlugin } from './devtools'\nimport { USE_DEVTOOLS } from './env'\nimport { StateTree, StoreGeneric } from './types'\n\n/**\n * Creates a Pinia instance to be used by the application\n */\nexport function createPinia(): Pinia {\n  const scope = effectScope(true)\n  // NOTE: here we could check the window object for a state and directly set it\n  // if there is anything like it with Vue 3 SSR\n  const state = scope.run<Ref<Record<string, StateTree>>>(() =>\n    ref<Record<string, StateTree>>({})\n  )!\n\n  let _p: Pinia['_p'] = []\n  // plugins added before calling app.use(pinia)\n  let toBeInstalled: PiniaPlugin[] = []\n\n  const pinia: Pinia = markRaw({\n    install(app: App) {\n      // this allows calling useStore() outside of a component setup after\n      // installing pinia's plugin\n      setActivePinia(pinia)\n      if (!isVue2) {\n        pinia._a = app\n        app.provide(piniaSymbol, pinia)\n        app.config.globalProperties.$pinia = pinia\n        /* istanbul ignore else */\n        if (USE_DEVTOOLS) {\n          registerPiniaDevtools(app, pinia)\n        }\n        toBeInstalled.forEach((plugin) => _p.push(plugin))\n        toBeInstalled = []\n      }\n    },\n\n    use(plugin) {\n      if (!this._a && !isVue2) {\n        toBeInstalled.push(plugin)\n      } else {\n        _p.push(plugin)\n      }\n      return this\n    },\n\n    _p,\n    // it's actually undefined here\n    // @ts-expect-error\n    _a: null,\n    _e: scope,\n    _s: new Map<string, StoreGeneric>(),\n    state,\n  })\n\n  // pinia devtools rely on dev only features so they cannot be forced unless\n  // the dev build of Vue is used. Avoid old browsers like IE11.\n  if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\n    pinia.use(devtoolsPlugin)\n  }\n\n  return pinia\n}\n","import { isRef, isReactive, isVue2, set } from 'vue-demi'\nimport { Pinia } from './rootStore'\nimport {\n  isPlainObject,\n  StateTree,\n  StoreDefinition,\n  StoreGeneric,\n  _GettersTree,\n  _Method,\n  _ActionsTree,\n} from './types'\n\n/**\n * Checks if a function is a `StoreDefinition`.\n *\n * @param fn - object to test\n * @returns true if `fn` is a StoreDefinition\n */\nexport const isUseStore = (fn: any): fn is StoreDefinition => {\n  return typeof fn === 'function' && typeof fn.$id === 'string'\n}\n\n/**\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\n * remove any key not existing in `newState` and recursively merge plain\n * objects.\n *\n * @param newState - new state object to be patched\n * @param oldState - old state that should be used to patch newState\n * @returns - newState\n */\nexport function patchObject(\n  newState: Record<string, any>,\n  oldState: Record<string, any>\n): Record<string, any> {\n  // no need to go through symbols because they cannot be serialized anyway\n  for (const key in oldState) {\n    const subPatch = oldState[key]\n\n    // skip the whole sub tree\n    if (!(key in newState)) {\n      continue\n    }\n\n    const targetValue = newState[key]\n    if (\n      isPlainObject(targetValue) &&\n      isPlainObject(subPatch) &&\n      !isRef(subPatch) &&\n      !isReactive(subPatch)\n    ) {\n      newState[key] = patchObject(targetValue, subPatch)\n    } else {\n      // objects are either a bit more complex (e.g. refs) or primitives, so we\n      // just set the whole thing\n      if (isVue2) {\n        set(newState, key, subPatch)\n      } else {\n        newState[key] = subPatch\n      }\n    }\n  }\n\n  return newState\n}\n\n/**\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\n *\n * @example\n * ```js\n * const useUser = defineStore(...)\n * if (import.meta.hot) {\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\n * }\n * ```\n *\n * @param initialUseStore - return of the defineStore to hot update\n * @param hot - `import.meta.hot`\n */\nexport function acceptHMRUpdate<\n  Id extends string = string,\n  S extends StateTree = StateTree,\n  G extends _GettersTree<S> = _GettersTree<S>,\n  A = _ActionsTree\n>(initialUseStore: StoreDefinition<Id, S, G, A>, hot: any) {\n  // strip as much as possible from iife.prod\n  if (!__DEV__) {\n    return () => {}\n  }\n  return (newModule: any) => {\n    const pinia: Pinia | undefined = hot.data.pinia || initialUseStore._pinia\n\n    if (!pinia) {\n      // this store is still not used\n      return\n    }\n\n    // preserve the pinia instance across loads\n    hot.data.pinia = pinia\n\n    // console.log('got data', newStore)\n    for (const exportName in newModule) {\n      const useStore = newModule[exportName]\n      // console.log('checking for', exportName)\n      if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n        // console.log('Accepting update for', useStore.$id)\n        const id = useStore.$id\n\n        if (id !== initialUseStore.$id) {\n          console.warn(\n            `The id of the store changed from \"${initialUseStore.$id}\" to \"${id}\". Reloading.`\n          )\n          // return import.meta.hot.invalidate()\n          return hot.invalidate()\n        }\n\n        const existingStore: StoreGeneric = pinia._s.get(id)!\n        if (!existingStore) {\n          console.log(`[Pinia]: skipping hmr because store doesn't exist yet`)\n          return\n        }\n        useStore(pinia, existingStore)\n      }\n    }\n  }\n}\n","import { getCurrentScope, onScopeDispose } from 'vue-demi'\nimport { _Method } from './types'\n\nexport const noop = () => {}\n\nexport function addSubscription<T extends _Method>(\n  subscriptions: T[],\n  callback: T,\n  detached?: boolean,\n  onCleanup: () => void = noop\n) {\n  subscriptions.push(callback)\n\n  const removeSubscription = () => {\n    const idx = subscriptions.indexOf(callback)\n    if (idx > -1) {\n      subscriptions.splice(idx, 1)\n      onCleanup()\n    }\n  }\n\n  if (!detached && getCurrentScope()) {\n    onScopeDispose(removeSubscription)\n  }\n\n  return removeSubscription\n}\n\nexport function triggerSubscriptions<T extends _Method>(\n  subscriptions: T[],\n  ...args: Parameters<T>\n) {\n  subscriptions.slice().forEach((callback) => {\n    callback(...args)\n  })\n}\n","import {\n  watch,\n  computed,\n  inject,\n  hasInjectionContext,\n  getCurrentInstance,\n  reactive,\n  DebuggerEvent,\n  WatchOptions,\n  UnwrapRef,\n  markRaw,\n  isRef,\n  isReactive,\n  effectScope,\n  EffectScope,\n  ComputedRef,\n  toRaw,\n  toRef,\n  toRefs,\n  Ref,\n  ref,\n  set,\n  del,\n  nextTick,\n  isVue2,\n} from 'vue-demi'\nimport {\n  StateTree,\n  SubscriptionCallback,\n  _DeepPartial,\n  isPlainObject,\n  Store,\n  _Method,\n  DefineStoreOptions,\n  StoreDefinition,\n  _GettersTree,\n  MutationType,\n  StoreOnActionListener,\n  _ActionsTree,\n  SubscriptionCallbackMutation,\n  DefineSetupStoreOptions,\n  DefineStoreOptionsInPlugin,\n  StoreGeneric,\n  _StoreWithGetters,\n  _ExtractActionsFromSetupStore,\n  _ExtractGettersFromSetupStore,\n  _ExtractStateFromSetupStore,\n  _StoreWithState,\n} from './types'\nimport { setActivePinia, piniaSymbol, Pinia, activePinia } from './rootStore'\nimport { IS_CLIENT, USE_DEVTOOLS } from './env'\nimport { patchObject } from './hmr'\nimport { addSubscription, triggerSubscriptions, noop } from './subscriptions'\n\nconst fallbackRunWithContext = (fn: () => unknown) => fn()\n\ntype _ArrayType<AT> = AT extends Array<infer T> ? T : never\n\nfunction mergeReactiveObjects<\n  T extends Record<any, unknown> | Map<unknown, unknown> | Set<unknown>\n>(target: T, patchToApply: _DeepPartial<T>): T {\n  // Handle Map instances\n  if (target instanceof Map && patchToApply instanceof Map) {\n    patchToApply.forEach((value, key) => target.set(key, value))\n  }\n  // Handle Set instances\n  if (target instanceof Set && patchToApply instanceof Set) {\n    patchToApply.forEach(target.add, target)\n  }\n\n  // no need to go through symbols because they cannot be serialized anyway\n  for (const key in patchToApply) {\n    if (!patchToApply.hasOwnProperty(key)) continue\n    const subPatch = patchToApply[key]\n    const targetValue = target[key]\n    if (\n      isPlainObject(targetValue) &&\n      isPlainObject(subPatch) &&\n      target.hasOwnProperty(key) &&\n      !isRef(subPatch) &&\n      !isReactive(subPatch)\n    ) {\n      // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n      // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n      // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n      target[key] = mergeReactiveObjects(targetValue, subPatch)\n    } else {\n      // @ts-expect-error: subPatch is a valid value\n      target[key] = subPatch\n    }\n  }\n\n  return target\n}\n\nconst skipHydrateSymbol = __DEV__\n  ? Symbol('pinia:skipHydration')\n  : /* istanbul ignore next */ Symbol()\nconst skipHydrateMap = /*#__PURE__*/ new WeakMap<any, any>()\n\n/**\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\n *\n * @param obj - target object\n * @returns obj\n */\nexport function skipHydrate<T = any>(obj: T): T {\n  return isVue2\n    ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\n      /* istanbul ignore next */ skipHydrateMap.set(obj, 1) && obj\n    : Object.defineProperty(obj, skipHydrateSymbol, {})\n}\n\n/**\n * Returns whether a value should be hydrated\n *\n * @param obj - target variable\n * @returns true if `obj` should be hydrated\n */\nfunction shouldHydrate(obj: any) {\n  return isVue2\n    ? /* istanbul ignore next */ !skipHydrateMap.has(obj)\n    : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol)\n}\n\nconst { assign } = Object\n\nfunction isComputed<T>(value: ComputedRef<T> | unknown): value is ComputedRef<T>\nfunction isComputed(o: any): o is ComputedRef {\n  return !!(isRef(o) && (o as any).effect)\n}\n\nfunction createOptionsStore<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A extends _ActionsTree\n>(\n  id: Id,\n  options: DefineStoreOptions<Id, S, G, A>,\n  pinia: Pinia,\n  hot?: boolean\n): Store<Id, S, G, A> {\n  const { state, actions, getters } = options\n\n  const initialState: StateTree | undefined = pinia.state.value[id]\n\n  let store: Store<Id, S, G, A>\n\n  function setup() {\n    if (!initialState && (!__DEV__ || !hot)) {\n      /* istanbul ignore if */\n      if (isVue2) {\n        set(pinia.state.value, id, state ? state() : {})\n      } else {\n        pinia.state.value[id] = state ? state() : {}\n      }\n    }\n\n    // avoid creating a state in pinia.state.value\n    const localState =\n      __DEV__ && hot\n        ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\n          toRefs(ref(state ? state() : {}).value)\n        : toRefs(pinia.state.value[id])\n\n    return assign(\n      localState,\n      actions,\n      Object.keys(getters || {}).reduce((computedGetters, name) => {\n        if (__DEV__ && name in localState) {\n          console.warn(\n            `[🍍]: A getter cannot have the same name as another state property. Rename one of them. Found with \"${name}\" in store \"${id}\".`\n          )\n        }\n\n        computedGetters[name] = markRaw(\n          computed(() => {\n            setActivePinia(pinia)\n            // it was created just before\n            const store = pinia._s.get(id)!\n\n            // allow cross using stores\n            /* istanbul ignore next */\n            if (isVue2 && !store._r) return\n\n            // @ts-expect-error\n            // return getters![name].call(context, context)\n            // TODO: avoid reading the getter while assigning with a global variable\n            return getters![name].call(store, store)\n          })\n        )\n        return computedGetters\n      }, {} as Record<string, ComputedRef>)\n    )\n  }\n\n  store = createSetupStore(id, setup, options, pinia, hot, true)\n\n  return store as any\n}\n\nfunction createSetupStore<\n  Id extends string,\n  SS extends Record<any, unknown>,\n  S extends StateTree,\n  G extends Record<string, _Method>,\n  A extends _ActionsTree\n>(\n  $id: Id,\n  setup: () => SS,\n  options:\n    | DefineSetupStoreOptions<Id, S, G, A>\n    | DefineStoreOptions<Id, S, G, A> = {},\n  pinia: Pinia,\n  hot?: boolean,\n  isOptionsStore?: boolean\n): Store<Id, S, G, A> {\n  let scope!: EffectScope\n\n  const optionsForPlugin: DefineStoreOptionsInPlugin<Id, S, G, A> = assign(\n    { actions: {} as A },\n    options\n  )\n\n  /* istanbul ignore if */\n  if (__DEV__ && !pinia._e.active) {\n    throw new Error('Pinia destroyed')\n  }\n\n  // watcher options for $subscribe\n  const $subscribeOptions: WatchOptions = {\n    deep: true,\n    // flush: 'post',\n  }\n  /* istanbul ignore else */\n  if (__DEV__ && !isVue2) {\n    $subscribeOptions.onTrigger = (event) => {\n      /* istanbul ignore else */\n      if (isListening) {\n        debuggerEvents = event\n        // avoid triggering this while the store is being built and the state is being set in pinia\n      } else if (isListening == false && !store._hotUpdating) {\n        // let patch send all the events together later\n        /* istanbul ignore else */\n        if (Array.isArray(debuggerEvents)) {\n          debuggerEvents.push(event)\n        } else {\n          console.error(\n            '🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.'\n          )\n        }\n      }\n    }\n  }\n\n  // internal state\n  let isListening: boolean // set to true at the end\n  let isSyncListening: boolean // set to true at the end\n  let subscriptions: SubscriptionCallback<S>[] = []\n  let actionSubscriptions: StoreOnActionListener<Id, S, G, A>[] = []\n  let debuggerEvents: DebuggerEvent[] | DebuggerEvent\n  const initialState = pinia.state.value[$id] as UnwrapRef<S> | undefined\n\n  // avoid setting the state for option stores if it is set\n  // by the setup\n  if (!isOptionsStore && !initialState && (!__DEV__ || !hot)) {\n    /* istanbul ignore if */\n    if (isVue2) {\n      set(pinia.state.value, $id, {})\n    } else {\n      pinia.state.value[$id] = {}\n    }\n  }\n\n  const hotState = ref({} as S)\n\n  // avoid triggering too many listeners\n  // https://github.com/vuejs/pinia/issues/1129\n  let activeListener: Symbol | undefined\n  function $patch(stateMutation: (state: UnwrapRef<S>) => void): void\n  function $patch(partialState: _DeepPartial<UnwrapRef<S>>): void\n  function $patch(\n    partialStateOrMutator:\n      | _DeepPartial<UnwrapRef<S>>\n      | ((state: UnwrapRef<S>) => void)\n  ): void {\n    let subscriptionMutation: SubscriptionCallbackMutation<S>\n    isListening = isSyncListening = false\n    // reset the debugger events since patches are sync\n    /* istanbul ignore else */\n    if (__DEV__) {\n      debuggerEvents = []\n    }\n    if (typeof partialStateOrMutator === 'function') {\n      partialStateOrMutator(pinia.state.value[$id] as UnwrapRef<S>)\n      subscriptionMutation = {\n        type: MutationType.patchFunction,\n        storeId: $id,\n        events: debuggerEvents as DebuggerEvent[],\n      }\n    } else {\n      mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator)\n      subscriptionMutation = {\n        type: MutationType.patchObject,\n        payload: partialStateOrMutator,\n        storeId: $id,\n        events: debuggerEvents as DebuggerEvent[],\n      }\n    }\n    const myListenerId = (activeListener = Symbol())\n    nextTick().then(() => {\n      if (activeListener === myListenerId) {\n        isListening = true\n      }\n    })\n    isSyncListening = true\n    // because we paused the watcher, we need to manually call the subscriptions\n    triggerSubscriptions(\n      subscriptions,\n      subscriptionMutation,\n      pinia.state.value[$id] as UnwrapRef<S>\n    )\n  }\n\n  const $reset = isOptionsStore\n    ? function $reset(this: _StoreWithState<Id, S, G, A>) {\n        const { state } = options as DefineStoreOptions<Id, S, G, A>\n        const newState = state ? state() : {}\n        // we use a patch to group all changes into one single subscription\n        this.$patch(($state) => {\n          assign($state, newState)\n        })\n      }\n    : /* istanbul ignore next */\n    __DEV__\n    ? () => {\n        throw new Error(\n          `🍍: Store \"${$id}\" is built using the setup syntax and does not implement $reset().`\n        )\n      }\n    : noop\n\n  function $dispose() {\n    scope.stop()\n    subscriptions = []\n    actionSubscriptions = []\n    pinia._s.delete($id)\n  }\n\n  /**\n   * Wraps an action to handle subscriptions.\n   *\n   * @param name - name of the action\n   * @param action - action to wrap\n   * @returns a wrapped action to handle subscriptions\n   */\n  function wrapAction(name: string, action: _Method) {\n    return function (this: any) {\n      setActivePinia(pinia)\n      const args = Array.from(arguments)\n\n      const afterCallbackList: Array<(resolvedReturn: any) => any> = []\n      const onErrorCallbackList: Array<(error: unknown) => unknown> = []\n      function after(callback: _ArrayType<typeof afterCallbackList>) {\n        afterCallbackList.push(callback)\n      }\n      function onError(callback: _ArrayType<typeof onErrorCallbackList>) {\n        onErrorCallbackList.push(callback)\n      }\n\n      // @ts-expect-error\n      triggerSubscriptions(actionSubscriptions, {\n        args,\n        name,\n        store,\n        after,\n        onError,\n      })\n\n      let ret: any\n      try {\n        ret = action.apply(this && this.$id === $id ? this : store, args)\n        // handle sync errors\n      } catch (error) {\n        triggerSubscriptions(onErrorCallbackList, error)\n        throw error\n      }\n\n      if (ret instanceof Promise) {\n        return ret\n          .then((value) => {\n            triggerSubscriptions(afterCallbackList, value)\n            return value\n          })\n          .catch((error) => {\n            triggerSubscriptions(onErrorCallbackList, error)\n            return Promise.reject(error)\n          })\n      }\n\n      // trigger after callbacks\n      triggerSubscriptions(afterCallbackList, ret)\n      return ret\n    }\n  }\n\n  const _hmrPayload = /*#__PURE__*/ markRaw({\n    actions: {} as Record<string, any>,\n    getters: {} as Record<string, Ref>,\n    state: [] as string[],\n    hotState,\n  })\n\n  const partialStore = {\n    _p: pinia,\n    // _s: scope,\n    $id,\n    $onAction: addSubscription.bind(null, actionSubscriptions),\n    $patch,\n    $reset,\n    $subscribe(callback, options = {}) {\n      const removeSubscription = addSubscription(\n        subscriptions,\n        callback,\n        options.detached,\n        () => stopWatcher()\n      )\n      const stopWatcher = scope.run(() =>\n        watch(\n          () => pinia.state.value[$id] as UnwrapRef<S>,\n          (state) => {\n            if (options.flush === 'sync' ? isSyncListening : isListening) {\n              callback(\n                {\n                  storeId: $id,\n                  type: MutationType.direct,\n                  events: debuggerEvents as DebuggerEvent,\n                },\n                state\n              )\n            }\n          },\n          assign({}, $subscribeOptions, options)\n        )\n      )!\n\n      return removeSubscription\n    },\n    $dispose,\n  } as _StoreWithState<Id, S, G, A>\n\n  /* istanbul ignore if */\n  if (isVue2) {\n    // start as non ready\n    partialStore._r = false\n  }\n\n  const store: Store<Id, S, G, A> = reactive(\n    __DEV__ || USE_DEVTOOLS\n      ? assign(\n          {\n            _hmrPayload,\n            _customProperties: markRaw(new Set<string>()), // devtools custom properties\n          },\n          partialStore\n          // must be added later\n          // setupStore\n        )\n      : partialStore\n  ) as unknown as Store<Id, S, G, A>\n\n  // store the partial store now so the setup of stores can instantiate each other before they are finished without\n  // creating infinite loops.\n  pinia._s.set($id, store)\n\n  const runWithContext =\n    (pinia._a && pinia._a.runWithContext) || fallbackRunWithContext\n\n  // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n  const setupStore = runWithContext(() =>\n    pinia._e.run(() => (scope = effectScope()).run(setup)!)\n  )!\n\n  // overwrite existing actions to support $onAction\n  for (const key in setupStore) {\n    const prop = setupStore[key]\n\n    if ((isRef(prop) && !isComputed(prop)) || isReactive(prop)) {\n      // mark it as a piece of state to be serialized\n      if (__DEV__ && hot) {\n        set(hotState.value, key, toRef(setupStore as any, key))\n        // createOptionStore directly sets the state in pinia.state.value so we\n        // can just skip that\n      } else if (!isOptionsStore) {\n        // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n        if (initialState && shouldHydrate(prop)) {\n          if (isRef(prop)) {\n            prop.value = initialState[key]\n          } else {\n            // probably a reactive object, lets recursively assign\n            // @ts-expect-error: prop is unknown\n            mergeReactiveObjects(prop, initialState[key])\n          }\n        }\n        // transfer the ref to the pinia state to keep everything in sync\n        /* istanbul ignore if */\n        if (isVue2) {\n          set(pinia.state.value[$id], key, prop)\n        } else {\n          pinia.state.value[$id][key] = prop\n        }\n      }\n\n      /* istanbul ignore else */\n      if (__DEV__) {\n        _hmrPayload.state.push(key)\n      }\n      // action\n    } else if (typeof prop === 'function') {\n      // @ts-expect-error: we are overriding the function we avoid wrapping if\n      const actionValue = __DEV__ && hot ? prop : wrapAction(key, prop)\n      // this a hot module replacement store because the hotUpdate method needs\n      // to do it with the right context\n      /* istanbul ignore if */\n      if (isVue2) {\n        set(setupStore, key, actionValue)\n      } else {\n        // @ts-expect-error\n        setupStore[key] = actionValue\n      }\n\n      /* istanbul ignore else */\n      if (__DEV__) {\n        _hmrPayload.actions[key] = prop\n      }\n\n      // list actions so they can be used in plugins\n      // @ts-expect-error\n      optionsForPlugin.actions[key] = prop\n    } else if (__DEV__) {\n      // add getters for devtools\n      if (isComputed(prop)) {\n        _hmrPayload.getters[key] = isOptionsStore\n          ? // @ts-expect-error\n            options.getters[key]\n          : prop\n        if (IS_CLIENT) {\n          const getters: string[] =\n            (setupStore._getters as string[]) ||\n            // @ts-expect-error: same\n            ((setupStore._getters = markRaw([])) as string[])\n          getters.push(key)\n        }\n      }\n    }\n  }\n\n  // add the state, getters, and action properties\n  /* istanbul ignore if */\n  if (isVue2) {\n    Object.keys(setupStore).forEach((key) => {\n      set(store, key, setupStore[key])\n    })\n  } else {\n    assign(store, setupStore)\n    // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n    // Make `storeToRefs()` work with `reactive()` #799\n    assign(toRaw(store), setupStore)\n  }\n\n  // use this instead of a computed with setter to be able to create it anywhere\n  // without linking the computed lifespan to wherever the store is first\n  // created.\n  Object.defineProperty(store, '$state', {\n    get: () => (__DEV__ && hot ? hotState.value : pinia.state.value[$id]),\n    set: (state) => {\n      /* istanbul ignore if */\n      if (__DEV__ && hot) {\n        throw new Error('cannot set hotState')\n      }\n      $patch(($state) => {\n        assign($state, state)\n      })\n    },\n  })\n\n  // add the hotUpdate before plugins to allow them to override it\n  /* istanbul ignore else */\n  if (__DEV__) {\n    store._hotUpdate = markRaw((newStore) => {\n      store._hotUpdating = true\n      newStore._hmrPayload.state.forEach((stateKey) => {\n        if (stateKey in store.$state) {\n          const newStateTarget = newStore.$state[stateKey]\n          const oldStateSource = store.$state[stateKey]\n          if (\n            typeof newStateTarget === 'object' &&\n            isPlainObject(newStateTarget) &&\n            isPlainObject(oldStateSource)\n          ) {\n            patchObject(newStateTarget, oldStateSource)\n          } else {\n            // transfer the ref\n            newStore.$state[stateKey] = oldStateSource\n          }\n        }\n        // patch direct access properties to allow store.stateProperty to work as\n        // store.$state.stateProperty\n        set(store, stateKey, toRef(newStore.$state, stateKey))\n      })\n\n      // remove deleted state properties\n      Object.keys(store.$state).forEach((stateKey) => {\n        if (!(stateKey in newStore.$state)) {\n          del(store, stateKey)\n        }\n      })\n\n      // avoid devtools logging this as a mutation\n      isListening = false\n      isSyncListening = false\n      pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState')\n      isSyncListening = true\n      nextTick().then(() => {\n        isListening = true\n      })\n\n      for (const actionName in newStore._hmrPayload.actions) {\n        const action: _Method = newStore[actionName]\n\n        set(store, actionName, wrapAction(actionName, action))\n      }\n\n      // TODO: does this work in both setup and option store?\n      for (const getterName in newStore._hmrPayload.getters) {\n        const getter: _Method = newStore._hmrPayload.getters[getterName]\n        const getterValue = isOptionsStore\n          ? // special handling of options api\n            computed(() => {\n              setActivePinia(pinia)\n              return getter.call(store, store)\n            })\n          : getter\n\n        set(store, getterName, getterValue)\n      }\n\n      // remove deleted getters\n      Object.keys(store._hmrPayload.getters).forEach((key) => {\n        if (!(key in newStore._hmrPayload.getters)) {\n          del(store, key)\n        }\n      })\n\n      // remove old actions\n      Object.keys(store._hmrPayload.actions).forEach((key) => {\n        if (!(key in newStore._hmrPayload.actions)) {\n          del(store, key)\n        }\n      })\n\n      // update the values used in devtools and to allow deleting new properties later on\n      store._hmrPayload = newStore._hmrPayload\n      store._getters = newStore._getters\n      store._hotUpdating = false\n    })\n  }\n\n  if (USE_DEVTOOLS) {\n    const nonEnumerable = {\n      writable: true,\n      configurable: true,\n      // avoid warning on devtools trying to display this property\n      enumerable: false,\n    }\n\n    // avoid listing internal properties in devtools\n    ;(['_p', '_hmrPayload', '_getters', '_customProperties'] as const).forEach(\n      (p) => {\n        Object.defineProperty(\n          store,\n          p,\n          assign({ value: store[p] }, nonEnumerable)\n        )\n      }\n    )\n  }\n\n  /* istanbul ignore if */\n  if (isVue2) {\n    // mark the store as ready before plugins\n    store._r = true\n  }\n\n  // apply all plugins\n  pinia._p.forEach((extender) => {\n    /* istanbul ignore else */\n    if (USE_DEVTOOLS) {\n      const extensions = scope.run(() =>\n        extender({\n          store,\n          app: pinia._a,\n          pinia,\n          options: optionsForPlugin,\n        })\n      )!\n      Object.keys(extensions || {}).forEach((key) =>\n        store._customProperties.add(key)\n      )\n      assign(store, extensions)\n    } else {\n      assign(\n        store,\n        scope.run(() =>\n          extender({\n            store,\n            app: pinia._a,\n            pinia,\n            options: optionsForPlugin,\n          })\n        )!\n      )\n    }\n  })\n\n  if (\n    __DEV__ &&\n    store.$state &&\n    typeof store.$state === 'object' &&\n    typeof store.$state.constructor === 'function' &&\n    !store.$state.constructor.toString().includes('[native code]')\n  ) {\n    console.warn(\n      `[🍍]: The \"state\" must be a plain object. It cannot be\\n` +\n        `\\tstate: () => new MyClass()\\n` +\n        `Found in store \"${store.$id}\".`\n    )\n  }\n\n  // only apply hydrate to option stores with an initial state in pinia\n  if (\n    initialState &&\n    isOptionsStore &&\n    (options as DefineStoreOptions<Id, S, G, A>).hydrate\n  ) {\n    ;(options as DefineStoreOptions<Id, S, G, A>).hydrate!(\n      store.$state,\n      initialState\n    )\n  }\n\n  isListening = true\n  isSyncListening = true\n  return store\n}\n\n/**\n * Extract the actions of a store type. Works with both a Setup Store or an\n * Options Store.\n */\nexport type StoreActions<SS> = SS extends Store<\n  string,\n  StateTree,\n  _GettersTree<StateTree>,\n  infer A\n>\n  ? A\n  : _ExtractActionsFromSetupStore<SS>\n\n/**\n * Extract the getters of a store type. Works with both a Setup Store or an\n * Options Store.\n */\nexport type StoreGetters<SS> = SS extends Store<\n  string,\n  StateTree,\n  infer G,\n  _ActionsTree\n>\n  ? _StoreWithGetters<G>\n  : _ExtractGettersFromSetupStore<SS>\n\n/**\n * Extract the state of a store type. Works with both a Setup Store or an\n * Options Store. Note this unwraps refs.\n */\nexport type StoreState<SS> = SS extends Store<\n  string,\n  infer S,\n  _GettersTree<StateTree>,\n  _ActionsTree\n>\n  ? UnwrapRef<S>\n  : _ExtractStateFromSetupStore<SS>\n\n// type a1 = _ExtractStateFromSetupStore<{ a: Ref<number>; action: () => void }>\n// type a2 = _ExtractActionsFromSetupStore<{ a: Ref<number>; action: () => void }>\n// type a3 = _ExtractGettersFromSetupStore<{\n//   a: Ref<number>\n//   b: ComputedRef<string>\n//   action: () => void\n// }>\n\n/**\n * Creates a `useStore` function that retrieves the store instance\n *\n * @param id - id of the store (must be unique)\n * @param options - options to define the store\n */\nexport function defineStore<\n  Id extends string,\n  S extends StateTree = {},\n  G extends _GettersTree<S> = {},\n  // cannot extends ActionsTree because we loose the typings\n  A /* extends ActionsTree */ = {}\n>(\n  id: Id,\n  options: Omit<DefineStoreOptions<Id, S, G, A>, 'id'>\n): StoreDefinition<Id, S, G, A>\n\n/**\n * Creates a `useStore` function that retrieves the store instance\n *\n * @param options - options to define the store\n */\nexport function defineStore<\n  Id extends string,\n  S extends StateTree = {},\n  G extends _GettersTree<S> = {},\n  // cannot extends ActionsTree because we loose the typings\n  A /* extends ActionsTree */ = {}\n>(options: DefineStoreOptions<Id, S, G, A>): StoreDefinition<Id, S, G, A>\n\n/**\n * Creates a `useStore` function that retrieves the store instance\n *\n * @param id - id of the store (must be unique)\n * @param storeSetup - function that defines the store\n * @param options - extra options\n */\nexport function defineStore<Id extends string, SS>(\n  id: Id,\n  storeSetup: () => SS,\n  options?: DefineSetupStoreOptions<\n    Id,\n    _ExtractStateFromSetupStore<SS>,\n    _ExtractGettersFromSetupStore<SS>,\n    _ExtractActionsFromSetupStore<SS>\n  >\n): StoreDefinition<\n  Id,\n  _ExtractStateFromSetupStore<SS>,\n  _ExtractGettersFromSetupStore<SS>,\n  _ExtractActionsFromSetupStore<SS>\n>\nexport function defineStore(\n  // TODO: add proper types from above\n  idOrOptions: any,\n  setup?: any,\n  setupOptions?: any\n): StoreDefinition {\n  let id: string\n  let options:\n    | DefineStoreOptions<\n        string,\n        StateTree,\n        _GettersTree<StateTree>,\n        _ActionsTree\n      >\n    | DefineSetupStoreOptions<\n        string,\n        StateTree,\n        _GettersTree<StateTree>,\n        _ActionsTree\n      >\n\n  const isSetupStore = typeof setup === 'function'\n  if (typeof idOrOptions === 'string') {\n    id = idOrOptions\n    // the option store setup will contain the actual options in this case\n    options = isSetupStore ? setupOptions : setup\n  } else {\n    options = idOrOptions\n    id = idOrOptions.id\n\n    if (__DEV__ && typeof id !== 'string') {\n      throw new Error(\n        `[🍍]: \"defineStore()\" must be passed a store id as its first argument.`\n      )\n    }\n  }\n\n  function useStore(pinia?: Pinia | null, hot?: StoreGeneric): StoreGeneric {\n    const hasContext = hasInjectionContext()\n    pinia =\n      // in test mode, ignore the argument provided as we can always retrieve a\n      // pinia instance with getActivePinia()\n      (__TEST__ && activePinia && activePinia._testing ? null : pinia) ||\n      (hasContext ? inject(piniaSymbol, null) : null)\n    if (pinia) setActivePinia(pinia)\n\n    if (__DEV__ && !activePinia) {\n      throw new Error(\n        `[🍍]: \"getActivePinia()\" was called but there was no active Pinia. Are you trying to use a store before calling \"app.use(pinia)\"?\\n` +\n          `See https://pinia.vuejs.org/core-concepts/outside-component-usage.html for help.\\n` +\n          `This will fail in production.`\n      )\n    }\n\n    pinia = activePinia!\n\n    if (!pinia._s.has(id)) {\n      // creating the store registers it in `pinia._s`\n      if (isSetupStore) {\n        createSetupStore(id, setup, options, pinia)\n      } else {\n        createOptionsStore(id, options as any, pinia)\n      }\n\n      /* istanbul ignore else */\n      if (__DEV__) {\n        // @ts-expect-error: not the right inferred type\n        useStore._pinia = pinia\n      }\n    }\n\n    const store: StoreGeneric = pinia._s.get(id)!\n\n    if (__DEV__ && hot) {\n      const hotId = '__hot:' + id\n      const newStore = isSetupStore\n        ? createSetupStore(hotId, setup, options, pinia, true)\n        : createOptionsStore(hotId, assign({}, options) as any, pinia, true)\n\n      hot._hotUpdate(newStore)\n\n      // cleanup the state properties and the store from the cache\n      delete pinia.state.value[hotId]\n      pinia._s.delete(hotId)\n    }\n\n    if (__DEV__ && IS_CLIENT) {\n      const currentInstance = getCurrentInstance()\n      // save stores in instances to access them devtools\n      if (\n        currentInstance &&\n        currentInstance.proxy &&\n        // avoid adding stores that are just built for hot module replacement\n        !hot\n      ) {\n        const vm = currentInstance.proxy\n        const cache = '_pStores' in vm ? vm._pStores! : (vm._pStores = {})\n        cache[id] = store\n      }\n    }\n\n    // StoreGeneric cannot be casted towards Store\n    return store as any\n  }\n\n  useStore.$id = id\n\n  return useStore\n}\n\n/**\n * Return type of `defineStore()` with a setup function.\n * - `Id` is a string literal of the store's name\n * - `SS` is the return type of the setup function\n * @see {@link StoreDefinition}\n */\nexport interface SetupStoreDefinition<Id extends string, SS>\n  extends StoreDefinition<\n    Id,\n    _ExtractStateFromSetupStore<SS>,\n    _ExtractGettersFromSetupStore<SS>,\n    _ExtractActionsFromSetupStore<SS>\n  > {}\n","import type { ComponentPublicInstance } from 'vue-demi'\nimport type {\n  _GettersTree,\n  _Method,\n  StateTree,\n  Store,\n  StoreDefinition,\n} from './types'\n\n/**\n * Interface to allow customizing map helpers. Extend this interface with the\n * following properties:\n *\n * - `suffix`: string. Affects the suffix of `mapStores()`, defaults to `Store`.\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MapStoresCustomization {\n  // cannot be added or it wouldn't be able to be extended\n  // suffix?: string\n}\n\n/**\n * For internal use **only**.\n */\nexport type _StoreObject<S> = S extends StoreDefinition<\n  infer Ids,\n  infer State,\n  infer Getters,\n  infer Actions\n>\n  ? {\n      [Id in `${Ids}${MapStoresCustomization extends Record<\n        'suffix',\n        infer Suffix\n      >\n        ? Suffix\n        : 'Store'}`]: () => Store<\n        Id extends `${infer RealId}${MapStoresCustomization extends Record<\n          'suffix',\n          infer Suffix\n        >\n          ? Suffix\n          : 'Store'}`\n          ? RealId\n          : string,\n        State,\n        Getters,\n        Actions\n      >\n    }\n  : {}\n\n/**\n * For internal use **only**.\n */\nexport type _Spread<A extends readonly any[]> = A extends [infer L, ...infer R]\n  ? _StoreObject<L> & _Spread<R>\n  : unknown\n\nexport let mapStoreSuffix = 'Store'\n\n/**\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\n * interface if you are using TypeScript.\n *\n * @param suffix - new suffix\n */\nexport function setMapStoreSuffix(\n  suffix: MapStoresCustomization extends Record<'suffix', infer Suffix>\n    ? Suffix\n    : string // could be 'Store' but that would be annoying for JS\n): void {\n  mapStoreSuffix = suffix\n}\n\n/**\n * Allows using stores without the composition API (`setup()`) by generating an\n * object to be spread in the `computed` field of a component. It accepts a list\n * of store definitions.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     ...mapStores(useUserStore, useCartStore)\n *   },\n *\n *   created() {\n *     this.userStore // store with id \"user\"\n *     this.cartStore // store with id \"cart\"\n *   }\n * }\n * ```\n *\n * @param stores - list of stores to map to an object\n */\nexport function mapStores<Stores extends any[]>(\n  ...stores: [...Stores]\n): _Spread<Stores> {\n  if (__DEV__ && Array.isArray(stores[0])) {\n    console.warn(\n      `[🍍]: Directly pass all stores to \"mapStores()\" without putting them in an array:\\n` +\n        `Replace\\n` +\n        `\\tmapStores([useAuthStore, useCartStore])\\n` +\n        `with\\n` +\n        `\\tmapStores(useAuthStore, useCartStore)\\n` +\n        `This will fail in production if not fixed.`\n    )\n    stores = stores[0]\n  }\n\n  return stores.reduce((reduced, useStore) => {\n    // @ts-expect-error: $id is added by defineStore\n    reduced[useStore.$id + mapStoreSuffix] = function (\n      this: ComponentPublicInstance\n    ) {\n      return useStore(this.$pinia)\n    }\n    return reduced\n  }, {} as _Spread<Stores>)\n}\n\n/**\n * For internal use **only**\n */\nexport type _MapStateReturn<\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  Keys extends keyof S | keyof G = keyof S | keyof G\n> = {\n  // [key in keyof S | keyof G]: () => key extends keyof S\n  //   ? S[key]\n  //   : key extends keyof G\n  //   ? G[key]\n  //   : never\n  [key in Keys]: () => Store<string, S, G, {}>[key]\n}\n\n/**\n * For internal use **only**\n */\nexport type _MapStateObjectReturn<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A,\n  T extends Record<\n    string,\n    keyof S | keyof G | ((store: Store<Id, S, G, A>) => any)\n  > = {}\n> = {\n  [key in keyof T]: () => T[key] extends (store: any) => infer R\n    ? R\n    : T[key] extends keyof Store<Id, S, G, A>\n    ? Store<Id, S, G, A>[T[key]]\n    : never\n}\n\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component. The values of the object are the state properties/getters\n * while the keys are the names of the resulting computed properties.\n * Optionally, you can also pass a custom function that will receive the store\n * as its first argument. Note that while it has access to the component\n * instance via `this`, it won't be typed.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     // useCounterStore has a state property named `count` and a getter `double`\n *     ...mapState(useCounterStore, {\n *       n: 'count',\n *       triple: store => store.n * 3,\n *       // note we can't use an arrow function if we want to use `this`\n *       custom(store) {\n *         return this.someComponentValue + store.n\n *       },\n *       doubleN: 'double'\n *     })\n *   },\n *\n *   created() {\n *     this.n // 2\n *     this.doubleN // 4\n *   }\n * }\n * ```\n *\n * @param useStore - store to map from\n * @param keyMapper - object of state properties or getters\n */\nexport function mapState<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A,\n  KeyMapper extends Record<\n    string,\n    keyof S | keyof G | ((store: Store<Id, S, G, A>) => any)\n  >\n>(\n  useStore: StoreDefinition<Id, S, G, A>,\n  keyMapper: KeyMapper\n): _MapStateObjectReturn<Id, S, G, A, KeyMapper>\n\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     ...mapState(useCounterStore, ['count', 'double'])\n *   },\n *\n *   created() {\n *     this.count // 2\n *     this.double // 4\n *   }\n * }\n * ```\n *\n * @param useStore - store to map from\n * @param keys - array of state properties or getters\n */\nexport function mapState<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A,\n  Keys extends keyof S | keyof G\n>(\n  useStore: StoreDefinition<Id, S, G, A>,\n  keys: readonly Keys[]\n): _MapStateReturn<S, G, Keys>\n\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nexport function mapState<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A\n>(\n  useStore: StoreDefinition<Id, S, G, A>,\n  keysOrMapper: any\n): _MapStateReturn<S, G> | _MapStateObjectReturn<Id, S, G, A> {\n  return Array.isArray(keysOrMapper)\n    ? keysOrMapper.reduce((reduced, key) => {\n        reduced[key] = function (this: ComponentPublicInstance) {\n          return useStore(this.$pinia)[key]\n        } as () => any\n        return reduced\n      }, {} as _MapStateReturn<S, G>)\n    : Object.keys(keysOrMapper).reduce((reduced, key: string) => {\n        // @ts-expect-error\n        reduced[key] = function (this: ComponentPublicInstance) {\n          const store = useStore(this.$pinia)\n          const storeKey = keysOrMapper[key]\n          // for some reason TS is unable to infer the type of storeKey to be a\n          // function\n          return typeof storeKey === 'function'\n            ? (storeKey as (store: Store<Id, S, G, A>) => any).call(this, store)\n            : store[storeKey]\n        }\n        return reduced\n      }, {} as _MapStateObjectReturn<Id, S, G, A>)\n}\n\n/**\n * Alias for `mapState()`. You should use `mapState()` instead.\n * @deprecated use `mapState()` instead.\n */\nexport const mapGetters = mapState\n\n/**\n * For internal use **only**\n */\nexport type _MapActionsReturn<A> = {\n  [key in keyof A]: A[key]\n}\n\n/**\n * For internal use **only**\n */\nexport type _MapActionsObjectReturn<A, T extends Record<string, keyof A>> = {\n  [key in keyof T]: A[T[key]]\n}\n\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component. The values of the object are the actions while the keys are\n * the names of the resulting methods.\n *\n * @example\n * ```js\n * export default {\n *   methods: {\n *     // other methods properties\n *     // useCounterStore has two actions named `increment` and `setCount`\n *     ...mapActions(useCounterStore, { moar: 'increment', setIt: 'setCount' })\n *   },\n *\n *   created() {\n *     this.moar()\n *     this.setIt(2)\n *   }\n * }\n * ```\n *\n * @param useStore - store to map from\n * @param keyMapper - object to define new names for the actions\n */\nexport function mapActions<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A,\n  KeyMapper extends Record<string, keyof A>\n>(\n  useStore: StoreDefinition<Id, S, G, A>,\n  keyMapper: KeyMapper\n): _MapActionsObjectReturn<A, KeyMapper>\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component.\n *\n * @example\n * ```js\n * export default {\n *   methods: {\n *     // other methods properties\n *     ...mapActions(useCounterStore, ['increment', 'setCount'])\n *   },\n *\n *   created() {\n *     this.increment()\n *     this.setCount(2) // pass arguments as usual\n *   }\n * }\n * ```\n *\n * @param useStore - store to map from\n * @param keys - array of action names to map\n */\nexport function mapActions<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A\n>(\n  useStore: StoreDefinition<Id, S, G, A>,\n  keys: Array<keyof A>\n): _MapActionsReturn<A>\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nexport function mapActions<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A,\n  KeyMapper extends Record<string, keyof A>\n>(\n  useStore: StoreDefinition<Id, S, G, A>,\n  keysOrMapper: Array<keyof A> | KeyMapper\n): _MapActionsReturn<A> | _MapActionsObjectReturn<A, KeyMapper> {\n  return Array.isArray(keysOrMapper)\n    ? keysOrMapper.reduce((reduced, key) => {\n        // @ts-expect-error\n        reduced[key] = function (\n          this: ComponentPublicInstance,\n          ...args: any[]\n        ) {\n          return useStore(this.$pinia)[key](...args)\n        }\n        return reduced\n      }, {} as _MapActionsReturn<A>)\n    : Object.keys(keysOrMapper).reduce((reduced, key: keyof KeyMapper) => {\n        // @ts-expect-error\n        reduced[key] = function (\n          this: ComponentPublicInstance,\n          ...args: any[]\n        ) {\n          return useStore(this.$pinia)[keysOrMapper[key]](...args)\n        }\n        return reduced\n      }, {} as _MapActionsObjectReturn<A, KeyMapper>)\n}\n\n/**\n * For internal use **only**\n */\nexport type _MapWritableStateReturn<S extends StateTree> = {\n  [key in keyof S]: {\n    get: () => S[key]\n    set: (value: S[key]) => any\n  }\n}\n\n/**\n * For internal use **only**\n */\nexport type _MapWritableStateObjectReturn<\n  S extends StateTree,\n  T extends Record<string, keyof S>\n> = {\n  [key in keyof T]: {\n    get: () => S[T[key]]\n    set: (value: S[T[key]]) => any\n  }\n}\n\n/**\n * Same as `mapState()` but creates computed setters as well so the state can be\n * modified. Differently from `mapState()`, only `state` properties can be\n * added.\n *\n * @param useStore - store to map from\n * @param keyMapper - object of state properties\n */\nexport function mapWritableState<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A,\n  KeyMapper extends Record<string, keyof S>\n>(\n  useStore: StoreDefinition<Id, S, G, A>,\n  keyMapper: KeyMapper\n): _MapWritableStateObjectReturn<S, KeyMapper>\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keys - array of state properties\n */\nexport function mapWritableState<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A,\n  Keys extends keyof S\n>(\n  useStore: StoreDefinition<Id, S, G, A>,\n  keys: readonly Keys[]\n): {\n  [K in Keys]: {\n    get: () => S[K]\n    set: (value: S[K]) => any\n  }\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nexport function mapWritableState<\n  Id extends string,\n  S extends StateTree,\n  G extends _GettersTree<S>,\n  A,\n  KeyMapper extends Record<string, keyof S>\n>(\n  useStore: StoreDefinition<Id, S, G, A>,\n  keysOrMapper: Array<keyof S> | KeyMapper\n): _MapWritableStateReturn<S> | _MapWritableStateObjectReturn<S, KeyMapper> {\n  return Array.isArray(keysOrMapper)\n    ? keysOrMapper.reduce((reduced, key) => {\n        // @ts-ignore\n        reduced[key] = {\n          get(this: ComponentPublicInstance) {\n            return useStore(this.$pinia)[key]\n          },\n          set(this: ComponentPublicInstance, value) {\n            // it's easier to type it here as any\n            return (useStore(this.$pinia)[key] = value as any)\n          },\n        }\n        return reduced\n      }, {} as _MapWritableStateReturn<S>)\n    : Object.keys(keysOrMapper).reduce((reduced, key: keyof KeyMapper) => {\n        // @ts-ignore\n        reduced[key] = {\n          get(this: ComponentPublicInstance) {\n            return useStore(this.$pinia)[keysOrMapper[key]]\n          },\n          set(this: ComponentPublicInstance, value) {\n            // it's easier to type it here as any\n            return (useStore(this.$pinia)[keysOrMapper[key]] = value as any)\n          },\n        }\n        return reduced\n      }, {} as _MapWritableStateObjectReturn<S, KeyMapper>)\n}\n","import {\n  ComputedRef,\n  isReactive,\n  isRef,\n  isVue2,\n  Ref,\n  toRaw,\n  ToRef,\n  toRef,\n  ToRefs,\n  toRefs,\n} from 'vue-demi'\nimport { StoreGetters, StoreState } from './store'\nimport type { PiniaCustomStateProperties, StoreGeneric } from './types'\n\ntype ToComputedRefs<T> = {\n  [K in keyof T]: ToRef<T[K]> extends Ref<infer U>\n    ? ComputedRef<U>\n    : ToRef<T[K]>\n}\n\n/**\n * Extracts the return type for `storeToRefs`.\n * Will convert any `getters` into `ComputedRef`.\n */\nexport type StoreToRefs<SS extends StoreGeneric> = ToRefs<\n  StoreState<SS> & PiniaCustomStateProperties<StoreState<SS>>\n> &\n  ToComputedRefs<StoreGetters<SS>>\n\n/**\n * Creates an object of references with all the state, getters, and plugin-added\n * state properties of the store. Similar to `toRefs()` but specifically\n * designed for Pinia stores so methods and non reactive properties are\n * completely ignored.\n *\n * @param store - store to extract the refs from\n */\nexport function storeToRefs<SS extends StoreGeneric>(\n  store: SS\n): StoreToRefs<SS> {\n  // See https://github.com/vuejs/pinia/issues/852\n  // It's easier to just use toRefs() even if it includes more stuff\n  if (isVue2) {\n    // @ts-expect-error: toRefs include methods and others\n    return toRefs(store)\n  } else {\n    store = toRaw(store)\n\n    const refs = {} as StoreToRefs<SS>\n    for (const key in store) {\n      const value = store[key]\n      if (isRef(value) || isReactive(value)) {\n        // @ts-expect-error: the key is state or getter\n        refs[key] =\n          // ---\n          toRef(store, key)\n      }\n    }\n\n    return refs\n  }\n}\n","import type { Plugin } from 'vue-demi'\nimport { registerPiniaDevtools } from './devtools'\nimport { IS_CLIENT, USE_DEVTOOLS } from './env'\nimport { Pinia, piniaSymbol, setActivePinia } from './rootStore'\n\n/**\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\n * https://pinia.vuejs.org/ssr/nuxt.html.\n *\n * @example\n * ```js\n * import Vue from 'vue'\n * import { PiniaVuePlugin, createPinia } from 'pinia'\n *\n * Vue.use(PiniaVuePlugin)\n * const pinia = createPinia()\n *\n * new Vue({\n *   el: '#app',\n *   // ...\n *   pinia,\n * })\n * ```\n *\n * @param _Vue - `Vue` imported from 'vue'.\n */\nexport const PiniaVuePlugin: Plugin = function (_Vue) {\n  // Equivalent of\n  // app.config.globalProperties.$pinia = pinia\n  _Vue.mixin({\n    beforeCreate() {\n      const options = this.$options\n      if (options.pinia) {\n        const pinia = options.pinia as Pinia\n        // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n        /* istanbul ignore else */\n        if (!(this as any)._provided) {\n          const provideCache = {}\n          Object.defineProperty(this, '_provided', {\n            get: () => provideCache,\n            set: (v) => Object.assign(provideCache, v),\n          })\n        }\n        ;(this as any)._provided[piniaSymbol as any] = pinia\n\n        // propagate the pinia instance in an SSR friendly way\n        // avoid adding it to nuxt twice\n        /* istanbul ignore else */\n        if (!this.$pinia) {\n          this.$pinia = pinia\n        }\n\n        pinia._a = this as any\n        if (IS_CLIENT) {\n          // this allows calling useStore() outside of a component setup after\n          // installing pinia's plugin\n          setActivePinia(pinia)\n        }\n        if (USE_DEVTOOLS) {\n          registerPiniaDevtools(pinia._a, pinia)\n        }\n      } else if (!this.$pinia && options.parent && options.parent.$pinia) {\n        this.$pinia = options.parent.$pinia\n      }\n    },\n    destroyed() {\n      delete this._pStores\n    },\n  })\n}\n"],"names":["hasInjectionContext","inject","MutationType","assign","toRaw","watch","unref","markRaw","effectScope","ref","isRef","isReactive","getCurrentScope","onScopeDispose","toRefs","computed","nextTick","reactive","toRef","getCurrentInstance"],"mappings":"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","x_google_ignoreList":[0,2,3,4,5,6]}