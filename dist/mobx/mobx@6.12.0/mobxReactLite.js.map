{"version":3,"file":"mobxReactLite.js","sources":["../packages/mobx-react-lite/src/utils/assertEnvironment.ts","../packages/mobx-react-lite/src/utils/observerBatching.ts","../packages/mobx-react-lite/src/utils/printDebugValue.ts","../packages/mobx-react-lite/src/staticRendering.ts","../packages/mobx-react-lite/src/utils/UniversalFinalizationRegistry.ts","../packages/mobx-react-lite/src/utils/observerFinalizationRegistry.ts","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../node_modules/use-sync-external-store/shim/index.js","../packages/mobx-react-lite/src/useObserver.ts","../packages/mobx-react-lite/src/observer.ts","../packages/mobx-react-lite/src/ObserverComponent.ts","../packages/mobx-react-lite/src/useLocalObservable.ts","../packages/mobx-react-lite/src/useAsObservableSource.ts","../packages/mobx-react-lite/src/useLocalStore.ts","../packages/mobx-react-lite/src/index.ts"],"sourcesContent":["import { makeObservable } from \"mobx\"\nimport { useState } from \"react\"\n\nif (!useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\")\n}\nif (!makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\")\n}\n","import { configure } from \"mobx\"\n\nexport function defaultNoopBatch(callback: () => void) {\n    callback()\n}\n\nexport function observerBatching(reactionScheduler: any) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch\n        if (\"production\" !== process.env.NODE_ENV) {\n            console.warn(\n                \"[MobX] Failed to get unstable_batched updates from react-dom / react-native\"\n            )\n        }\n    }\n    configure({ reactionScheduler })\n}\n\nexport const isObserverBatched = () => {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\"[MobX] Deprecated\")\n    }\n\n    return true\n}\n","import { getDependencyTree, Reaction } from \"mobx\"\n\nexport function printDebugValue(v: Reaction) {\n    return getDependencyTree(v)\n}\n","let globalIsUsingStaticRendering = false\n\nexport function enableStaticRendering(enable: boolean) {\n    globalIsUsingStaticRendering = enable\n}\n\nexport function isUsingStaticRendering(): boolean {\n    return globalIsUsingStaticRendering\n}\n","export declare class FinalizationRegistryType<T> {\n    constructor(finalize: (value: T) => void)\n    register(target: object, value: T, token?: object): void\n    unregister(token: object): void\n}\n\ndeclare const FinalizationRegistry: typeof FinalizationRegistryType | undefined\n\nexport const REGISTRY_FINALIZE_AFTER = 10_000\nexport const REGISTRY_SWEEP_INTERVAL = 10_000\n\nexport class TimerBasedFinalizationRegistry<T> implements FinalizationRegistryType<T> {\n    private registrations: Map<unknown, { value: T; registeredAt: number }> = new Map()\n    private sweepTimeout: ReturnType<typeof setTimeout> | undefined\n\n    constructor(private readonly finalize: (value: T) => void) {}\n\n    // Token is actually required with this impl\n    register(target: object, value: T, token?: object) {\n        this.registrations.set(token, {\n            value,\n            registeredAt: Date.now()\n        })\n        this.scheduleSweep()\n    }\n\n    unregister(token: unknown) {\n        this.registrations.delete(token)\n    }\n\n    // Bound so it can be used directly as setTimeout callback.\n    sweep = (maxAge = REGISTRY_FINALIZE_AFTER) => {\n        // cancel timeout so we can force sweep anytime\n        clearTimeout(this.sweepTimeout)\n        this.sweepTimeout = undefined\n\n        const now = Date.now()\n        this.registrations.forEach((registration, token) => {\n            if (now - registration.registeredAt >= maxAge) {\n                this.finalize(registration.value)\n                this.registrations.delete(token)\n            }\n        })\n\n        if (this.registrations.size > 0) {\n            this.scheduleSweep()\n        }\n    }\n\n    // Bound so it can be exported directly as clearTimers test utility.\n    finalizeAllImmediately = () => {\n        this.sweep(0)\n    }\n\n    private scheduleSweep() {\n        if (this.sweepTimeout === undefined) {\n            this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL)\n        }\n    }\n}\n\nexport const UniversalFinalizationRegistry =\n    typeof FinalizationRegistry !== \"undefined\"\n        ? FinalizationRegistry\n        : TimerBasedFinalizationRegistry\n","import { Reaction } from \"mobx\"\nimport { UniversalFinalizationRegistry } from \"./UniversalFinalizationRegistry\"\n\nexport const observerFinalizationRegistry = new UniversalFinalizationRegistry(\n    (adm: { reaction: Reaction | null }) => {\n        adm.reaction?.dispose()\n        adm.reaction = null\n    }\n)\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import { Reaction } from \"mobx\"\nimport React from \"react\"\nimport { printDebugValue } from \"./utils/printDebugValue\"\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\nimport { useSyncExternalStore } from \"use-sync-external-store/shim\"\n\n// Required by SSR when hydrating #3669\nconst getServerSnapshot = () => {}\n\n// Do not store `admRef` (even as part of a closure!) on this object,\n// otherwise it will prevent GC and therefore reaction disposal via FinalizationRegistry.\ntype ObserverAdministration = {\n    reaction: Reaction | null // also serves as disposed flag\n    onStoreChange: Function | null // also serves as mounted flag\n    // stateVersion that 'ticks' for every time the reaction fires\n    // tearing is still present,\n    // because there is no cross component synchronization,\n    // but we can use `useSyncExternalStore` API.\n    // TODO: optimize to use number?\n    stateVersion: any\n    name: string\n    // These don't depend on state/props, therefore we can keep them here instead of `useCallback`\n    subscribe: Parameters<typeof React.useSyncExternalStore>[0]\n    getSnapshot: Parameters<typeof React.useSyncExternalStore>[1]\n}\n\nfunction createReaction(adm: ObserverAdministration) {\n    adm.reaction = new Reaction(`observer${adm.name}`, () => {\n        adm.stateVersion = Symbol()\n        // onStoreChange won't be available until the component \"mounts\".\n        // If state changes in between initial render and mount,\n        // `useSyncExternalStore` should handle that by checking the state version and issuing update.\n        adm.onStoreChange?.()\n    })\n}\n\nexport function useObserver<T>(render: () => T, baseComponentName: string = \"observed\"): T {\n    if (isUsingStaticRendering()) {\n        return render()\n    }\n\n    const admRef = React.useRef<ObserverAdministration | null>(null)\n\n    if (!admRef.current) {\n        // First render\n        const adm: ObserverAdministration = {\n            reaction: null,\n            onStoreChange: null,\n            stateVersion: Symbol(),\n            name: baseComponentName,\n            subscribe(onStoreChange: () => void) {\n                // Do NOT access admRef here!\n                observerFinalizationRegistry.unregister(adm)\n                adm.onStoreChange = onStoreChange\n                if (!adm.reaction) {\n                    // We've lost our reaction and therefore all subscriptions, occurs when:\n                    // 1. Timer based finalization registry disposed reaction before component mounted.\n                    // 2. React \"re-mounts\" same component without calling render in between (typically <StrictMode>).\n                    // We have to recreate reaction and schedule re-render to recreate subscriptions,\n                    // even if state did not change.\n                    createReaction(adm)\n                    // `onStoreChange` won't force update if subsequent `getSnapshot` returns same value.\n                    // So we make sure that is not the case\n                    adm.stateVersion = Symbol()\n                }\n\n                return () => {\n                    // Do NOT access admRef here!\n                    adm.onStoreChange = null\n                    adm.reaction?.dispose()\n                    adm.reaction = null\n                }\n            },\n            getSnapshot() {\n                // Do NOT access admRef here!\n                return adm.stateVersion\n            }\n        }\n\n        admRef.current = adm\n    }\n\n    const adm = admRef.current!\n\n    if (!adm.reaction) {\n        // First render or reaction was disposed by registry before subscribe\n        createReaction(adm)\n        // StrictMode/ConcurrentMode/Suspense may mean that our component is\n        // rendered and abandoned multiple times, so we need to track leaked\n        // Reactions.\n        observerFinalizationRegistry.register(admRef, adm, adm)\n    }\n\n    React.useDebugValue(adm.reaction!, printDebugValue)\n\n    useSyncExternalStore(\n        // Both of these must be stable, otherwise it would keep resubscribing every render.\n        adm.subscribe,\n        adm.getSnapshot,\n        getServerSnapshot\n    )\n\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    let renderResult!: T\n    let exception\n    adm.reaction!.track(() => {\n        try {\n            renderResult = render()\n        } catch (e) {\n            exception = e\n        }\n    })\n\n    if (exception) {\n        throw exception // re-throw any exceptions caught during rendering\n    }\n\n    return renderResult\n}\n","import { forwardRef, memo } from \"react\"\n\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { useObserver } from \"./useObserver\"\n\nlet warnObserverOptionsDeprecated = true\n\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof forwardRef === \"function\" && forwardRef((props: any) => null)[\"$$typeof\"]\n\nconst ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof memo === \"function\" && memo((props: any) => null)[\"$$typeof\"]\n\nexport interface IObserverOptions {\n    readonly forwardRef?: boolean\n}\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefRenderFunction<TRef, P>,\n    options: IObserverOptions & { forwardRef: true }\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefExoticComponent<\n        React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n    >\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object>(\n    baseComponent: React.FunctionComponent<P>,\n    options?: IObserverOptions\n): React.FunctionComponent<P>\n\nexport function observer<\n    C extends React.FunctionComponent<any> | React.ForwardRefRenderFunction<any>,\n    Options extends IObserverOptions\n>(\n    baseComponent: C,\n    options?: Options\n): Options extends { forwardRef: true }\n    ? C extends React.ForwardRefRenderFunction<infer TRef, infer P>\n        ? C &\n              React.MemoExoticComponent<\n                  React.ForwardRefExoticComponent<\n                      React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n                  >\n              >\n        : never /* forwardRef set for a non forwarding component */\n    : C & { displayName: string }\n\n// n.b. base case is not used for actual typings or exported in the typing files\nexport function observer<P extends object, TRef = {}>(\n    baseComponent:\n        | React.ForwardRefRenderFunction<TRef, P>\n        | React.FunctionComponent<P>\n        | React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>,\n    // TODO remove in next major\n    options?: IObserverOptions\n) {\n    if (process.env.NODE_ENV !== \"production\" && warnObserverOptionsDeprecated && options) {\n        warnObserverOptionsDeprecated = false\n        console.warn(\n            `[mobx-react-lite] \\`observer(fn, { forwardRef: true })\\` is deprecated, use \\`observer(React.forwardRef(fn))\\``\n        )\n    }\n\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\n            `[mobx-react-lite] You are trying to use \\`observer\\` on a function component wrapped in either another \\`observer\\` or \\`React.memo\\`. The observer already applies 'React.memo' for you.`\n        )\n    }\n\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent\n    }\n\n    let useForwardRef = options?.forwardRef ?? false\n    let render = baseComponent\n\n    const baseComponentName = baseComponent.displayName || baseComponent.name\n\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true\n        render = baseComponent[\"render\"]\n        if (typeof render !== \"function\") {\n            throw new Error(\n                `[mobx-react-lite] \\`render\\` property of ForwardRef was not a function`\n            )\n        }\n    }\n\n    let observerComponent = (props: any, ref: React.Ref<TRef>) => {\n        return useObserver(() => render(props, ref), baseComponentName)\n    }\n\n    // Inherit original name and displayName, see #3438\n    ;(observerComponent as React.FunctionComponent).displayName = baseComponent.displayName\n    Object.defineProperty(observerComponent, \"name\", {\n        value: baseComponent.name,\n        writable: true,\n        configurable: true\n    })\n\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if ((baseComponent as any).contextTypes) {\n        ;(observerComponent as React.FunctionComponent).contextTypes = (\n            baseComponent as any\n        ).contextTypes\n    }\n\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = forwardRef(observerComponent)\n    }\n\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = memo(observerComponent)\n\n    copyStaticProperties(baseComponent, observerComponent)\n\n    if (\"production\" !== process.env.NODE_ENV) {\n        Object.defineProperty(observerComponent, \"contextTypes\", {\n            set() {\n                throw new Error(\n                    `[mobx-react-lite] \\`${\n                        this.displayName || this.type?.displayName || this.type?.name || \"Component\"\n                    }.contextTypes\\` must be set before applying \\`observer\\`.`\n                )\n            }\n        })\n    }\n\n    return observerComponent\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList: any = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n}\n\nfunction copyStaticProperties(base: any, target: any) {\n    Object.keys(base).forEach(key => {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n","import { useObserver } from \"./useObserver\"\n\ninterface IObserverProps {\n    children?(): React.ReactElement | null\n    render?(): React.ReactElement | null\n}\n\nfunction ObserverComponent({ children, render }: IObserverProps) {\n    const component = children || render\n    if (typeof component !== \"function\") {\n        return null\n    }\n    return useObserver(component)\n}\nif (\"production\" !== process.env.NODE_ENV) {\n    ObserverComponent.propTypes = {\n        children: ObserverPropsCheck,\n        render: ObserverPropsCheck\n    }\n}\nObserverComponent.displayName = \"Observer\"\n\nexport { ObserverComponent as Observer }\n\nfunction ObserverPropsCheck(\n    props: { [k: string]: any },\n    key: string,\n    componentName: string,\n    location: any,\n    propFullName: string\n) {\n    const extraKey = key === \"children\" ? \"render\" : \"children\"\n    const hasProp = typeof props[key] === \"function\"\n    const hasExtraProp = typeof props[extraKey] === \"function\"\n    if (hasProp && hasExtraProp) {\n        return new Error(\n            \"MobX Observer: Do not use children and render in the same time in`\" + componentName\n        )\n    }\n\n    if (hasProp || hasExtraProp) {\n        return null\n    }\n    return new Error(\n        \"Invalid prop `\" +\n            propFullName +\n            \"` of type `\" +\n            typeof props[key] +\n            \"` supplied to\" +\n            \" `\" +\n            componentName +\n            \"`, expected `function`.\"\n    )\n}\n","import { observable, AnnotationsMap } from \"mobx\"\nimport { useState } from \"react\"\n\nexport function useLocalObservable<TStore extends Record<string, any>>(\n    initializer: () => TStore,\n    annotations?: AnnotationsMap<TStore, never>\n): TStore {\n    return useState(() => observable(initializer(), annotations, { autoBind: true }))[0]\n}\n","import { useDeprecated } from \"./utils/utils\"\nimport { observable, runInAction } from \"mobx\"\nimport { useState } from \"react\"\n\nexport function useAsObservableSource<TSource extends object>(current: TSource): TSource {\n    if (\"production\" !== process.env.NODE_ENV)\n        useDeprecated(\n            \"[mobx-react-lite] 'useAsObservableSource' is deprecated, please store the values directly in an observable, for example by using 'useLocalObservable', and sync future updates using 'useEffect' when needed. See the README for examples.\"\n        )\n    const [res] = useState(() => observable(current, {}, { deep: false }))\n    runInAction(() => {\n        Object.assign(res, current)\n    })\n    return res\n}\n","import { observable } from \"mobx\"\nimport { useState } from \"react\"\n\nimport { useDeprecated } from \"./utils/utils\"\nimport { useAsObservableSource } from \"./useAsObservableSource\"\n\nexport function useLocalStore<TStore extends Record<string, any>>(initializer: () => TStore): TStore\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\n    initializer: (source: TSource) => TStore,\n    current: TSource\n): TStore\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\n    initializer: (source?: TSource) => TStore,\n    current?: TSource\n): TStore {\n    if (\"production\" !== process.env.NODE_ENV) {\n        useDeprecated(\n            \"[mobx-react-lite] 'useLocalStore' is deprecated, use 'useLocalObservable' instead.\"\n        )\n    }\n    const source = current && useAsObservableSource(current)\n    return useState(() => observable(initializer(source), undefined, { autoBind: true }))[0]\n}\n","import \"./utils/assertEnvironment\"\n\nimport { unstable_batchedUpdates as batch } from \"./utils/reactBatchedUpdates\"\nimport { observerBatching } from \"./utils/observerBatching\"\nimport { useDeprecated } from \"./utils/utils\"\nimport { useObserver as useObserverOriginal } from \"./useObserver\"\nimport { enableStaticRendering } from \"./staticRendering\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\n\nobserverBatching(batch)\n\nexport { isUsingStaticRendering, enableStaticRendering } from \"./staticRendering\"\nexport { observer, IObserverOptions } from \"./observer\"\nexport { Observer } from \"./ObserverComponent\"\nexport { useLocalObservable } from \"./useLocalObservable\"\nexport { useLocalStore } from \"./useLocalStore\"\nexport { useAsObservableSource } from \"./useAsObservableSource\"\n\nexport { observerFinalizationRegistry as _observerFinalizationRegistry }\nexport const clearTimers = observerFinalizationRegistry[\"finalizeAllImmediately\"] ?? (() => {})\n\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\n    if (\"production\" !== process.env.NODE_ENV) {\n        useDeprecated(\n            \"[mobx-react-lite] 'useObserver(fn)' is deprecated. Use `<Observer>{fn}</Observer>` instead, or wrap the entire component in `observer`.\"\n        )\n    }\n    return useObserverOriginal(fn, baseComponentName)\n}\n\nexport { isObserverBatched, observerBatching } from \"./utils/observerBatching\"\n\nexport function useStaticRendering(enable: boolean) {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\n            \"[mobx-react-lite] 'useStaticRendering' is deprecated, use 'enableStaticRendering' instead\"\n        )\n    }\n    enableStaticRendering(enable)\n}\n"],"names":["useState","makeObservable","configure","getDependencyTree","shimModule","require$$1","Reaction","useObserver","React","useSyncExternalStore","forwardRef","memo","observable","runInAction","batch","useObserverOriginal"],"mappings":"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","x_google_ignoreList":[6,7]}