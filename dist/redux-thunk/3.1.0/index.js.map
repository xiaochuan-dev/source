{"version":3,"file":"index.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;ACKA;;GAEG;AACH,SAAS,qBAAqB,CAI5B,aAA6B;IAC7B,gDAAgD;IAChD,0FAA0F;IAC1F,MAAM,UAAU,GACd,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,CAC3B,IAAI,CAAC,EAAE,CACP,MAAM,CAAC,EAAE;QACP,qFAAqF;QACrF,wEAAwE;QACxE,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE,CAAC;YACjC,mFAAmF;YACnF,OAAO,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,aAAa,CAAC;QAClD,CAAC;QAED,gEAAgE;QAChE,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACH,OAAO,UAAU;AACnB,CAAC;AAEM,MAAM,KAAK,GAAG,qBAAqB,EAAE;AAE5C,uEAAuE;AACvE,kEAAkE;AAC3D,MAAM,iBAAiB,GAAG,qBAAqB","sources":["webpack://ReduxThunk/webpack/universalModuleDefinition","webpack://ReduxThunk/webpack/bootstrap","webpack://ReduxThunk/webpack/runtime/define property getters","webpack://ReduxThunk/webpack/runtime/hasOwnProperty shorthand","webpack://ReduxThunk/webpack/runtime/make namespace object","webpack://ReduxThunk/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReduxThunk\"] = factory();\n\telse\n\t\troot[\"ReduxThunk\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import type { Action, AnyAction } from 'redux'\n\nimport type { ThunkMiddleware } from './types'\n\nexport type {\n  ThunkAction,\n  ThunkDispatch,\n  ThunkActionDispatch,\n  ThunkMiddleware\n} from './types'\n\n/** A function that accepts a potential \"extra argument\" value to be injected later,\n * and returns an instance of the thunk middleware that uses that value\n */\nfunction createThunkMiddleware<\n  State = any,\n  BasicAction extends Action = AnyAction,\n  ExtraThunkArg = undefined\n>(extraArgument?: ExtraThunkArg) {\n  // Standard Redux middleware definition pattern:\n  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware\n  const middleware: ThunkMiddleware<State, BasicAction, ExtraThunkArg> =\n    ({ dispatch, getState }) =>\n    next =>\n    action => {\n      // The thunk middleware looks for any functions that were passed to `store.dispatch`.\n      // If this \"action\" is really a function, call it and return the result.\n      if (typeof action === 'function') {\n        // Inject the store's `dispatch` and `getState` methods, as well as any \"extra arg\"\n        return action(dispatch, getState, extraArgument)\n      }\n\n      // Otherwise, pass the action down the middleware chain as usual\n      return next(action)\n    }\n  return middleware\n}\n\nexport const thunk = createThunkMiddleware()\n\n// Export the factory function so users can create a customized version\n// with whatever \"extra arg\" they want to inject into their thunks\nexport const withExtraArgument = createThunkMiddleware\n"],"names":[],"sourceRoot":""}