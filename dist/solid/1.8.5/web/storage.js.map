{"version":3,"file":"storage.js","sources":["../storage/storage.ts"],"sourcesContent":["import { AsyncLocalStorage } from \"node:async_hooks\";\nimport type { RequestEvent } from \"solid-js/web\";\nimport { isServer, RequestContext } from \"solid-js/web\";\n\n// using global on a symbol for locating it later and detaching for environments that don't support it.\nexport function provideRequestEvent<T extends RequestEvent, U>(init: T, cb: () => U): U {\n  if (!isServer) throw new Error(\"Attempting to use server context in non-server build\");\n  const ctx: AsyncLocalStorage<T> = ((globalThis as any)[RequestContext] =\n    (globalThis as any)[RequestContext] || new AsyncLocalStorage<T>());\n  return ctx.run(init, cb);\n}\n"],"names":["provideRequestEvent","init","cb","isServer","Error","ctx","globalThis","RequestContext","AsyncLocalStorage","run"],"mappings":";;;AAKO,SAASA,mBAAmBA,CAA4BC,IAAO,EAAEC,EAAW,EAAK;EACtF,IAAI,CAACC,QAAQ,EAAE,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC,CAAA;AACtF,EAAA,MAAMC,GAAyB,GAAKC,UAAU,CAASC,cAAc,CAAC,GACnED,UAAU,CAASC,cAAc,CAAC,IAAI,IAAIC,iBAAiB,EAAM,CAAA;AACpE,EAAA,OAAOH,GAAG,CAACI,GAAG,CAACR,IAAI,EAAEC,EAAE,CAAC,CAAA;AAC1B;;;;"}