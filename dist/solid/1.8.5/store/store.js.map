{"version":3,"file":"store.js","sources":["../src/store.ts","../src/mutable.ts","../src/modifiers.ts","../src/index.ts"],"sourcesContent":["import { getListener, batch, DEV, $PROXY, $TRACK, createSignal } from \"solid-js\";\n\nexport const $RAW = Symbol(\"store-raw\"),\n  $NODE = Symbol(\"store-node\"),\n  $HAS = Symbol(\"store-has\"),\n  $SELF = Symbol(\"store-self\");\n\n// debug hooks for devtools\nexport const DevHooks: { onStoreNodeUpdate: OnStoreNodeUpdate | null } = {\n  onStoreNodeUpdate: null\n};\n\ntype DataNode = {\n  (): any;\n  $(value?: any): void;\n};\ntype DataNodes = Record<PropertyKey, DataNode | undefined>;\n\nexport type OnStoreNodeUpdate = (\n  state: StoreNode,\n  property: PropertyKey,\n  value: StoreNode | NotWrappable,\n  prev: StoreNode | NotWrappable\n) => void;\n\nexport interface StoreNode {\n  [$NODE]?: DataNodes;\n  [key: PropertyKey]: any;\n}\n\nexport namespace SolidStore {\n  export interface Unwrappable {}\n}\nexport type NotWrappable =\n  | string\n  | number\n  | bigint\n  | symbol\n  | boolean\n  | Function\n  | null\n  | undefined\n  | SolidStore.Unwrappable[keyof SolidStore.Unwrappable];\nexport type Store<T> = T;\n\nfunction wrap<T extends StoreNode>(value: T): T {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, { value: (p = new Proxy(value, proxyTraps)) });\n    if (!Array.isArray(value)) {\n      const keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const prop = keys[i];\n        if (desc[prop].get) {\n          Object.defineProperty(value, prop, {\n            enumerable: desc[prop].enumerable,\n            get: desc[prop].get!.bind(p)\n          });\n        }\n      }\n    }\n  }\n  return p;\n}\n\nexport function isWrappable<T>(obj: T | NotWrappable): obj is T;\nexport function isWrappable(obj: any) {\n  let proto;\n  return (\n    obj != null &&\n    typeof obj === \"object\" &&\n    (obj[$PROXY] ||\n      !(proto = Object.getPrototypeOf(obj)) ||\n      proto === Object.prototype ||\n      Array.isArray(obj))\n  );\n}\n\n/**\n * Returns the underlying data in the store without a proxy.\n * @param item store proxy object\n * @example\n * ```js\n * const initial = {z...};\n * const [state, setState] = createStore(initial);\n * initial === state; // => false\n * initial === unwrap(state); // => true\n * ```\n */\nexport function unwrap<T>(item: T, set?: Set<unknown>): T;\nexport function unwrap<T>(item: any, set = new Set()): T {\n  let result, unwrapped, v, prop;\n  if ((result = item != null && item[$RAW])) return result;\n  if (!isWrappable(item) || set.has(item)) return item;\n\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item)) item = item.slice(0);\n    else set.add(item);\n    for (let i = 0, l = item.length; i < l; i++) {\n      v = item[i];\n      if ((unwrapped = unwrap(v, set)) !== v) item[i] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item)) item = Object.assign({}, item);\n    else set.add(item);\n    const keys = Object.keys(item),\n      desc = Object.getOwnPropertyDescriptors(item);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      prop = keys[i];\n      if (desc[prop].get) continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\n\nexport function getNodes(target: StoreNode, symbol: typeof $NODE | typeof $HAS): DataNodes {\n  let nodes = target[symbol];\n  if (!nodes)\n    Object.defineProperty(target, symbol, { value: (nodes = Object.create(null) as DataNodes) });\n  return nodes;\n}\n\nexport function getNode(nodes: DataNodes, property: PropertyKey, value?: any) {\n  if (nodes[property]) return nodes[property]!;\n  const [s, set] = createSignal<any>(value, {\n    equals: false,\n    internal: true\n  });\n  (s as DataNode).$ = set;\n  return (nodes[property] = s as DataNode);\n}\n\nexport function proxyDescriptor(target: StoreNode, property: PropertyKey) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || !desc.configurable || property === $PROXY || property === $NODE)\n    return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\n\nexport function trackSelf(target: StoreNode) {\n  getListener() && getNode(getNodes(target, $NODE), $SELF)();\n}\n\nexport function ownKeys(target: StoreNode) {\n  trackSelf(target);\n  return Reflect.ownKeys(target);\n}\n\nconst proxyTraps: ProxyHandler<StoreNode> = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getNodes(target, $NODE);\n    const tracked = nodes[property];\n    let value = tracked ? tracked() : target[property];\n    if (property === $NODE || property === $HAS || property === \"__proto__\") return value;\n\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      if (\n        getListener() &&\n        (typeof value !== \"function\" || target.hasOwnProperty(property)) &&\n        !(desc && desc.get)\n      )\n        value = getNode(nodes, property, value)();\n    }\n    return isWrappable(value) ? wrap(value) : value;\n  },\n\n  has(target, property) {\n    if (\n      property === $RAW ||\n      property === $PROXY ||\n      property === $TRACK ||\n      property === $NODE ||\n      property === $HAS ||\n      property === \"__proto__\"\n    )\n      return true;\n    getListener() && getNode(getNodes(target, $HAS), property)();\n    return property in target;\n  },\n\n  set() {\n    if (\"_SOLID_DEV_\") console.warn(\"Cannot mutate a Store directly\");\n    return true;\n  },\n\n  deleteProperty() {\n    if (\"_SOLID_DEV_\") console.warn(\"Cannot mutate a Store directly\");\n    return true;\n  },\n\n  ownKeys: ownKeys,\n\n  getOwnPropertyDescriptor: proxyDescriptor\n};\n\nexport function setProperty(\n  state: StoreNode,\n  property: PropertyKey,\n  value: any,\n  deleting: boolean = false\n): void {\n  if (!deleting && state[property] === value) return;\n  const prev = state[property],\n    len = state.length;\n\n  if (\"_SOLID_DEV_\")\n    DevHooks.onStoreNodeUpdate && DevHooks.onStoreNodeUpdate(state, property, value, prev);\n\n  if (value === undefined) {\n    delete state[property];\n    if (state[$HAS] && state[$HAS][property] && prev !== undefined) state[$HAS][property].$();\n  } else {\n    state[property] = value;\n    if (state[$HAS] && state[$HAS][property] && prev === undefined) state[$HAS][property].$();\n  }\n  let nodes = getNodes(state, $NODE),\n    node: DataNode | undefined;\n  if ((node = getNode(nodes, property, prev))) node.$(() => value);\n\n  if (Array.isArray(state) && state.length !== len) {\n    for (let i = state.length; i < len; i++) (node = nodes[i]) && node.$();\n    (node = getNode(nodes, \"length\", len)) && node.$(state.length);\n  }\n  (node = nodes[$SELF]) && node.$();\n}\n\nfunction mergeStoreNode(state: StoreNode, value: Partial<StoreNode>) {\n  const keys = Object.keys(value);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    setProperty(state, key, value[key]);\n  }\n}\n\nfunction updateArray(\n  current: StoreNode,\n  next: Array<any> | Record<string, any> | ((prev: StoreNode) => Array<any> | Record<string, any>)\n) {\n  if (typeof next === \"function\") next = next(current);\n  next = unwrap(next) as Array<any> | Record<string, any>;\n  if (Array.isArray(next)) {\n    if (current === next) return;\n    let i = 0,\n      len = next.length;\n    for (; i < len; i++) {\n      const value = next[i];\n      if (current[i] !== value) setProperty(current, i, value);\n    }\n    setProperty(current, \"length\", len);\n  } else mergeStoreNode(current, next);\n}\n\nexport function updatePath(current: StoreNode, path: any[], traversed: PropertyKey[] = []) {\n  let part,\n    prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part,\n      isArray = Array.isArray(current);\n\n    if (Array.isArray(part)) {\n      // Ex. update('data', [2, 23], 'label', l => l + ' !!!');\n      for (let i = 0; i < part.length; i++) {\n        updatePath(current, [part[i]].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      // Ex. update('data', i => i.id === 42, 'label', l => l + ' !!!');\n      for (let i = 0; i < current.length; i++) {\n        if (part(current[i], i)) updatePath(current, [i].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      // Ex. update('data', { from: 3, to: 12, by: 2 }, 'label', l => l + ' !!!');\n      const { from = 0, to = current.length - 1, by = 1 } = part;\n      for (let i = from; i <= to; i += by) {\n        updatePath(current, [i].concat(path), traversed);\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev) return;\n  }\n  if (part === undefined && value == undefined) return;\n  value = unwrap(value);\n  if (part === undefined || (isWrappable(prev) && isWrappable(value) && !Array.isArray(value))) {\n    mergeStoreNode(prev, value);\n  } else setProperty(current, part, value);\n}\n\n/** @deprecated */\nexport type DeepReadonly<T> = 0 extends 1 & T\n  ? T\n  : T extends NotWrappable\n  ? T\n  : {\n      readonly [K in keyof T]: DeepReadonly<T[K]>;\n    };\n/** @deprecated */\nexport type DeepMutable<T> = 0 extends 1 & T\n  ? T\n  : T extends NotWrappable\n  ? T\n  : {\n      -readonly [K in keyof T]: DeepMutable<T[K]>;\n    };\n\nexport type CustomPartial<T> = T extends readonly unknown[]\n  ? \"0\" extends keyof T\n    ? { [K in Extract<keyof T, `${number}`>]?: T[K] }\n    : { [x: number]: T[number] }\n  : Partial<T>;\n\nexport type PickMutable<T> = {\n  [K in keyof T as (<U>() => U extends { [V in K]: T[V] } ? 1 : 2) extends <U>() => U extends {\n    -readonly [V in K]: T[V];\n  }\n    ? 1\n    : 2\n    ? K\n    : never]: T[K];\n};\n\nexport type StorePathRange = { from?: number; to?: number; by?: number };\n\nexport type ArrayFilterFn<T> = (item: T, index: number) => boolean;\n\nexport type StoreSetter<T, U extends PropertyKey[] = []> =\n  | T\n  | CustomPartial<T>\n  | ((prevState: T, traversed: U) => T | CustomPartial<T>);\n\nexport type Part<T, K extends KeyOf<T> = KeyOf<T>> =\n  | K\n  | ([K] extends [never] ? never : readonly K[])\n  | ([T] extends [readonly unknown[]] ? ArrayFilterFn<T[number]> | StorePathRange : never);\n\n// shortcut to avoid writing `Exclude<T, NotWrappable>` too many times\ntype W<T> = Exclude<T, NotWrappable>;\n\n// specially handle keyof to avoid errors with arrays and any\ntype KeyOf<T> = number extends keyof T // have to check this otherwise ts won't allow KeyOf<T> to index T\n  ? 0 extends 1 & T // if it's any just return keyof T\n    ? keyof T\n    : [T] extends [never]\n    ? never // keyof never is PropertyKey, which number extends. this must go before\n    : // checking [T] extends [readonly unknown[]] because never extends everything\n    [T] extends [readonly unknown[]]\n    ? number // it's an array or tuple; exclude the non-number properties\n    : keyof T // it's something which contains an index signature for strings or numbers\n  : keyof T;\n\ntype MutableKeyOf<T> = KeyOf<T> & keyof PickMutable<T>;\n\n// rest must specify at least one (additional) key, followed by a StoreSetter if the key is mutable.\ntype Rest<T, U extends PropertyKey[], K extends KeyOf<T> = KeyOf<T>> = [T] extends [never]\n  ? never\n  : K extends MutableKeyOf<T>\n  ? [Part<T, K>, ...RestSetterOrContinue<T[K], [K, ...U]>]\n  : K extends KeyOf<T>\n  ? [Part<T, K>, ...RestContinue<T[K], [K, ...U]>]\n  : never;\n\ntype RestContinue<T, U extends PropertyKey[]> = 0 extends 1 & T\n  ? [...Part<any>[], StoreSetter<any, PropertyKey[]>]\n  : Rest<W<T>, U>;\n\ntype RestSetterOrContinue<T, U extends PropertyKey[]> = [StoreSetter<T, U>] | RestContinue<T, U>;\n\nexport interface SetStoreFunction<T> {\n  <\n    K1 extends KeyOf<W<T>>,\n    K2 extends KeyOf<W<W<T>[K1]>>,\n    K3 extends KeyOf<W<W<W<T>[K1]>[K2]>>,\n    K4 extends KeyOf<W<W<W<W<T>[K1]>[K2]>[K3]>>,\n    K5 extends KeyOf<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>>,\n    K6 extends KeyOf<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>>,\n    K7 extends MutableKeyOf<W<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>[K6]>>\n  >(\n    k1: Part<W<T>, K1>,\n    k2: Part<W<W<T>[K1]>, K2>,\n    k3: Part<W<W<W<T>[K1]>[K2]>, K3>,\n    k4: Part<W<W<W<W<T>[K1]>[K2]>[K3]>, K4>,\n    k5: Part<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>, K5>,\n    k6: Part<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>, K6>,\n    k7: Part<W<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>[K6]>, K7>,\n    setter: StoreSetter<\n      W<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>[K6]>[K7],\n      [K7, K6, K5, K4, K3, K2, K1]\n    >\n  ): void;\n  <\n    K1 extends KeyOf<W<T>>,\n    K2 extends KeyOf<W<W<T>[K1]>>,\n    K3 extends KeyOf<W<W<W<T>[K1]>[K2]>>,\n    K4 extends KeyOf<W<W<W<W<T>[K1]>[K2]>[K3]>>,\n    K5 extends KeyOf<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>>,\n    K6 extends MutableKeyOf<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>>\n  >(\n    k1: Part<W<T>, K1>,\n    k2: Part<W<W<T>[K1]>, K2>,\n    k3: Part<W<W<W<T>[K1]>[K2]>, K3>,\n    k4: Part<W<W<W<W<T>[K1]>[K2]>[K3]>, K4>,\n    k5: Part<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>, K5>,\n    k6: Part<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>, K6>,\n    setter: StoreSetter<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>[K6], [K6, K5, K4, K3, K2, K1]>\n  ): void;\n  <\n    K1 extends KeyOf<W<T>>,\n    K2 extends KeyOf<W<W<T>[K1]>>,\n    K3 extends KeyOf<W<W<W<T>[K1]>[K2]>>,\n    K4 extends KeyOf<W<W<W<W<T>[K1]>[K2]>[K3]>>,\n    K5 extends MutableKeyOf<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>>\n  >(\n    k1: Part<W<T>, K1>,\n    k2: Part<W<W<T>[K1]>, K2>,\n    k3: Part<W<W<W<T>[K1]>[K2]>, K3>,\n    k4: Part<W<W<W<W<T>[K1]>[K2]>[K3]>, K4>,\n    k5: Part<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>, K5>,\n    setter: StoreSetter<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5], [K5, K4, K3, K2, K1]>\n  ): void;\n  <\n    K1 extends KeyOf<W<T>>,\n    K2 extends KeyOf<W<W<T>[K1]>>,\n    K3 extends KeyOf<W<W<W<T>[K1]>[K2]>>,\n    K4 extends MutableKeyOf<W<W<W<W<T>[K1]>[K2]>[K3]>>\n  >(\n    k1: Part<W<T>, K1>,\n    k2: Part<W<W<T>[K1]>, K2>,\n    k3: Part<W<W<W<T>[K1]>[K2]>, K3>,\n    k4: Part<W<W<W<W<T>[K1]>[K2]>[K3]>, K4>,\n    setter: StoreSetter<W<W<W<W<T>[K1]>[K2]>[K3]>[K4], [K4, K3, K2, K1]>\n  ): void;\n  <\n    K1 extends KeyOf<W<T>>,\n    K2 extends KeyOf<W<W<T>[K1]>>,\n    K3 extends MutableKeyOf<W<W<W<T>[K1]>[K2]>>\n  >(\n    k1: Part<W<T>, K1>,\n    k2: Part<W<W<T>[K1]>, K2>,\n    k3: Part<W<W<W<T>[K1]>[K2]>, K3>,\n    setter: StoreSetter<W<W<W<T>[K1]>[K2]>[K3], [K3, K2, K1]>\n  ): void;\n  <K1 extends KeyOf<W<T>>, K2 extends MutableKeyOf<W<W<T>[K1]>>>(\n    k1: Part<W<T>, K1>,\n    k2: Part<W<W<T>[K1]>, K2>,\n    setter: StoreSetter<W<W<T>[K1]>[K2], [K2, K1]>\n  ): void;\n  <K1 extends MutableKeyOf<W<T>>>(k1: Part<W<T>, K1>, setter: StoreSetter<W<T>[K1], [K1]>): void;\n  (setter: StoreSetter<T, []>): void;\n  // fallback\n  <\n    K1 extends KeyOf<W<T>>,\n    K2 extends KeyOf<W<W<T>[K1]>>,\n    K3 extends KeyOf<W<W<W<T>[K1]>[K2]>>,\n    K4 extends KeyOf<W<W<W<W<T>[K1]>[K2]>[K3]>>,\n    K5 extends KeyOf<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>>,\n    K6 extends KeyOf<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>>,\n    K7 extends KeyOf<W<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>[K6]>>\n  >(\n    k1: Part<W<T>, K1>,\n    k2: Part<W<W<T>[K1]>, K2>,\n    k3: Part<W<W<W<T>[K1]>[K2]>, K3>,\n    k4: Part<W<W<W<W<T>[K1]>[K2]>[K3]>, K4>,\n    k5: Part<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>, K5>,\n    k6: Part<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>, K6>,\n    k7: Part<W<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>[K6]>, K7>,\n    ...rest: Rest<W<W<W<W<W<W<W<T>[K1]>[K2]>[K3]>[K4]>[K5]>[K6]>[K7], [K7, K6, K5, K4, K3, K2, K1]>\n  ): void;\n}\n\n/**\n * creates a reactive store that can be read through a proxy object and written with a setter function\n *\n * @description https://www.solidjs.com/docs/latest/api#createstore\n */\nexport function createStore<T extends object = {}>(\n  ...[store, options]: {} extends T\n    ? [store?: T | Store<T>, options?: { name?: string }]\n    : [store: T | Store<T>, options?: { name?: string }]\n): [get: Store<T>, set: SetStoreFunction<T>] {\n  const unwrappedStore = unwrap((store || {}) as T);\n  const isArray = Array.isArray(unwrappedStore);\n  if (\"_SOLID_DEV_\" && typeof unwrappedStore !== \"object\" && typeof unwrappedStore !== \"function\")\n    throw new Error(\n      `Unexpected type ${typeof unwrappedStore} received when initializing 'createStore'. Expected an object.`\n    );\n  const wrappedStore = wrap(unwrappedStore);\n  if (\"_SOLID_DEV_\") DEV!.registerGraph({ value: unwrappedStore, name: options && options.name });\n  function setStore(...args: any[]): void {\n    batch(() => {\n      isArray && args.length === 1\n        ? updateArray(unwrappedStore, args[0])\n        : updatePath(unwrappedStore, args);\n    });\n  }\n\n  return [wrappedStore, setStore];\n}\n","import { batch, getListener, DEV, $PROXY, $TRACK } from \"solid-js\";\nimport {\n  unwrap,\n  isWrappable,\n  getNodes,\n  trackSelf,\n  getNode,\n  $RAW,\n  $NODE,\n  $HAS,\n  StoreNode,\n  setProperty,\n  ownKeys\n} from \"./store.js\";\n\nfunction proxyDescriptor(target: StoreNode, property: PropertyKey) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (\n    !desc ||\n    desc.get ||\n    desc.set ||\n    !desc.configurable ||\n    property === $PROXY ||\n    property === $NODE\n  )\n    return desc;\n\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  desc.set = v => (target[$PROXY][property] = v);\n\n  return desc;\n}\n\nconst proxyTraps: ProxyHandler<StoreNode> = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getNodes(target, $NODE);\n    const tracked = nodes[property];\n    let value = tracked ? tracked() : target[property];\n    if (property === $NODE || property === $HAS || property === \"__proto__\") return value;\n\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      const isFunction = typeof value === \"function\";\n      if (getListener() && (!isFunction || target.hasOwnProperty(property)) && !(desc && desc.get))\n        value = getNode(nodes, property, value)();\n      else if (value != null && isFunction && value === Array.prototype[property as any]) {\n        return (...args: unknown[]) =>\n          batch(() => Array.prototype[property as any].apply(receiver, args));\n      }\n    }\n    return isWrappable(value) ? wrap(value) : value;\n  },\n\n  has(target, property) {\n    if (\n      property === $RAW ||\n      property === $PROXY ||\n      property === $TRACK ||\n      property === $NODE ||\n      property === $HAS ||\n      property === \"__proto__\"\n    )\n      return true;\n    getListener() && getNode(getNodes(target, $HAS), property)();\n    return property in target;\n  },\n\n  set(target, property, value) {\n    batch(() => setProperty(target, property, unwrap(value)));\n    return true;\n  },\n\n  deleteProperty(target, property) {\n    batch(() => setProperty(target, property, undefined, true));\n    return true;\n  },\n\n  ownKeys: ownKeys,\n\n  getOwnPropertyDescriptor: proxyDescriptor\n};\n\nfunction wrap<T extends StoreNode>(value: T): T {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, { value: (p = new Proxy(value, proxyTraps)) });\n    const keys = Object.keys(value),\n      desc = Object.getOwnPropertyDescriptors(value);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (desc[prop].get) {\n        const get = desc[prop].get!.bind(p);\n        Object.defineProperty(value, prop, {\n          get\n        });\n      }\n      if (desc[prop].set) {\n        const og = desc[prop].set!,\n          set = (v: T[keyof T]) => batch(() => og.call(p, v));\n        Object.defineProperty(value, prop, {\n          set\n        });\n      }\n    }\n  }\n  return p;\n}\n\nexport function createMutable<T extends StoreNode>(state: T, options?: { name?: string }): T {\n  const unwrappedStore = unwrap(state || {});\n  if (\"_SOLID_DEV_\" && typeof unwrappedStore !== \"object\" && typeof unwrappedStore !== \"function\")\n    throw new Error(\n      `Unexpected type ${typeof unwrappedStore} received when initializing 'createMutable'. Expected an object.`\n    );\n\n  const wrappedStore = wrap(unwrappedStore);\n  if (\"_SOLID_DEV_\") DEV!.registerGraph({ value: unwrappedStore, name: options && options.name });\n  return wrappedStore;\n}\n\nexport function modifyMutable<T>(state: T, modifier: (state: T) => T) {\n  batch(() => modifier(unwrap(state)));\n}\n","import { setProperty, unwrap, isWrappable, StoreNode, $RAW } from \"./store.js\";\n\nconst $ROOT = Symbol(\"store-root\");\n\nexport type ReconcileOptions = {\n  key?: string | null;\n  merge?: boolean;\n};\n\nfunction applyState(\n  target: any,\n  parent: any,\n  property: PropertyKey,\n  merge: boolean | undefined,\n  key: string | null\n) {\n  const previous = parent[property];\n  if (target === previous) return;\n  if (\n    property !== $ROOT &&\n    (!isWrappable(target) || !isWrappable(previous) || (key && target[key] !== previous[key]))\n  ) {\n    setProperty(parent, property, target);\n    return;\n  }\n\n  if (Array.isArray(target)) {\n    if (\n      target.length &&\n      previous.length &&\n      (!merge || (key && target[0] && target[0][key] != null))\n    ) {\n      let i, j, start, end, newEnd, item, newIndicesNext, keyVal;\n      // common prefix\n      for (\n        start = 0, end = Math.min(previous.length, target.length);\n        start < end &&\n        (previous[start] === target[start] ||\n          (key && previous[start] && target[start] && previous[start][key] === target[start][key]));\n        start++\n      ) {\n        applyState(target[start], previous, start, merge, key);\n      }\n\n      const temp = new Array(target.length),\n        newIndices = new Map();\n      // common suffix\n      for (\n        end = previous.length - 1, newEnd = target.length - 1;\n        end >= start &&\n        newEnd >= start &&\n        (previous[end] === target[newEnd] ||\n          (key && previous[start] && target[start] && previous[end][key] === target[newEnd][key]));\n        end--, newEnd--\n      ) {\n        temp[newEnd] = previous[end];\n      }\n\n      // insert any remaining updates and remove any remaining nodes and we're done\n      if (start > newEnd || start > end) {\n        for (j = start; j <= newEnd; j++) setProperty(previous, j, target[j]);\n        for (; j < target.length; j++) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        }\n        if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n        return;\n      }\n\n      // prepare a map of all indices in target\n      newIndicesNext = new Array(newEnd + 1);\n      for (j = newEnd; j >= start; j--) {\n        item = target[j];\n        keyVal = key && item ? item[key] : item;\n        i = newIndices.get(keyVal);\n        newIndicesNext[j] = i === undefined ? -1 : i;\n        newIndices.set(keyVal, j);\n      }\n      // step through all old items to check reuse\n      for (i = start; i <= end; i++) {\n        item = previous[i];\n        keyVal = key && item ? item[key] : item;\n        j = newIndices.get(keyVal);\n        if (j !== undefined && j !== -1) {\n          temp[j] = previous[i];\n          j = newIndicesNext[j];\n          newIndices.set(keyVal, j);\n        }\n      }\n      // set all the new values\n      for (j = start; j < target.length; j++) {\n        if (j in temp) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        } else setProperty(previous, j, target[j]);\n      }\n    } else {\n      for (let i = 0, len = target.length; i < len; i++) {\n        applyState(target[i], previous, i, merge, key);\n      }\n    }\n    if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n    return;\n  }\n\n  const targetKeys = Object.keys(target);\n  for (let i = 0, len = targetKeys.length; i < len; i++) {\n    applyState(target[targetKeys[i]], previous, targetKeys[i], merge, key);\n  }\n  const previousKeys = Object.keys(previous);\n  for (let i = 0, len = previousKeys.length; i < len; i++) {\n    if (target[previousKeys[i]] === undefined) setProperty(previous, previousKeys[i], undefined);\n  }\n}\n\n// Diff method for setStore\nexport function reconcile<T extends U, U>(\n  value: T,\n  options: ReconcileOptions = {}\n): (state: U) => T {\n  const { merge, key = \"id\" } = options,\n    v = unwrap(value);\n  return state => {\n    if (!isWrappable(state) || !isWrappable(v)) return v;\n    const res = applyState(v, { [$ROOT]: state }, $ROOT, merge, key);\n    return res === undefined ? (state as T) : res;\n  };\n}\n\nconst producers = new WeakMap();\nconst setterTraps: ProxyHandler<StoreNode> = {\n  get(target, property): any {\n    if (property === $RAW) return target;\n    const value = target[property];\n    let proxy;\n    return isWrappable(value)\n      ? producers.get(value) ||\n          (producers.set(value, (proxy = new Proxy(value, setterTraps))), proxy)\n      : value;\n  },\n\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined, true);\n    return true;\n  }\n};\n\n// Immer style mutation style\nexport function produce<T>(fn: (state: T) => void): (state: T) => T {\n  return state => {\n    if (isWrappable(state)) {\n      let proxy;\n      if (!(proxy = producers.get(state as Record<keyof T, T[keyof T]>))) {\n        producers.set(\n          state as Record<keyof T, T[keyof T]>,\n          (proxy = new Proxy(state as Extract<T, object>, setterTraps))\n        );\n      }\n      fn(proxy);\n    }\n    return state;\n  };\n}\n","export { $RAW, createStore, unwrap } from \"./store.js\";\nexport type {\n  ArrayFilterFn,\n  DeepMutable,\n  DeepReadonly,\n  NotWrappable,\n  Part,\n  SetStoreFunction,\n  SolidStore,\n  Store,\n  StoreNode,\n  StorePathRange,\n  StoreSetter\n} from \"./store.js\";\nexport * from \"./mutable.js\";\nexport * from \"./modifiers.js\";\n\n// dev\nimport { $NODE, isWrappable, DevHooks } from \"./store.js\";\nexport const DEV = \"_SOLID_DEV_\" ? ({ $NODE, isWrappable, hooks: DevHooks } as const) : undefined;\n"],"names":["$RAW","Symbol","$NODE","$HAS","$SELF","wrap","value","p","$PROXY","Object","defineProperty","Proxy","proxyTraps","Array","isArray","keys","desc","getOwnPropertyDescriptors","i","l","length","prop","get","enumerable","bind","isWrappable","obj","proto","getPrototypeOf","prototype","unwrap","item","set","Set","result","unwrapped","v","has","isFrozen","slice","add","assign","getNodes","target","symbol","nodes","create","getNode","property","s","createSignal","equals","internal","$","proxyDescriptor","Reflect","getOwnPropertyDescriptor","configurable","writable","trackSelf","getListener","ownKeys","receiver","$TRACK","tracked","hasOwnProperty","deleteProperty","setProperty","state","deleting","prev","len","undefined","node","mergeStoreNode","key","updateArray","current","next","updatePath","path","traversed","part","shift","partType","concat","from","to","by","createStore","store","options","unwrappedStore","wrappedStore","setStore","args","batch","isFunction","apply","og","call","createMutable","modifyMutable","modifier","$ROOT","applyState","parent","merge","previous","j","start","end","newEnd","newIndicesNext","keyVal","Math","min","temp","newIndices","Map","targetKeys","previousKeys","reconcile","res","producers","WeakMap","setterTraps","proxy","produce","fn","DEV"],"mappings":"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"}