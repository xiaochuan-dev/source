{"version":3,"file":"html.js","sources":["../../../../node_modules/.pnpm/lit-dom-expressions@0.37.8/node_modules/lit-dom-expressions/dist/lit-dom-expressions.js","../src/index.ts"],"sourcesContent":["// Based on package html-parse-stringify2\n// Expanded to handle webcomponents\n\nconst tagRE = /(?:<!--[\\S\\s]*?-->|<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>)/g;\n\n// See https://regexr.com/6p8p0\nconst attrRE = /(?:\\s(?<boolean>[^/\\s><=]+?)(?=[\\s/>]))|(?:(?<name>\\S+?)(?:\\s*=\\s*(?:(['\"])(?<quotedValue>[\\s\\S]*?)\\3|(?<unquotedValue>[^\\s>]+))))/g;\n//                   ^ capture group 1: boolean attribute name (attributes without values)\n//                                                         ^ capture group 2: non-boolean attribute name\n//                                                                                         ^ capture group 4: non-boolean attribute value with quotes\n//                                                                                                                    ^ capture group 5: non-boolean attribute value without quotes\n// TODO\n//  - \"/\" values in the middle of the HTML tag (they don't self-close the element, but skipped)\n//  - What other cases?\n\n\nconst lookup = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  menuitem: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true\n};\n\nfunction parseTag( /**@type {string}*/tag) {\n  const res = {\n    type: 'tag',\n    name: '',\n    voidElement: false,\n    attrs: [],\n    children: []\n  };\n  const tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/);\n  if (tagMatch) {\n    res.name = tagMatch[1];\n    if (\n    lookup[tagMatch[1].toLowerCase()] ||\n    tag.charAt(tag.length - 2) === '/')\n    {\n      res.voidElement = true;\n    }\n\n    // handle comment tag\n    if (res.name.startsWith('!--')) {\n      const endIndex = tag.indexOf('-->');\n      return {\n        type: 'comment',\n        comment: endIndex !== -1 ? tag.slice(4, endIndex) : ''\n      };\n    }\n  }\n\n  const reg = new RegExp(attrRE);\n\n  for (const match of tag.matchAll(reg)) {\n    // TODO named groups method not working yet, groups is undefined in tests (maybe not out in Node.js yet)\n    // const groups = match.groups\n    // res.attrs[groups.boolean || groups.name] = groups.value1 || groups.value2 || \"\"\n    if ((match[1] || match[2]).startsWith('use:')) {\n      res.attrs.push({ type: 'directive', name: match[1] || match[2], value: match[4] || match[5] || '' });\n    } else {\n      res.attrs.push({ type: 'attr', name: match[1] || match[2], value: match[4] || match[5] || '' });\n    }\n  }\n\n  return res;\n}\n// common logic for pushing a child node onto a list\nfunction pushTextNode(list, html, start) {\n  // calculate correct end of the content slice in case there's\n  // no tag after the text node.\n  const end = html.indexOf('<', start);\n  const content = html.slice(start, end === -1 ? void 0 : end);\n  if (!/^\\s*$/.test(content)) {\n    list.push({\n      type: 'text',\n      content: content\n    });\n  }\n}\nfunction pushCommentNode(list, tag) {\n  // calculate correct end of the content slice in case there's\n  // no tag after the text node.\n  const content = tag.replace('<!--', '').replace('-->', '');\n  if (!/^\\s*$/.test(content)) {\n    list.push({\n      type: 'comment',\n      content: content\n    });\n  }\n}\n\nfunction parse(html) {\n  const result = [];\n  let current = void 0;\n  let level = -1;\n  const arr = [];\n  const byTag = {};\n  html.replace(tagRE, (tag, index) => {\n    const isOpen = tag.charAt(1) !== '/';\n    const isComment = tag.slice(0, 4) === '<!--';\n    const start = index + tag.length;\n    const nextChar = html.charAt(start);\n    let parent = void 0;\n    if (isOpen && !isComment) {\n      level++;\n      current = parseTag(tag);\n      if (!current.voidElement && nextChar && nextChar !== '<') {\n        pushTextNode(current.children, html, start);\n      }\n      byTag[current.tagName] = current;\n      // if we're at root, push new base node\n      if (level === 0) {\n        result.push(current);\n      }\n      parent = arr[level - 1];\n      if (parent) {\n        parent.children.push(current);\n      }\n      arr[level] = current;\n    }\n    if (isComment) {\n      if (level < 0) {\n        pushCommentNode(result, tag);\n      } else {\n        pushCommentNode(arr[level].children, tag);\n      }\n    }\n    if (isComment || !isOpen || current.voidElement) {\n      if (!isComment) {\n        level--;\n      }\n      if (nextChar !== '<' && nextChar) {\n        // trailing text node\n        // if we're at the root, push a base text node. otherwise add as\n        // a child to the current node.\n        parent = level === -1 ? result : arr[level].children;\n        pushTextNode(parent, html, start);\n      }\n    }\n  });\n  return result;\n}\n\n// Based on package html-parse-stringify2\n// Expanded to handle webcomponents\n\n/**\n * @param {import('../types/index').IDom['attrs']} attrs \n * @returns {string}\n */\nfunction attrString(attrs) {\n  const buff = [];\n  for (const attr of attrs) {\n    buff.push(attr.name + '=\"' + attr.value.replace(/\"/g, '&quot;') + '\"');\n  }\n  if (!buff.length) {\n    return '';\n  }\n  return ' ' + buff.join(' ');\n}\n/**\n * @param {string} buff \n * @param {import('../types/index').IDom} doc \n * @returns {string}\n */\nfunction stringifier(buff, doc) {\n  switch (doc.type) {\n    case 'text':\n      return buff + doc.content;\n    case 'tag':\n      buff += '<' + doc.name + (doc.attrs ? attrString(doc.attrs) : '') + (doc.voidElement ? '/>' : '>');\n      if (doc.voidElement) {\n        return buff;\n      }\n      return buff + doc.children.reduce(stringifier, '') + '</' + doc.name + '>';\n    case 'comment':\n      return buff += '<!--' + doc.content + '-->';}\n\n}\n/**\n * @param {import('../types/index').IDom[]} doc \n * @returns {string}\n */\nfunction stringify(doc) {\n  return doc.reduce(function (token, rootEl) {\n    return token + stringifier('', rootEl);\n  }, '');\n}\n\nconst cache = new Map();\n// Based on https://github.com/WebReflection/domtagger/blob/master/esm/sanitizer.js\nconst VOID_ELEMENTS = /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i;\nconst spaces = \" \\\\f\\\\n\\\\r\\\\t\";\nconst almostEverything = \"[^\" + spaces + \"\\\\/>\\\"'=]+\";\nconst attrName = \"[ \" + spaces + \"]+(?:use:<!--#-->|\" + almostEverything + ')';\nconst tagName = \"<([A-Za-z$#]+[A-Za-z0-9:_-]*)((?:\";\nconst attrPartials =\n\"(?:\\\\s*=\\\\s*(?:'[^']*?'|\\\"[^\\\"]*?\\\"|\\\\([^)]*?\\\\)|<[^>]*?>|\" + almostEverything + \"))?)\";\n\nconst attrSeeker = new RegExp(tagName + attrName + attrPartials + \"+)([ \" + spaces + \"]*/?>)\", \"g\");\nconst findAttributes = new RegExp(\n\"(\" + attrName + \"\\\\s*=\\\\s*)(<!--#-->|['\\\"(]([\\\\w\\\\s]*<!--#-->[\\\\w\\\\s]*)*['\\\")])\",\n\"gi\");\n\nconst selfClosing = new RegExp(tagName + attrName + attrPartials + \"*)([ \" + spaces + \"]*/>)\", \"g\");\nconst marker = \"<!--#-->\";\nconst reservedNameSpaces = new Set([\"class\", \"on\", \"oncapture\", \"style\", \"use\", \"prop\", \"attr\"]);\n\nfunction attrReplacer($0, $1, $2, $3) {\n  return \"<\" + $1 + $2.replace(findAttributes, replaceAttributes) + $3;\n}\n\nfunction replaceAttributes($0, $1, $2) {\n  return $1.replace(/<!--#-->/g, \"###\") + ($2[0] === '\"' || $2[0] === \"'\" ? $2.replace(/<!--#-->/g, \"###\") : '\"###\"');\n}\n\nfunction fullClosing($0, $1, $2) {\n  return VOID_ELEMENTS.test($1) ? $0 : \"<\" + $1 + $2 + \"></\" + $1 + \">\";\n}\n\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\n\nfunction parseDirective(name, value, tag, options) {\n  if (name === 'use:###' && value === '###') {\n    const count = options.counter++;\n    options.exprs.push(\n    `typeof exprs[${count}] === \"function\" ? r.use(exprs[${count}], ${tag}, exprs[${options.counter++}]) : (()=>{throw new Error(\"use:### must be a function\")})()`);\n\n  } else {\n    throw new Error(`Not support syntax ${name} must be use:{function}`);\n  }\n}\n\nfunction createHTML(r, { delegateEvents = true, functionBuilder = (...args) => new Function(...args) } = {}) {\n  let uuid = 1;\n  r.wrapProps = (props) => {\n    const d = Object.getOwnPropertyDescriptors(props);\n    for (const k in d) {\n      if (typeof d[k].value === \"function\" && !d[k].value.length) r.dynamicProperty(props, k);\n    }\n    return props;\n  };\n\n  function createTemplate(statics, opt) {\n    let i = 0,\n      markup = \"\";\n    for (; i < statics.length - 1; i++) {\n      markup = markup + statics[i] + \"<!--#-->\";\n    }\n    markup = markup + statics[i];\n    const replaceList = [\n    [selfClosing, fullClosing],\n    [/<(<!--#-->)/g, \"<###\"],\n    [/\\.\\.\\.(<!--#-->)/g, \"###\"],\n    [attrSeeker, attrReplacer],\n    [/>\\n+\\s*/g, \">\"],\n    [/\\n+\\s*</g, \"<\"],\n    [/\\s+</g, \" <\"],\n    [/>\\s+/g, \"> \"]];\n\n    markup = replaceList.reduce((acc, x) => {\n      // if (typeof x[1] === 'string') {\n      //   return acc.replace(x[0], x[1]);\n      // }\n      // @ts-expect-error - TS doesn't like the replace function, you can uncomment the above code to see that everything is fine\n      return acc.replace(x[0], x[1]);\n    }, markup);\n    const pars = parse(markup);\n    const [html, code] = parseTemplate(pars, opt.funcBuilder),\n      templates = [];\n\n    for (let i = 0; i < html.length; i++) {\n      templates.push(document.createElement(\"template\"));\n      templates[i].innerHTML = html[i];\n      const nomarkers = templates[i].content.querySelectorAll(\"script,style\");\n      for (let j = 0; j < nomarkers.length; j++) {\n        const d = nomarkers[j].firstChild?.data || \"\";\n        if (d.indexOf(marker) > -1) {\n          const parts = d.split(marker).reduce((memo, p, i) => {\n            i && memo.push(\"\");\n            memo.push(p);\n            return memo;\n          }, []);\n          nomarkers[i].firstChild.replaceWith(...parts);\n        }\n      }\n    }\n    templates[0].create = code;\n    cache.set(statics, templates);\n    return templates;\n  }\n\n  function parseKeyValue(\n  node,\n  tag,\n  name,\n  value,\n  isSVG,\n  isCE,\n  options)\n  {\n    let expr =\n      value === \"###\" ?\n      `!doNotWrap ? exprs[${options.counter}]() : exprs[${options.counter++}]` :\n      value.\n      split(\"###\").\n      map((v, i) =>\n      i ?\n      ` + (typeof exprs[${options.counter}] === \"function\" ? exprs[${\n      options.counter\n      }]() : exprs[${options.counter++}]) + \"${v}\"` :\n      `\"${v}\"`).\n\n      join(\"\"),\n      parts,\n      namespace;\n\n    if ((parts = name.split(\":\")) && parts[1] && reservedNameSpaces.has(parts[0])) {\n      name = parts[1];\n      namespace = parts[0];\n    }\n    const isChildProp = r.ChildProperties.has(name);\n    const isProp = r.Properties.has(name);\n\n    if (name === \"style\") {\n      const prev = `_$v${uuid++}`;\n      options.decl.push(`${prev}={}`);\n      options.exprs.push(`r.style(${tag},${expr},${prev})`);\n    } else if (name === \"classList\") {\n      const prev = `_$v${uuid++}`;\n      options.decl.push(`${prev}={}`);\n      options.exprs.push(`r.classList(${tag},${expr},${prev})`);\n    } else if (\n    namespace !== \"attr\" && (\n    isChildProp || !isSVG && (r.getPropAlias(name, node.name.toUpperCase()) || isProp) || isCE || namespace === \"prop\"))\n    {\n      if (isCE && !isChildProp && !isProp && namespace !== \"prop\") name = toPropertyName(name);\n      options.exprs.push(`${tag}.${r.getPropAlias(name, node.name.toUpperCase()) || name} = ${expr}`);\n    } else {\n      const ns = isSVG && name.indexOf(\":\") > -1 && r.SVGNamespace[name.split(\":\")[0]];\n      if (ns) options.exprs.push(`r.setAttributeNS(${tag},\"${ns}\",\"${name}\",${expr})`);else\n      options.exprs.push(`r.setAttribute(${tag},\"${r.Aliases[name] || name}\",${expr})`);\n    }\n  }\n\n  function parseAttribute(\n  node,\n  tag,\n  name,\n  value,\n  isSVG,\n  isCE,\n  options)\n  {\n    if (name.slice(0, 2) === \"on\") {\n      if (!name.includes(\":\")) {\n        const lc = name.slice(2).toLowerCase();\n        const delegate = delegateEvents && r.DelegatedEvents.has(lc);\n        options.exprs.push(\n        `r.addEventListener(${tag},\"${lc}\",exprs[${options.counter++}],${delegate})`);\n\n        delegate && options.delegatedEvents.add(lc);\n      } else {\n        let capture = name.startsWith(\"oncapture:\");\n        options.exprs.push(\n        `${tag}.addEventListener(\"${name.slice(capture ? 10 : 3)}\",exprs[${options.counter++}]${\n        capture ? \",true\" : \"\"\n        })`);\n\n      }\n    } else if (name === \"ref\") {\n      options.exprs.push(`exprs[${options.counter++}](${tag})`);\n    } else {\n      const childOptions = Object.assign({}, options, { exprs: [] }),\n        count = options.counter;\n      parseKeyValue(node, tag, name, value, isSVG, isCE, childOptions);\n      options.decl.push(\n      `_fn${count} = (${value === \"###\" ? \"doNotWrap\" : \"\"}) => {\\n${childOptions.exprs.join(\n      \";\\n\")\n      };\\n}`);\n\n      if (value === \"###\") {\n        options.exprs.push(\n        `typeof exprs[${count}] === \"function\" ? r.effect(_fn${count}) : _fn${count}(true)`);\n\n      } else {\n        let check = \"\";\n        for (let i = count; i < childOptions.counter; i++) {\n          i !== count && (check += \" || \");\n          check += `typeof exprs[${i}] === \"function\"`;\n        }\n        options.exprs.push(check + ` ? r.effect(_fn${count}) : _fn${count}()`);\n      }\n      options.counter = childOptions.counter;\n      options.wrap = false;\n    }\n  }\n\n  function processChildren(node, options) {\n    const childOptions = Object.assign({}, options, {\n      first: true,\n      multi: false,\n      parent: options.path\n    });\n    if (node.children.length > 1) {\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (\n        child.type === \"comment\" && child.content === \"#\" ||\n        child.type === \"tag\" && child.name === \"###\")\n        {\n          childOptions.multi = true;\n          break;\n        }\n      }\n    }\n    let i = 0;\n    while (i < node.children.length) {\n      const child = node.children[i];\n      if (child.name === \"###\") {\n        if (childOptions.multi) {\n          node.children[i] = { type: \"comment\", content: \"#\" };\n          i++;\n        } else node.children.splice(i, 1);\n        processComponent(child, childOptions);\n        continue;\n      }\n      parseNode(child, childOptions);\n      if (!childOptions.multi && child.type === \"comment\" && child.content === \"#\") node.children.splice(i, 1);else\n      i++;\n    }\n    options.counter = childOptions.counter;\n    options.templateId = childOptions.templateId;\n    options.hasCustomElement = options.hasCustomElement || childOptions.hasCustomElement;\n  }\n\n  function processComponentProps(propGroups) {\n    let result = [];\n    for (const props of propGroups) {\n      if (Array.isArray(props)) {\n        if (!props.length) continue;\n        result.push(`r.wrapProps({${props.join(\",\") || \"\"}})`);\n      } else result.push(props);\n    }\n    return result.length > 1 ? `r.mergeProps(${result.join(\",\")})` : result[0];\n  }\n\n  function processComponent(node, options) {\n    let props = [];\n    const keys = Object.keys(node.attrs),\n      propGroups = [props],\n      componentIdentifier = options.counter++;\n\n    for (let i = 0; i < keys.length; i++) {\n      const { type, name, value } = node.attrs[i];\n      if (type === 'attr') {\n        if (name === \"###\") {\n          propGroups.push(`exprs[${options.counter++}]`);\n          propGroups.push(props = []);\n        } else if (value === \"###\") {\n          props.push(`${name}: exprs[${options.counter++}]`);\n        } else props.push(`${name}: \"${value}\"`);\n      } else if (type === 'directive') {\n        const tag = `_$el${uuid++}`;\n        const topDecl = !options.decl.length;\n        options.decl.push(\n        topDecl ? \"\" : `${tag} = ${options.path}.${options.first ? \"firstChild\" : \"nextSibling\"}`);\n\n        parseDirective(name, value, tag, options);\n      }\n    }\n    if (\n    node.children.length === 1 &&\n    node.children[0].type === \"comment\" &&\n    node.children[0].content === \"#\")\n    {\n      props.push(`children: () => exprs[${options.counter++}]`);\n    } else if (node.children.length) {\n      const children = { type: \"fragment\", children: node.children },\n        childOptions = Object.assign({}, options, {\n          first: true,\n          decl: [],\n          exprs: [],\n          parent: false\n        });\n      parseNode(children, childOptions);\n      props.push(`children: () => { ${childOptions.exprs.join(\";\\n\")}}`);\n      options.templateId = childOptions.templateId;\n      options.counter = childOptions.counter;\n    }\n    let tag;\n    if (options.multi) {\n      tag = `_$el${uuid++}`;\n      options.decl.push(`${tag} = ${options.path}.${options.first ? \"firstChild\" : \"nextSibling\"}`);\n    }\n\n    if (options.parent)\n    options.exprs.push(\n    `r.insert(${\n    options.parent\n    }, r.createComponent(exprs[${componentIdentifier}],${processComponentProps(propGroups)})${\n    tag ? `, ${tag}` : \"\"\n    })`);else\n\n\n    options.exprs.push(\n    `${\n    options.fragment ? \"\" : \"return \"\n    }r.createComponent(exprs[${componentIdentifier}],${processComponentProps(propGroups)})`);\n\n    options.path = tag;\n    options.first = false;\n  }\n\n  function parseNode(node, options) {\n    if (node.type === \"fragment\") {\n      const parts = [];\n      node.children.forEach((child) => {\n        if (child.type === \"tag\") {\n          if (child.name === \"###\") {\n            const childOptions = Object.assign({}, options, {\n              first: true,\n              fragment: true,\n              decl: [],\n              exprs: []\n            });\n            processComponent(child, childOptions);\n            parts.push(childOptions.exprs[0]);\n            options.counter = childOptions.counter;\n            options.templateId = childOptions.templateId;\n            return;\n          }\n          options.templateId++;\n          const id = uuid;\n          const childOptions = Object.assign({}, options, {\n            first: true,\n            decl: [],\n            exprs: []\n          });\n          options.templateNodes.push([child]);\n          parseNode(child, childOptions);\n          parts.push(\n          `function() { ${\n          childOptions.decl.join(\",\\n\") +\n          \";\\n\" +\n          childOptions.exprs.join(\";\\n\") +\n          `;\\nreturn _$el${id};\\n`\n          }}()`);\n\n          options.counter = childOptions.counter;\n          options.templateId = childOptions.templateId;\n        } else if (child.type === \"text\") {\n          parts.push(`\"${child.content}\"`);\n        } else if (child.type === \"comment\") {\n          if (child.content === \"#\") parts.push(`exprs[${options.counter++}]`);else\n          if (child.content) {\n            for (let i = 0; i < child.content.split(\"###\").length - 1; i++) {\n              parts.push(`exprs[${options.counter++}]`);\n            }\n          }\n        }\n      });\n      options.exprs.push(`return [${parts.join(\", \\n\")}]`);\n    } else if (node.type === \"tag\") {\n      const tag = `_$el${uuid++}`;\n      const topDecl = !options.decl.length;\n      const templateId = options.templateId;\n      options.decl.push(\n      topDecl ? \"\" : `${tag} = ${options.path}.${options.first ? \"firstChild\" : \"nextSibling\"}`);\n\n      const isSVG = r.SVGElements.has(node.name);\n      const isCE = node.name.includes(\"-\");\n      options.hasCustomElement = isCE;\n      if (node.attrs.some((e) => e.name === \"###\")) {\n        const spreadArgs = [];\n        let current = \"\";\n        const newAttrs = [];\n        for (let i = 0; i < node.attrs.length; i++) {\n          const { type, name, value } = node.attrs[i];\n          if (type === 'attr') {\n            if (value.includes(\"###\")) {\n              let count = options.counter++;\n              current += `${name}: ${\n              name !== \"ref\" ? `typeof exprs[${count}] === \"function\" ? exprs[${count}]() : ` : \"\"\n              }exprs[${count}],`;\n            } else if (name === \"###\") {\n              if (current.length) {\n                spreadArgs.push(`()=>({${current}})`);\n                current = \"\";\n              }\n              spreadArgs.push(`exprs[${options.counter++}]`);\n            } else {\n              newAttrs.push(node.attrs[i]);\n            }\n          } else if (type === 'directive') {\n            parseDirective(name, value, tag, options);\n          }\n        }\n        node.attrs = newAttrs;\n        if (current.length) {\n          spreadArgs.push(`()=>({${current}})`);\n        }\n        options.exprs.push(\n        `r.spread(${tag},${\n        spreadArgs.length === 1 ?\n        `typeof ${spreadArgs[0]} === \"function\" ? r.mergeProps(${spreadArgs[0]}) : ${spreadArgs[0]}` :\n        `r.mergeProps(${spreadArgs.join(\",\")})`\n        },${isSVG},${!!node.children.length})`);\n\n      } else {\n        for (let i = 0; i < node.attrs.length; i++) {\n          const { type, name, value } = node.attrs[i];\n          if (type === 'directive') {\n            parseDirective(name, value, tag, options);\n            node.attrs.splice(i, 1);\n            i--;\n          } else if (type === \"attr\") {\n            if (value.includes(\"###\")) {\n              node.attrs.splice(i, 1);\n              i--;\n              parseAttribute(node, tag, name, value, isSVG, isCE, options);\n            }\n          }\n        }\n      }\n      options.path = tag;\n      options.first = false;\n      processChildren(node, options);\n      if (topDecl) {\n        options.decl[0] = options.hasCustomElement ?\n        `const ${tag} = r.untrack(() => document.importNode(tmpls[${templateId}].content.firstChild, true))` :\n        `const ${tag} = tmpls[${templateId}].content.firstChild.cloneNode(true)`;\n      }\n    } else if (node.type === \"text\") {\n      const tag = `_$el${uuid++}`;\n      options.decl.push(`${tag} = ${options.path}.${options.first ? \"firstChild\" : \"nextSibling\"}`);\n      options.path = tag;\n      options.first = false;\n    } else if (node.type === \"comment\") {\n      const tag = `_$el${uuid++}`;\n      options.decl.push(`${tag} = ${options.path}.${options.first ? \"firstChild\" : \"nextSibling\"}`);\n      if (node.content === \"#\") {\n        if (options.multi) {\n          options.exprs.push(`r.insert(${options.parent}, exprs[${options.counter++}], ${tag})`);\n        } else options.exprs.push(`r.insert(${options.parent}, exprs[${options.counter++}])`);\n      }\n      options.path = tag;\n      options.first = false;\n    }\n  }\n\n  function parseTemplate(nodes, funcBuilder) {\n    const options = {\n        path: \"\",\n        decl: [],\n        exprs: [],\n        delegatedEvents: new Set(),\n        counter: 0,\n        first: true,\n        multi: false,\n        templateId: 0,\n        templateNodes: []\n      },\n      id = uuid,\n      origNodes = nodes;\n    let toplevel;\n    if (nodes.length > 1) {\n      nodes = [{ type: \"fragment\", children: nodes }];\n    }\n\n    if (nodes[0].name === \"###\") {\n      toplevel = true;\n      processComponent(nodes[0], options);\n    } else parseNode(nodes[0], options);\n    r.delegateEvents(Array.from(options.delegatedEvents));\n    const templateNodes = [origNodes].concat(options.templateNodes);\n    return [\n    templateNodes.map((t) => stringify(t)),\n    funcBuilder(\n    \"tmpls\",\n    \"exprs\",\n    \"r\",\n    options.decl.join(\",\\n\") +\n    \";\\n\" +\n    options.exprs.join(\";\\n\") + (\n    toplevel ? \"\" : `;\\nreturn _$el${id};\\n`))];\n\n\n  }\n\n  function html(statics, ...args) {\n    const templates = cache.get(statics) || createTemplate(statics, { funcBuilder: functionBuilder });\n    return templates[0].create(templates, args, r);\n  }\n\n  return html;\n}\n\nexport { createHTML };\n","import { createHTML } from \"./lit\";\nimport type { HTMLTag } from \"./lit\";\nimport {\n  effect,\n  style,\n  insert,\n  untrack,\n  spread,\n  createComponent,\n  delegateEvents,\n  classList,\n  dynamicProperty,\n  mergeProps,\n  setAttribute,\n  setAttributeNS,\n  addEventListener,\n  Aliases,\n  getPropAlias,\n  Properties,\n  ChildProperties,\n  DelegatedEvents,\n  SVGElements,\n  SVGNamespace\n} from \"solid-js/web\";\n\nconst html: HTMLTag = createHTML({\n  effect,\n  style,\n  insert,\n  untrack,\n  spread,\n  createComponent,\n  delegateEvents,\n  classList,\n  mergeProps,\n  dynamicProperty,\n  setAttribute,\n  setAttributeNS,\n  addEventListener,\n  Aliases,\n  getPropAlias,\n  Properties,\n  ChildProperties,\n  DelegatedEvents,\n  SVGElements,\n  SVGNamespace\n});\n\nexport default html;\n"],"names":["tagRE","attrRE","lookup","area","base","br","col","embed","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr","parseTag","tag","res","type","name","voidElement","attrs","children","tagMatch","match","toLowerCase","charAt","length","startsWith","endIndex","indexOf","comment","slice","reg","RegExp","matchAll","push","value","pushTextNode","list","html","start","end","content","test","pushCommentNode","replace","parse","result","current","level","arr","byTag","index","isOpen","isComment","nextChar","parent","tagName","attrString","buff","attr","join","stringifier","doc","reduce","stringify","token","rootEl","cache","Map","VOID_ELEMENTS","spaces","almostEverything","attrName","attrPartials","attrSeeker","findAttributes","selfClosing","marker","reservedNameSpaces","Set","attrReplacer","$0","$1","$2","$3","replaceAttributes","fullClosing","toPropertyName","_","w","toUpperCase","parseDirective","options","count","counter","exprs","Error","createHTML","r","delegateEvents","functionBuilder","args","Function","uuid","wrapProps","props","d","Object","getOwnPropertyDescriptors","k","dynamicProperty","createTemplate","statics","opt","i","markup","replaceList","acc","x","pars","code","parseTemplate","funcBuilder","templates","document","createElement","innerHTML","nomarkers","querySelectorAll","j","firstChild","data","parts","split","memo","p","replaceWith","create","set","parseKeyValue","node","isSVG","isCE","expr","map","v","namespace","has","isChildProp","ChildProperties","isProp","Properties","prev","decl","getPropAlias","ns","SVGNamespace","Aliases","parseAttribute","includes","lc","delegate","DelegatedEvents","delegatedEvents","add","capture","childOptions","assign","check","wrap","processChildren","first","multi","path","child","splice","processComponent","parseNode","templateId","hasCustomElement","processComponentProps","propGroups","Array","isArray","keys","componentIdentifier","topDecl","fragment","forEach","id","templateNodes","SVGElements","some","e","spreadArgs","newAttrs","nodes","origNodes","toplevel","from","concat","t","get","effect","style","insert","untrack","spread","createComponent","classList","mergeProps","setAttribute","setAttributeNS","addEventListener"],"mappings":"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","x_google_ignoreList":[0]}