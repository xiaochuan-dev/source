{"version":3,"file":"index.esm.js","sources":["../../src/_internal/utils/shared.ts","../../src/_internal/utils/hash.ts","../../src/_internal/utils/global-state.ts","../../src/_internal/utils/helper.ts","../../src/_internal/utils/web-preset.ts","../../src/_internal/utils/env.ts","../../src/_internal/utils/serialize.ts","../../src/_internal/utils/timestamp.ts","../../src/_internal/events.ts","../../src/_internal/utils/mutate.ts","../../src/_internal/utils/cache.ts","../../src/_internal/utils/config.ts","../../src/_internal/utils/merge-config.ts","../../src/_internal/utils/config-context.ts","../../src/_internal/constants.ts","../../src/_internal/utils/devtools.ts","../../src/_internal/utils/normalize-args.ts","../../src/_internal/utils/use-swr-config.ts","../../src/_internal/utils/preload.ts","../../src/_internal/utils/middleware-preset.ts","../../src/_internal/utils/resolve-args.ts","../../src/_internal/utils/subscribe-key.ts","../../src/_internal/utils/with-middleware.ts","../../src/_internal/index.ts"],"sourcesContent":["// Shared state between server components and client components\n\nexport const noop = () => {}\n\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nexport const UNDEFINED = (/*#__NOINLINE__*/ noop()) as undefined\n\nexport const OBJECT = Object\n\nexport const isUndefined = (v: any): v is undefined => v === UNDEFINED\nexport const isFunction = <\n  T extends (...args: any[]) => any = (...args: any[]) => any\n>(\n  v: unknown\n): v is T => typeof v == 'function'\nexport const mergeObjects = (a: any, b?: any) => ({ ...a, ...b })\nexport const isPromiseLike = (x: unknown): x is PromiseLike<unknown> =>\n  isFunction((x as any).then)\n","import { OBJECT, isUndefined } from './shared'\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap<object, number | string>()\n\n// counter of the key\nlet counter = 0\n\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nexport const stableHash = (arg: any): string => {\n  const type = typeof arg\n  const constructor = arg && arg.constructor\n  const isDate = constructor == Date\n\n  let result: any\n  let index: any\n\n  if (OBJECT(arg) === arg && !isDate && constructor != RegExp) {\n    // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n    // If it's already hashed, directly return the result.\n    result = table.get(arg)\n    if (result) return result\n\n    // Store the hash first for circular reference detection before entering the\n    // recursive `stableHash` calls.\n    // For other objects like set and map, we use this id directly as the hash.\n    result = ++counter + '~'\n    table.set(arg, result)\n\n    if (constructor == Array) {\n      // Array.\n      result = '@'\n      for (index = 0; index < arg.length; index++) {\n        result += stableHash(arg[index]) + ','\n      }\n      table.set(arg, result)\n    }\n    if (constructor == OBJECT) {\n      // Object, sort keys.\n      result = '#'\n      const keys = OBJECT.keys(arg).sort()\n      while (!isUndefined((index = keys.pop() as string))) {\n        if (!isUndefined(arg[index])) {\n          result += index + ':' + stableHash(arg[index]) + ','\n        }\n      }\n      table.set(arg, result)\n    }\n  } else {\n    result = isDate\n      ? arg.toJSON()\n      : type == 'symbol'\n      ? arg.toString()\n      : type == 'string'\n      ? JSON.stringify(arg)\n      : '' + arg\n  }\n\n  return result\n}\n","import type { Cache, GlobalState } from '../types'\n\n// Global state used to deduplicate requests and store listeners\nexport const SWRGlobalState = new WeakMap<Cache, GlobalState>()\n","import type { Cache, State, GlobalState } from '../types'\nimport { SWRGlobalState } from './global-state'\nimport { isUndefined, mergeObjects } from './shared'\n\nconst EMPTY_CACHE = {}\nconst INITIAL_CACHE: Record<string, any> = {}\n\nconst STR_UNDEFINED = 'undefined'\n\n// NOTE: Use the function to guarantee it's re-evaluated between jsdom and node runtime for tests.\nexport const isWindowDefined = typeof window != STR_UNDEFINED\nexport const isDocumentDefined = typeof document != STR_UNDEFINED\nexport const hasRequestAnimationFrame = () =>\n  isWindowDefined && typeof window['requestAnimationFrame'] != STR_UNDEFINED\n\nexport const createCacheHelper = <Data = any, T = State<Data, any>>(\n  cache: Cache,\n  key: string | undefined\n) => {\n  const state = SWRGlobalState.get(cache) as GlobalState\n  return [\n    // Getter\n    () => ((!isUndefined(key) && cache.get(key)) || EMPTY_CACHE) as T,\n    // Setter\n    (info: T) => {\n      if (!isUndefined(key)) {\n        const prev = cache.get(key)\n\n        // Before writing to the store, we keep the value in the initial cache\n        // if it's not there yet.\n        if (!(key in INITIAL_CACHE)) {\n          INITIAL_CACHE[key] = prev\n        }\n\n        state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE)\n      }\n    },\n    // Subscriber\n    state[6],\n    // Get server cache snapshot\n    () => {\n      if (!isUndefined(key)) {\n        // If the cache was updated on the client, we return the stored initial value.\n        if (key in INITIAL_CACHE) return INITIAL_CACHE[key]\n      }\n\n      // If we haven't done any client-side updates, we return the current value.\n      return ((!isUndefined(key) && cache.get(key)) || EMPTY_CACHE) as T\n    }\n  ] as const\n}\n\n// export { UNDEFINED, OBJECT, isUndefined, isFunction, mergeObjects, isPromiseLike }\n","import type { ProviderConfiguration } from '../types'\nimport { isWindowDefined, isDocumentDefined } from './helper'\nimport { isUndefined, noop } from './shared'\n\n/**\n * Due to the bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a workaround, we always assume it's online on the first load, and change\n * the status upon `online` or `offline` events.\n */\nlet online = true\nconst isOnline = () => online\n\n// For node and React Native, `add/removeEventListener` doesn't exist on window.\nconst [onWindowEvent, offWindowEvent] =\n  isWindowDefined && window.addEventListener\n    ? [\n        window.addEventListener.bind(window),\n        window.removeEventListener.bind(window)\n      ]\n    : [noop, noop]\n\nconst isVisible = () => {\n  const visibilityState = isDocumentDefined && document.visibilityState\n  return isUndefined(visibilityState) || visibilityState !== 'hidden'\n}\n\nconst initFocus = (callback: () => void) => {\n  // focus revalidate\n  if (isDocumentDefined) {\n    document.addEventListener('visibilitychange', callback)\n  }\n  onWindowEvent('focus', callback)\n  return () => {\n    if (isDocumentDefined) {\n      document.removeEventListener('visibilitychange', callback)\n    }\n    offWindowEvent('focus', callback)\n  }\n}\n\nconst initReconnect = (callback: () => void) => {\n  // revalidate on reconnected\n  const onOnline = () => {\n    online = true\n    callback()\n  }\n  // nothing to revalidate, just update the status\n  const onOffline = () => {\n    online = false\n  }\n  onWindowEvent('online', onOnline)\n  onWindowEvent('offline', onOffline)\n  return () => {\n    offWindowEvent('online', onOnline)\n    offWindowEvent('offline', onOffline)\n  }\n}\n\nexport const preset = {\n  isOnline,\n  isVisible\n} as const\n\nexport const defaultConfigOptions: ProviderConfiguration = {\n  initFocus,\n  initReconnect\n}\n","import React, { useEffect, useLayoutEffect } from 'react'\nimport { hasRequestAnimationFrame, isWindowDefined } from './helper'\n\nexport const IS_REACT_LEGACY = !React.useId\n\nexport const IS_SERVER = !isWindowDefined || 'Deno' in window\n\n// Polyfill requestAnimationFrame\nexport const rAF = (\n  f: (...args: any[]) => void\n): number | ReturnType<typeof setTimeout> =>\n  hasRequestAnimationFrame()\n    ? window['requestAnimationFrame'](f)\n    : setTimeout(f, 1)\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nexport const useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect\n\n// This assignment is to extend the Navigator type to use effectiveType.\nconst navigatorConnection =\n  typeof navigator !== 'undefined' &&\n  (\n    navigator as Navigator & {\n      connection?: {\n        effectiveType: string\n        saveData: boolean\n      }\n    }\n  ).connection\n\n// Adjust the config based on slow connection status (<= 70Kbps).\nexport const slowConnection =\n  !IS_SERVER &&\n  navigatorConnection &&\n  (['slow-2g', '2g'].includes(navigatorConnection.effectiveType) ||\n    navigatorConnection.saveData)\n","import { stableHash } from './hash'\nimport { isFunction } from './shared'\n\nimport type { Key, Arguments } from '../types'\n\nexport const serialize = (key: Key): [string, Arguments] => {\n  if (isFunction(key)) {\n    try {\n      key = key()\n    } catch (err) {\n      // dependencies not ready\n      key = ''\n    }\n  }\n\n  // Use the original key as the argument of fetcher. This can be a string or an\n  // array of values.\n  const args = key\n\n  // If key is not falsy, or not an empty array, hash it.\n  key =\n    typeof key == 'string'\n      ? key\n      : (Array.isArray(key) ? key.length : key)\n      ? stableHash(key)\n      : ''\n\n  return [key, args]\n}\n","// Global timestamp.\nlet __timestamp = 0\n\nexport const getTimestamp = () => ++__timestamp\n","export const FOCUS_EVENT = 0\nexport const RECONNECT_EVENT = 1\nexport const MUTATE_EVENT = 2\nexport const ERROR_REVALIDATE_EVENT = 3\n","import { serialize } from './serialize'\nimport { createCacheHelper } from './helper'\nimport {\n  isFunction,\n  isUndefined,\n  UNDEFINED,\n  mergeObjects,\n  isPromiseLike\n} from './shared'\nimport { SWRGlobalState } from './global-state'\nimport { getTimestamp } from './timestamp'\nimport * as revalidateEvents from '../events'\nimport type {\n  Cache,\n  MutatorCallback,\n  MutatorOptions,\n  GlobalState,\n  State,\n  Arguments,\n  Key\n} from '../types'\n\ntype KeyFilter = (key?: Arguments) => boolean\ntype MutateState<Data> = State<Data, any> & {\n  // The previously committed data.\n  _c?: Data\n}\n\nexport async function internalMutate<Data>(\n  cache: Cache,\n  _key: KeyFilter,\n  _data?: Data | Promise<Data | undefined> | MutatorCallback<Data>,\n  _opts?: boolean | MutatorOptions<Data>\n): Promise<Array<Data | undefined>>\nexport async function internalMutate<Data>(\n  cache: Cache,\n  _key: Arguments,\n  _data?: Data | Promise<Data | undefined> | MutatorCallback<Data>,\n  _opts?: boolean | MutatorOptions<Data>\n): Promise<Data | undefined>\nexport async function internalMutate<Data>(\n  ...args: [\n    cache: Cache,\n    _key: KeyFilter | Arguments,\n    _data?: Data | Promise<Data | undefined> | MutatorCallback<Data>,\n    _opts?: boolean | MutatorOptions<Data>\n  ]\n): Promise<any> {\n  const [cache, _key, _data, _opts] = args\n\n  // When passing as a boolean, it's explicitly used to disable/enable\n  // revalidation.\n  const options = mergeObjects(\n    { populateCache: true, throwOnError: true },\n    typeof _opts === 'boolean' ? { revalidate: _opts } : _opts || {}\n  )\n\n  let populateCache = options.populateCache\n\n  const rollbackOnErrorOption = options.rollbackOnError\n  let optimisticData = options.optimisticData\n\n  const rollbackOnError = (error: unknown): boolean => {\n    return typeof rollbackOnErrorOption === 'function'\n      ? rollbackOnErrorOption(error)\n      : rollbackOnErrorOption !== false\n  }\n  const throwOnError = options.throwOnError\n\n  // If the second argument is a key filter, return the mutation results for all\n  // filtered keys.\n  if (isFunction(_key)) {\n    const keyFilter = _key\n    const matchedKeys: Key[] = []\n    const it = cache.keys()\n    for (const key of it) {\n      if (\n        // Skip the special useSWRInfinite and useSWRSubscription keys.\n        !/^\\$(inf|sub)\\$/.test(key) &&\n        keyFilter((cache.get(key) as { _k: Arguments })._k)\n      ) {\n        matchedKeys.push(key)\n      }\n    }\n    return Promise.all(matchedKeys.map(mutateByKey))\n  }\n\n  return mutateByKey(_key)\n\n  async function mutateByKey(_k: Key): Promise<Data | undefined> {\n    // Serialize key\n    const [key] = serialize(_k)\n    if (!key) return\n    const [get, set] = createCacheHelper<Data, MutateState<Data>>(cache, key)\n    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(\n      cache\n    ) as GlobalState\n\n    const startRevalidate = () => {\n      const revalidators = EVENT_REVALIDATORS[key]\n      const revalidate = isFunction(options.revalidate)\n        ? options.revalidate(get().data, _k)\n        : options.revalidate !== false\n      if (revalidate) {\n        // Invalidate the key by deleting the concurrent request markers so new\n        // requests will not be deduped.\n        delete FETCH[key]\n        delete PRELOAD[key]\n        if (revalidators && revalidators[0]) {\n          return revalidators[0](revalidateEvents.MUTATE_EVENT).then(\n            () => get().data\n          )\n        }\n      }\n      return get().data\n    }\n\n    // If there is no new data provided, revalidate the key with current state.\n    if (args.length < 3) {\n      // Revalidate and broadcast state.\n      return startRevalidate()\n    }\n\n    let data: any = _data\n    let error: unknown\n\n    // Update global timestamps.\n    const beforeMutationTs = getTimestamp()\n    MUTATION[key] = [beforeMutationTs, 0]\n\n    const hasOptimisticData = !isUndefined(optimisticData)\n    const state = get()\n\n    // `displayedData` is the current value on screen. It could be the optimistic value\n    // that is going to be overridden by a `committedData`, or get reverted back.\n    // `committedData` is the validated value that comes from a fetch or mutation.\n    const displayedData = state.data\n    const currentData = state._c\n    const committedData = isUndefined(currentData) ? displayedData : currentData\n\n    // Do optimistic data update.\n    if (hasOptimisticData) {\n      optimisticData = isFunction(optimisticData)\n        ? optimisticData(committedData, displayedData)\n        : optimisticData\n\n      // When we set optimistic data, backup the current committedData data in `_c`.\n      set({ data: optimisticData, _c: committedData })\n    }\n\n    if (isFunction(data)) {\n      // `data` is a function, call it passing current cache value.\n      try {\n        data = (data as MutatorCallback<Data>)(committedData)\n      } catch (err) {\n        // If it throws an error synchronously, we shouldn't update the cache.\n        error = err\n      }\n    }\n\n    // `data` is a promise/thenable, resolve the final data first.\n    if (data && isPromiseLike(data)) {\n      // This means that the mutation is async, we need to check timestamps to\n      // avoid race conditions.\n      data = await (data as Promise<Data>).catch(err => {\n        error = err\n      })\n\n      // Check if other mutations have occurred since we've started this mutation.\n      // If there's a race we don't update cache or broadcast the change,\n      // just return the data.\n      if (beforeMutationTs !== MUTATION[key][0]) {\n        if (error) throw error\n        return data\n      } else if (error && hasOptimisticData && rollbackOnError(error)) {\n        // Rollback. Always populate the cache in this case but without\n        // transforming the data.\n        populateCache = true\n\n        // Reset data to be the latest committed data, and clear the `_c` value.\n        set({ data: committedData, _c: UNDEFINED })\n      }\n    }\n\n    // If we should write back the cache after request.\n    if (populateCache) {\n      if (!error) {\n        // Transform the result into data.\n        if (isFunction(populateCache)) {\n          const populateCachedData = populateCache(data, committedData)\n          set({ data: populateCachedData, error: UNDEFINED, _c: UNDEFINED })\n        } else {\n          // Only update cached data and reset the error if there's no error. Data can be `undefined` here.\n          set({ data, error: UNDEFINED, _c: UNDEFINED })\n        }\n      }\n    }\n\n    // Reset the timestamp to mark the mutation has ended.\n    MUTATION[key][1] = getTimestamp()\n\n    // Update existing SWR Hooks' internal states:\n    Promise.resolve(startRevalidate()).then(() => {\n      // The mutation and revalidation are ended, we can clear it since the data is\n      // not an optimistic value anymore.\n      set({ _c: UNDEFINED })\n    })\n\n    // Throw error or return data\n    if (error) {\n      if (throwOnError) throw error\n      return\n    }\n    return data\n  }\n}\n","import { defaultConfigOptions } from './web-preset'\nimport { IS_SERVER } from './env'\nimport { UNDEFINED, mergeObjects, noop } from './shared'\nimport { internalMutate } from './mutate'\nimport { SWRGlobalState } from './global-state'\nimport * as revalidateEvents from '../events'\n\nimport type {\n  Cache,\n  ScopedMutator,\n  RevalidateEvent,\n  RevalidateCallback,\n  ProviderConfiguration,\n  GlobalState\n} from '../types'\n\nconst revalidateAllKeys = (\n  revalidators: Record<string, RevalidateCallback[]>,\n  type: RevalidateEvent\n) => {\n  for (const key in revalidators) {\n    if (revalidators[key][0]) revalidators[key][0](type)\n  }\n}\n\nexport const initCache = <Data = any>(\n  provider: Cache<Data>,\n  options?: Partial<ProviderConfiguration>\n):\n  | [Cache<Data>, ScopedMutator, () => void, () => void]\n  | [Cache<Data>, ScopedMutator]\n  | undefined => {\n  // The global state for a specific provider will be used to deduplicate\n  // requests and store listeners. As well as a mutate function that is bound to\n  // the cache.\n\n  // The provider's global state might be already initialized. Let's try to get the\n  // global state associated with the provider first.\n  if (!SWRGlobalState.has(provider)) {\n    const opts = mergeObjects(defaultConfigOptions, options)\n\n    // If there's no global state bound to the provider, create a new one with the\n    // new mutate function.\n    const EVENT_REVALIDATORS = {}\n\n    const mutate = internalMutate.bind(UNDEFINED, provider) as ScopedMutator\n    let unmount = noop\n\n    const subscriptions: Record<string, ((current: any, prev: any) => void)[]> =\n      {}\n    const subscribe = (\n      key: string,\n      callback: (current: any, prev: any) => void\n    ) => {\n      const subs = subscriptions[key] || []\n      subscriptions[key] = subs\n\n      subs.push(callback)\n      return () => subs.splice(subs.indexOf(callback), 1)\n    }\n    const setter = (key: string, value: any, prev: any) => {\n      provider.set(key, value)\n      const subs = subscriptions[key]\n      if (subs) {\n        for (const fn of subs) {\n          fn(value, prev)\n        }\n      }\n    }\n\n    const initProvider = () => {\n      if (!SWRGlobalState.has(provider)) {\n        // Update the state if it's new, or if the provider has been extended.\n        SWRGlobalState.set(provider, [\n          EVENT_REVALIDATORS,\n          {},\n          {},\n          {},\n          mutate,\n          setter,\n          subscribe\n        ])\n        if (!IS_SERVER) {\n          // When listening to the native events for auto revalidations,\n          // we intentionally put a delay (setTimeout) here to make sure they are\n          // fired after immediate JavaScript executions, which can be\n          // React's state updates.\n          // This avoids some unnecessary revalidations such as\n          // https://github.com/vercel/swr/issues/1680.\n          const releaseFocus = opts.initFocus(\n            setTimeout.bind(\n              UNDEFINED,\n              revalidateAllKeys.bind(\n                UNDEFINED,\n                EVENT_REVALIDATORS,\n                revalidateEvents.FOCUS_EVENT\n              )\n            )\n          )\n          const releaseReconnect = opts.initReconnect(\n            setTimeout.bind(\n              UNDEFINED,\n              revalidateAllKeys.bind(\n                UNDEFINED,\n                EVENT_REVALIDATORS,\n                revalidateEvents.RECONNECT_EVENT\n              )\n            )\n          )\n          unmount = () => {\n            releaseFocus && releaseFocus()\n            releaseReconnect && releaseReconnect()\n            // When un-mounting, we need to remove the cache provider from the state\n            // storage too because it's a side-effect. Otherwise, when re-mounting we\n            // will not re-register those event listeners.\n            SWRGlobalState.delete(provider)\n          }\n        }\n      }\n    }\n    initProvider()\n\n    // This is a new provider, we need to initialize it and setup DOM events\n    // listeners for `focus` and `reconnect` actions.\n\n    // We might want to inject an extra layer on top of `provider` in the future,\n    // such as key serialization, auto GC, etc.\n    // For now, it's just a `Map` interface without any modifications.\n    return [provider, mutate, initProvider, unmount]\n  }\n\n  return [provider, (SWRGlobalState.get(provider) as GlobalState)[4]]\n}\n","import type {\n  PublicConfiguration,\n  FullConfiguration,\n  RevalidatorOptions,\n  Revalidator,\n  ScopedMutator,\n  Cache\n} from '../types'\nimport { stableHash } from './hash'\nimport { initCache } from './cache'\nimport { preset } from './web-preset'\nimport { slowConnection } from './env'\nimport { isUndefined, noop, mergeObjects } from './shared'\n\n// error retry\nconst onErrorRetry = (\n  _: unknown,\n  __: string,\n  config: Readonly<PublicConfiguration>,\n  revalidate: Revalidator,\n  opts: Required<RevalidatorOptions>\n): void => {\n  const maxRetryCount = config.errorRetryCount\n  const currentRetryCount = opts.retryCount\n\n  // Exponential backoff\n  const timeout =\n    ~~(\n      (Math.random() + 0.5) *\n      (1 << (currentRetryCount < 8 ? currentRetryCount : 8))\n    ) * config.errorRetryInterval\n\n  if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {\n    return\n  }\n\n  setTimeout(revalidate, timeout, opts)\n}\n\nconst compare = (currentData: any, newData: any) =>\n  stableHash(currentData) == stableHash(newData)\n\n// Default cache provider\nconst [cache, mutate] = initCache(new Map()) as [Cache<any>, ScopedMutator]\nexport { cache, mutate, compare }\n\n// Default config\nexport const defaultConfig: FullConfiguration = mergeObjects(\n  {\n    // events\n    onLoadingSlow: noop,\n    onSuccess: noop,\n    onError: noop,\n    onErrorRetry,\n    onDiscarded: noop,\n\n    // switches\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    revalidateIfStale: true,\n    shouldRetryOnError: true,\n\n    // timeouts\n    errorRetryInterval: slowConnection ? 10000 : 5000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: slowConnection ? 5000 : 3000,\n\n    // providers\n    compare,\n    isPaused: () => false,\n    cache,\n    mutate,\n    fallback: {}\n  },\n  // use web preset by default\n  preset\n)\n","import { mergeObjects } from './shared'\nimport type { FullConfiguration } from '../types'\n\nexport const mergeConfigs = (\n  a: Partial<FullConfiguration>,\n  b?: Partial<FullConfiguration>\n) => {\n  // Need to create a new object to avoid mutating the original here.\n  const v: Partial<FullConfiguration> = mergeObjects(a, b)\n\n  // If two configs are provided, merge their `use` and `fallback` options.\n  if (b) {\n    const { use: u1, fallback: f1 } = a\n    const { use: u2, fallback: f2 } = b\n    if (u1 && u2) {\n      v.use = u1.concat(u2)\n    }\n    if (f1 && f2) {\n      v.fallback = mergeObjects(f1, f2)\n    }\n  }\n\n  return v\n}\n","import type { FC, PropsWithChildren } from 'react'\nimport {\n  createContext,\n  createElement,\n  useContext,\n  useMemo,\n  useRef\n} from 'react'\nimport { cache as defaultCache } from './config'\nimport { initCache } from './cache'\nimport { mergeConfigs } from './merge-config'\nimport { UNDEFINED, mergeObjects, isFunction } from './shared'\nimport { useIsomorphicLayoutEffect } from './env'\nimport type { SWRConfiguration, FullConfiguration } from '../types'\n\nexport const SWRConfigContext = createContext<Partial<FullConfiguration>>({})\n\nconst SWRConfig: FC<\n  PropsWithChildren<{\n    value?:\n      | SWRConfiguration\n      | ((parentConfig?: SWRConfiguration) => SWRConfiguration)\n  }>\n> = props => {\n  const { value } = props\n  const parentConfig = useContext(SWRConfigContext)\n  const isFunctionalConfig = isFunction(value)\n  const config = useMemo(\n    () => (isFunctionalConfig ? value(parentConfig) : value),\n    [isFunctionalConfig, parentConfig, value]\n  )\n  // Extend parent context values and middleware.\n  const extendedConfig = useMemo(\n    () => (isFunctionalConfig ? config : mergeConfigs(parentConfig, config)),\n    [isFunctionalConfig, parentConfig, config]\n  )\n\n  // Should not use the inherited provider.\n  const provider = config && config.provider\n\n  // initialize the cache only on first access.\n  const cacheContextRef = useRef<ReturnType<typeof initCache>>(UNDEFINED)\n  if (provider && !cacheContextRef.current) {\n    cacheContextRef.current = initCache(\n      provider((extendedConfig as any).cache || defaultCache),\n      config\n    )\n  }\n  const cacheContext = cacheContextRef.current\n\n  // Override the cache if a new provider is given.\n  if (cacheContext) {\n    ;(extendedConfig as any).cache = cacheContext[0]\n    ;(extendedConfig as any).mutate = cacheContext[1]\n  }\n\n  // Unsubscribe events.\n  useIsomorphicLayoutEffect(() => {\n    if (cacheContext) {\n      cacheContext[2] && cacheContext[2]()\n      return cacheContext[3]\n    }\n  }, [])\n\n  return createElement(\n    SWRConfigContext.Provider,\n    mergeObjects(props, {\n      value: extendedConfig\n    })\n  )\n}\n\nexport default SWRConfig\n","export const INFINITE_PREFIX = '$inf$'\n","import React from 'react'\nimport { isWindowDefined } from './helper'\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__\n\nexport const use = enableDevtools\n  ? // @ts-expect-error\n    window.__SWR_DEVTOOLS_USE__\n  : []\n\nexport const setupDevTools = () => {\n  if (enableDevtools) {\n    // @ts-expect-error\n    window.__SWR_DEVTOOLS_REACT__ = React\n  }\n}\n","import { isFunction } from './shared'\n\nimport type { Key, Fetcher, SWRConfiguration } from '../types'\n\nexport const normalize = <KeyType = Key, Data = any>(\n  args:\n    | [KeyType]\n    | [KeyType, Fetcher<Data> | null]\n    | [KeyType, SWRConfiguration | undefined]\n    | [KeyType, Fetcher<Data> | null, SWRConfiguration | undefined]\n): [KeyType, Fetcher<Data> | null, Partial<SWRConfiguration<Data>>] => {\n  return isFunction(args[1])\n    ? [args[0], args[1], args[2] || {}]\n    : [args[0], null, (args[1] === null ? args[2] : args[1]) || {}]\n}\n","import { useContext } from 'react'\nimport { defaultConfig } from './config'\nimport { SWRConfigContext } from './config-context'\nimport { mergeObjects } from './shared'\nimport type { FullConfiguration } from '../types'\n\nexport const useSWRConfig = (): FullConfiguration => {\n  return mergeObjects(defaultConfig, useContext(SWRConfigContext))\n}\n","import type {\n  Middleware,\n  Key,\n  BareFetcher,\n  GlobalState,\n  FetcherResponse\n} from '../types'\nimport { serialize } from './serialize'\nimport { cache } from './config'\nimport { SWRGlobalState } from './global-state'\nimport { isUndefined } from './shared'\nimport { INFINITE_PREFIX } from '../constants'\n// Basically same as Fetcher but without Conditional Fetching\ntype PreloadFetcher<\n  Data = unknown,\n  SWRKey extends Key = Key\n> = SWRKey extends () => infer Arg\n  ? (arg: Arg) => FetcherResponse<Data>\n  : SWRKey extends infer Arg\n  ? (arg: Arg) => FetcherResponse<Data>\n  : never\n\nexport const preload = <\n  Data = any,\n  SWRKey extends Key = Key,\n  Fetcher extends BareFetcher = PreloadFetcher<Data, SWRKey>\n>(\n  key_: SWRKey,\n  fetcher: Fetcher\n): ReturnType<Fetcher> => {\n  const [key, fnArg] = serialize(key_)\n  const [, , , PRELOAD] = SWRGlobalState.get(cache) as GlobalState\n\n  // Prevent preload to be called multiple times before used.\n  if (PRELOAD[key]) return PRELOAD[key]\n\n  const req = fetcher(fnArg) as ReturnType<Fetcher>\n  PRELOAD[key] = req\n  return req\n}\n\nexport const middleware: Middleware =\n  useSWRNext => (key_, fetcher_, config) => {\n    // fetcher might be a sync function, so this should not be an async function\n    const fetcher =\n      fetcher_ &&\n      ((...args: any[]) => {\n        const [key] = serialize(key_)\n        const [, , , PRELOAD] = SWRGlobalState.get(cache) as GlobalState\n\n        if (key.startsWith(INFINITE_PREFIX)) {\n          // we want the infinite fetcher to be called.\n          // handling of the PRELOAD cache happens there.\n          return fetcher_(...args)\n        }\n\n        const req = PRELOAD[key]\n        if (isUndefined(req)) return fetcher_(...args)\n        delete PRELOAD[key]\n        return req\n      })\n    return useSWRNext(key_, fetcher, config)\n  }\n","import { use as devtoolsUse } from './devtools'\nimport { middleware as preload } from './preload'\n\nexport const BUILT_IN_MIDDLEWARE = devtoolsUse.concat(preload)\n","import { mergeConfigs } from './merge-config'\nimport { normalize } from './normalize-args'\nimport { useSWRConfig } from './use-swr-config'\nimport { BUILT_IN_MIDDLEWARE } from './middleware-preset'\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nexport const withArgs = <SWRType>(hook: any) => {\n  return function useSWRArgs(...args: any) {\n    // Get the default and inherited configuration.\n    const fallbackConfig = useSWRConfig()\n\n    // Normalize arguments.\n    const [key, fn, _config] = normalize<any, any>(args)\n\n    // Merge configurations.\n    const config = mergeConfigs(fallbackConfig, _config)\n\n    // Apply middleware\n    let next = hook\n    const { use } = config\n    const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE)\n    for (let i = middleware.length; i--; ) {\n      next = middleware[i](next)\n    }\n\n    return next(key, fn || config.fetcher || null, config)\n  } as unknown as SWRType\n}\n","type Callback = (...args: any[]) => any\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nexport const subscribeCallback = (\n  key: string,\n  callbacks: Record<string, Callback[]>,\n  callback: Callback\n) => {\n  const keyedRevalidators = callbacks[key] || (callbacks[key] = [])\n  keyedRevalidators.push(callback)\n\n  return () => {\n    const index = keyedRevalidators.indexOf(callback)\n\n    if (index >= 0) {\n      // O(1): faster than splice\n      keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1]\n      keyedRevalidators.pop()\n    }\n  }\n}\n","import { normalize } from './normalize-args'\n\nimport type {\n  Key,\n  Fetcher,\n  Middleware,\n  SWRConfiguration,\n  SWRHook\n} from '../types'\n\n// Create a custom hook with a middleware\nexport const withMiddleware = (\n  useSWR: SWRHook,\n  middleware: Middleware\n): SWRHook => {\n  return <Data = any, Error = any>(\n    ...args:\n      | [Key]\n      | [Key, Fetcher<Data> | null]\n      | [Key, SWRConfiguration | undefined]\n      | [Key, Fetcher<Data> | null, SWRConfiguration | undefined]\n  ) => {\n    const [key, fn, config] = normalize(args)\n    const uses = (config.use || []).concat(middleware)\n    return useSWR<Data, Error>(key, fn, { ...config, use: uses })\n  }\n}\n","import SWRConfig from './utils/config-context'\nimport * as revalidateEvents from './events'\nimport { INFINITE_PREFIX } from './constants'\n\nexport { SWRConfig, revalidateEvents, INFINITE_PREFIX }\n\nexport { initCache } from './utils/cache'\nexport { defaultConfig, cache, mutate, compare } from './utils/config'\nimport { setupDevTools } from './utils/devtools'\nexport * from './utils/env'\nexport { SWRGlobalState } from './utils/global-state'\nexport { stableHash } from './utils/hash'\nexport * from './utils/helper'\nexport * from './utils/shared'\nexport { mergeConfigs } from './utils/merge-config'\nexport { internalMutate } from './utils/mutate'\nexport { normalize } from './utils/normalize-args'\nexport { withArgs } from './utils/resolve-args'\nexport { serialize } from './utils/serialize'\nexport { subscribeCallback } from './utils/subscribe-key'\nexport { getTimestamp } from './utils/timestamp'\nexport { useSWRConfig } from './utils/use-swr-config'\nexport { preset, defaultConfigOptions } from './utils/web-preset'\nexport { withMiddleware } from './utils/with-middleware'\nexport { preload } from './utils/preload'\n\nexport * from './types'\n\nsetupDevTools()\n"],"names":["noop","UNDEFINED","OBJECT","Object","isUndefined","v","isFunction","mergeObjects","a","b","isPromiseLike","x","then","table","WeakMap","counter","stableHash","arg","type","constructor","isDate","Date","result","index","RegExp","get","set","Array","length","keys","sort","pop","toJSON","toString","JSON","stringify","SWRGlobalState","EMPTY_CACHE","INITIAL_CACHE","STR_UNDEFINED","isWindowDefined","window","isDocumentDefined","document","hasRequestAnimationFrame","createCacheHelper","cache","key","state","info","prev","online","isOnline","onWindowEvent","offWindowEvent","addEventListener","bind","removeEventListener","isVisible","visibilityState","initFocus","callback","initReconnect","onOnline","onOffline","preset","defaultConfigOptions","IS_REACT_LEGACY","React","useId","IS_SERVER","rAF","f","setTimeout","useIsomorphicLayoutEffect","useEffect","useLayoutEffect","navigatorConnection","navigator","connection","slowConnection","includes","effectiveType","saveData","serialize","err","args","isArray","__timestamp","getTimestamp","FOCUS_EVENT","RECONNECT_EVENT","MUTATE_EVENT","ERROR_REVALIDATE_EVENT","internalMutate","_key","_data","_opts","options","populateCache","throwOnError","revalidate","rollbackOnErrorOption","rollbackOnError","optimisticData","error","keyFilter","matchedKeys","it","test","_k","push","Promise","all","map","mutateByKey","EVENT_REVALIDATORS","MUTATION","FETCH","PRELOAD","startRevalidate","revalidators","data","revalidateEvents","beforeMutationTs","hasOptimisticData","displayedData","currentData","_c","committedData","catch","populateCachedData","resolve","revalidateAllKeys","initCache","provider","has","opts","mutate","unmount","subscriptions","subscribe","subs","splice","indexOf","setter","value","fn","initProvider","releaseFocus","releaseReconnect","delete","onErrorRetry","_","__","config","maxRetryCount","errorRetryCount","currentRetryCount","retryCount","timeout","Math","random","errorRetryInterval","compare","newData","Map","defaultConfig","onLoadingSlow","onSuccess","onError","onDiscarded","revalidateOnFocus","revalidateOnReconnect","revalidateIfStale","shouldRetryOnError","focusThrottleInterval","dedupingInterval","loadingTimeout","isPaused","fallback","mergeConfigs","use","u1","f1","u2","f2","concat","SWRConfigContext","createContext","SWRConfig","props","parentConfig","useContext","isFunctionalConfig","useMemo","extendedConfig","cacheContextRef","useRef","current","defaultCache","cacheContext","createElement","Provider","INFINITE_PREFIX","enableDevtools","__SWR_DEVTOOLS_USE__","setupDevTools","__SWR_DEVTOOLS_REACT__","normalize","useSWRConfig","preload","key_","fetcher","fnArg","req","middleware","useSWRNext","fetcher_","startsWith","BUILT_IN_MIDDLEWARE","devtoolsUse","withArgs","hook","useSWRArgs","fallbackConfig","_config","next","i","subscribeCallback","callbacks","keyedRevalidators","withMiddleware","useSWR","uses"],"mappings":"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"}